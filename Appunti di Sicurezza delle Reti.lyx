#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass amsbook
\begin_preamble
\usepackage{pgfplots}
\usepackage{caption}
\captionsetup{font=scriptsize,labelfont=scriptsize}
\usepackage{geometry}
\usepackage{marginnote}
\usepackage{imakeidx}
\usepackage{amsmath}
\usepackage{wrapfig}
\usepackage{hyphenat}

\renewcommand{\marginpar}[1]{\marginnote{\footnotesize #1}}
\setlength\marginparsep{0.3cm}
\setlength\marginparwidth{3cm}
\newcommand\xqed[1]{%
  \leavevmode\unskip\penalty9999 \hbox{}\nobreak\hfill
  \quad\hbox{#1}}
\newcommand\demo{\xqed{$\square$}}
\newcommand\sln[1]{\xqed{$\scriptstyle Sol.\,#1$}}
\makeindex
\end_preamble
\use_default_options true
\begin_removed_modules
theorems-ams
\end_removed_modules
\begin_modules
eqs-within-sections
figs-within-sections
tabs-within-sections
fix-cm
theorems-ams-chap-bytype
\end_modules
\maintain_unincluded_children false
\language italian
\language_package auto
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\float_placement !h
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "Appunti di Fondamenti di fondamenti di Automatica"
\pdf_author "Lorenzo Prosseda"
\pdf_subject "Corso di fondamenti di Automatica del prof. Fagiano, Politecnico di Milano 2017-2018"
\pdf_keywords "automatica"
\pdf_bookmarks true
\pdf_bookmarksnumbered true
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder true
\pdf_colorlinks false
\pdf_backref page
\pdf_pdfusetitle false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 4cm
\bottommargin 2.2cm
\headheight 2cm
\headsep 1cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 1
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
newgeometry{margin=1cm}
\end_layout

\end_inset


\end_layout

\begin_layout Title
Appunti di Sicurezza delle reti
\end_layout

\begin_layout Author
Lorenzo Prosseda, a.a.
 2018-2019
\end_layout

\begin_layout Dedicatory
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset VSpace 20cm
\end_inset


\begin_inset Graphics
	filename /home/l3r0/Documenti/Polimi/Automatica/Illustrazioni/gfdl-logo.pdf
	display false

\end_inset


\end_layout

\end_inset

Copyright 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
textcopyright
\end_layout

\end_inset

 2019 Lorenzo Prosseda.
 Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.3 or any later
 version published by the Free Software Foundation; with no Invariant Sections,
 no Front-Cover Texts, and no Back-Cover Texts.
 A copy of the license is included in the file called "LICENSE".
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
restoregeometry
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\lm}[3]{\underset{{\scriptstyle #1\rightarrow#2}}{\lim}#3}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\serie}[3]{\overset{{\scriptstyle #2}}{\underset{{\scriptstyle #1}}{\sum}}#3}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\somme}[4]{\underset{{\scriptstyle #1}}{\overset{{\scriptstyle #2}}{\int}}#3d#4}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\mcd}[2]{\mathrm{{\scriptstyle MCD}}\left(#1,\,#2\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\mcm}[2]{\mathrm{{\scriptstyle mcm}}\left(#1,\,#2\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\cgm}[3]{#1\equiv#2\left(\text{mod}\,#3\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\ncgm}[3]{#1\not\equiv#2\left(\text{mod}\,#3\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\mod}[2]{#1\,\text{mod}\,#2}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\ord}[1]{\mathrm{{\scriptstyle ORD}}\left(#1\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\nirr}[2]{N_{{\scriptscriptstyle irr}}\left(#1,\,#2\right)}
\end_inset


\end_layout

\begin_layout Standard
\begin_inset FormulaMacro
\newcommand{\tc}{\,:\,}
\end_inset


\end_layout

\begin_layout Part
Crittografia
\end_layout

\begin_layout Chapter
Teoria dei numeri
\end_layout

\begin_layout Section
Proprietà degli interi
\end_layout

\begin_layout Standard
Da ora in avanti parleremo di numeri interi, positivi o negativi, operando
 all'interno dell'insieme 
\begin_inset Formula $\mathbb{Z}$
\end_inset

; enunciamo la proprietà di divisione nel modo seguente: presi due interi
 
\begin_inset Formula $a,\,b\in\mathbb{Z}$
\end_inset

 non uguali (
\begin_inset Formula $a\neq b$
\end_inset

) si dice che 
\begin_inset Formula $a$
\end_inset

 divide 
\begin_inset Formula $b$
\end_inset

 quando 
\begin_inset Formula $a$
\end_inset

 è un divisore di 
\begin_inset Formula $b$
\end_inset

, ovvero
\begin_inset Formula 
\[
a\backslash b\implies\exists k\tc b=k\cdot a
\]

\end_inset


\end_layout

\begin_layout Standard
Dalla precedente deduciamo che 
\begin_inset Formula $b$
\end_inset

 dovrà essere un multiplo di 
\begin_inset Formula $a$
\end_inset

.
 Inoltre, otteniamo anche che:
\begin_inset Formula 
\[
\forall a\in\mathbb{Z}\,:\,a\backslash0;\;\nexists a\in\mathbb{Z}\tc0\backslash a;\;\forall a\in\mathbb{Z}\,:\,a\backslash a
\]

\end_inset


\end_layout

\begin_layout Standard
La relazione di divisione introdotta ammette la proprietà transitiva:
\begin_inset Formula 
\[
\forall a,b,c\in\mathbb{Z}\,\land\,a\neq b\neq c\tc a\backslash b\,\land\,b\backslash c\implies a\backslash c
\]

\end_inset


\end_layout

\begin_layout Section
Numeri primi
\end_layout

\begin_layout Subsection
Definizione e proprietà
\end_layout

\begin_layout Standard
Un numero 
\begin_inset Formula $a$
\end_inset

 si dice primo quando è divisibile solo per 1 e per sé stesso (ovvero se
 vale 
\begin_inset Formula $\forall b\in\mathbb{Z}\tc b\backslash a\iff b=1\,\lor\,b=a$
\end_inset

); un numero composto è scomponibile in un numero finito di fattori, e questa
 scomposizione è unica.
 Determinare la primalità di un numero tuttavia non è cosa facile; introduciamo
 il seguente teorema:
\end_layout

\begin_layout Theorem
Sia 
\begin_inset Formula $\pi\left(n\right)\coloneqq$
\end_inset


\begin_inset Quotes eld
\end_inset

numero di numeri primi fino a 
\begin_inset Formula $n$
\end_inset


\begin_inset Quotes erd
\end_inset

, allora vale
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Teorema dei numeri primi
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Numeri primi, teorema
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:Numeri-primi"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.1cm]
\end_layout

\end_inset


\begin_inset Formula 
\[
\pi\left(n\right)\sim\dfrac{n}{\ln\left(n\right)}
\]

\end_inset


\end_layout

\begin_layout Standard
Alcuni algoritmi crittografici usano i numeri primi come 
\begin_inset Quotes eld
\end_inset

ingredienti
\begin_inset Quotes erd
\end_inset

 per creare le chiavi: in questi casi il teorema introdotto si dimostra
 molto utile per determinare la quantità di numeri primi che è possibile
 ottenere con una data quantità di cifre.
\end_layout

\begin_layout Example
Determinare una stima della quantità di numeri primi che è possibile ottenere
 a partire da 100 cifre.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Usando il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Numeri-primi"
plural "false"
caps "false"
noprefix "false"

\end_inset

 possiamo scrivere la quantità di numeri primi con 100 cifre come
\begin_inset Formula 
\[
\pi\left(10^{100}\right)-\pi\left(10^{99}\right)=\frac{10^{100}}{100\ln\left(10\right)}-\frac{10^{99}}{99\ln\left(10\right)}\simeq\boxed{10^{97}}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Se fossimo nel contesto di un algoritmo di cifratura, pur sapendo che la
 chiave sia un numero primo di 100 cifre, dovremmo analizzare in ogni caso
 
\begin_inset Formula $10^{97}$
\end_inset

 possibili candidati.
\end_layout

\begin_layout Standard
Prendiamo
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
La funzione 
\begin_inset Formula $\mcd ab$
\end_inset

 indica il massimo comune divisore tra 
\begin_inset Formula $a$
\end_inset

 e 
\begin_inset Formula $b$
\end_inset


\end_layout

\end_inset

 ora 
\begin_inset Formula $a,\,b\in\mathbb{Z}$
\end_inset

 tali che 
\begin_inset Formula $\mcd ab=1$
\end_inset

: in tal caso diremo che 
\begin_inset Formula $a$
\end_inset

 e 
\begin_inset Formula $b$
\end_inset

 sono 
\emph on
coprimi
\emph default
 o 
\emph on
primi relativi
\emph default
, indicando la loro relazione come 
\begin_inset Formula $a\perp b$
\end_inset

; da questa relazione segue che due numeri coprimi non hanno fattori in
 comune.
\end_layout

\begin_layout Standard
Escluso il numero 2, tutti i primi sono dispari, e sono divisi in due classi:
 preso un numero primo 
\begin_inset Formula $p$
\end_inset

, esso appartiene a una delle seguenti classi:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\cgm p14$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\cgm p34$
\end_inset


\end_layout

\begin_layout Standard
L'operatore 
\begin_inset Formula $\equiv$
\end_inset

 indica la congruenza in modulo: si dice che un numero 
\begin_inset Formula $a\in\mathbb{Z}$
\end_inset

 è 
\emph on
congruente a 1 modulo 
\begin_inset Formula $n$
\end_inset


\emph default
 (e si scrive 
\begin_inset Formula $\cgm a1n$
\end_inset

) se il resto della divisione di 
\begin_inset Formula $a$
\end_inset

 per 
\begin_inset Formula $n$
\end_inset

 è 1.
\end_layout

\begin_layout Standard
Componendo le due classi osserviamo che tutti i numeri primi 
\begin_inset Formula $p$
\end_inset

 possono essere indicati come 
\begin_inset Formula 
\begin{equation}
p=6k\pm1\implies\cgm p{\pm1}6,\,k\in\mathbb{Z}\label{eq:Successione-primi-classi}
\end{equation}

\end_inset

Troveremo per esempio 
\begin_inset Formula $p_{k=1}=6\pm1=\left\{ 5,\,7\right\} ,\,p_{k=2}=12\pm1=\left\{ 11,\,13\right\} ,\,p_{k=3}=18\pm1=\left\{ 17,\,19\right\} ,\,\ldots\,$
\end_inset

; osserviamo che tutti i numeri della successione appena definita sono primi,
 tuttavia non tutti i primi appartengono a questa successione.
\end_layout

\begin_layout Subsection
Test di primalità con classi
\end_layout

\begin_layout Standard
Possiamo usare la successione 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Successione-primi-classi"
plural "false"
caps "false"
noprefix "false"

\end_inset

 per testare la primalità di un numero intero: sia 
\begin_inset Formula $n>0$
\end_inset

 un numero del quale si vuole conoscere la primalità; allora definiamo un
 algoritmo iterativo che costruisce la successione 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Successione-primi-classi"
plural "false"
caps "false"
noprefix "false"

\end_inset

 incrementando 
\begin_inset Formula $k$
\end_inset

, e per ogni primo 
\begin_inset Formula $p_{k}$
\end_inset

 ottenuto, se non vale 
\begin_inset Formula $p_{k}\backslash n$
\end_inset

 fino a che 
\begin_inset Formula $6k+1\leq\sqrt{n}$
\end_inset

, allora 
\begin_inset Formula $n$
\end_inset

 è primo.
\end_layout

\begin_layout Section
Algoritmo di Euclide
\end_layout

\begin_layout Subsection
Definizione della successione
\end_layout

\begin_layout Standard
La funzione principale di questo algoritmo, è calcolare il massimo comune
 divisore di due numeri; presi due interi 
\begin_inset Formula $m$
\end_inset

 e 
\begin_inset Formula $n$
\end_inset

 tali che 
\begin_inset Formula $m<n$
\end_inset

, vogliamo calcolare 
\begin_inset Formula $\mcd mn$
\end_inset

.
 Tramite questo algoritmo otteniamo il risultato desiderato, senza passare
 per la scomposizione in fattori primi di 
\begin_inset Formula $m$
\end_inset

 e 
\begin_inset Formula $n$
\end_inset

; definendo la seguente successione:
\begin_inset Formula 
\begin{align}
\mcd mn & =\mcd{\mod nm}n\label{eq:Successione-Euclide}\\
 & =\mcd{\mod{\left(\mod nm\right)}n}n\nonumber \\
 & =\mcd 0n=n\nonumber 
\end{align}

\end_inset


\end_layout

\begin_layout Standard
Osserviamo come calcolare questa successione con un esempio.
\end_layout

\begin_layout Example

\emph on
Calcolare il massimo comune divisore tra 482 e 1180
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Procediamo applicando la definizione 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Successione-Euclide"
plural "false"
caps "false"
noprefix "false"

\end_inset

: per farlo dovremo scomporre il numero maggiore (
\begin_inset Formula $n$
\end_inset

 dalla definizione) usando il suo modulo rispetto al minore (
\begin_inset Formula $m$
\end_inset

); in pratica prendiamo 1180 e lo dividiamo per 482, conservando il residuo
 dell'operazione da usare nel termine successivo della successione
\begin_inset Formula 
\[
\mcd{482}{1180}\rightarrow1180=2\cdot482+216
\]

\end_inset

proseguiamo lavorando col resto del passo precedente (216) e col valore
 precedentemente usato per calcolare il modulo (482)
\begin_inset Formula 
\begin{align*}
\mcd{216}{482} & \rightarrow482=2\cdot216+50\\
\mcd{50}{216} & \rightarrow216=4\cdot50+16\\
\mcd{16}{50} & \rightarrow3\cdot16+\boldsymbol{2}=\boldsymbol{d}\\
\mcd 2{16} & \rightarrow8\cdot2+\boxed{0}
\end{align*}

\end_inset

La successione termina quando si ottiene resto zero; il resto chiamato 
\begin_inset Formula $d$
\end_inset

, ottenuto alla penultima riga (sopra a quella con resto 0, vale 2 in questo
 caso) è effettivamente il risultato della richiesta: 
\begin_inset Formula $\mcd{482}{1180}=2$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Algoritmo in forma simbolica
\end_layout

\begin_layout Standard
Presi 
\begin_inset Formula $a,\,b\in\mathbb{Z}$
\end_inset

 tali che 
\begin_inset Formula $a<b$
\end_inset

, otteniamo 
\begin_inset Formula $\mcd ab=d$
\end_inset

 applicando 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Successione-Euclide"
plural "false"
caps "false"
noprefix "false"

\end_inset

 nel seguente modo:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Algoritmo di Euclide
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Euclide, algoritmo di
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[1.8cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{array}{c}
b=q_{1}\cdot a+r_{1}\\
a=q_{2}\cdot r_{1}+r_{2}\\
r_{1}=q_{3}\cdot r_{2}+r_{3}\\
\vdots\\
r_{k-2}=q_{k}\cdot r_{k-1}+r_{k}\\
r_{k-1}=q_{k+1}\cdot r_{k}+0\\
\boxed{r_{k}=d}
\end{array}\label{eq:Algoritmo-Euclide}
\end{equation}

\end_inset

dove 
\begin_inset Formula $q_{i}$
\end_inset

 è l'
\begin_inset Formula $i$
\end_inset

-esimo quoziente e 
\begin_inset Formula $r_{i}$
\end_inset

 è l'
\begin_inset Formula $i$
\end_inset

-esimo resto; dall'algoritmo si può dedurre che, presi 
\begin_inset Formula $a,\,b\neq0$
\end_inset

 e sia 
\begin_inset Formula $d=\mcd ab$
\end_inset

, allora è vero che 
\begin_inset Formula $\exists x,\,y\in\mathbb{Z}\tc a\cdot x+b\cdot y=d$
\end_inset

.
 Questo risulta chiaro se immaginiamo che i due interi cercati siano anche
 negativi; per trovare tali interi è necessario utilizzare una estensione
 del 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Subsection
Algoritmo esteso
\end_layout

\begin_layout Standard
L'algoritmo di Euclide presentato nella sottosezione precedente può essere
 esteso, impiegando nel suo svolgimento due successioni 
\begin_inset Formula $\left\{ x_{k}\right\} $
\end_inset

 e 
\begin_inset Formula $\left\{ y_{k}\right\} $
\end_inset

: esse avranno i primi due valori ben definiti, come
\begin_inset Formula 
\begin{equation}
x_{0}=,\,x_{1}=1;\;y_{0}=1,\,y_{1}=0\label{eq:Premessa-successioni-Euclide-esteso}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Facendo corrispondere ai passi 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide"
plural "false"
caps "false"
noprefix "false"

\end_inset

 gli elementi delle successioni 
\begin_inset Formula $\left\{ x_{k}\right\} $
\end_inset

 e 
\begin_inset Formula $\left\{ y_{k}\right\} $
\end_inset

, possiamo ottenere gli elementi dal secondo in poi come:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Algoritmo di Euclide esteso
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Euclide, algoritmo esteso di
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[1.2cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\begin{array}{cc}
x_{2}=-q_{1}\cdot x_{1}+x_{0} & y_{2}=-q_{1}\cdot y_{1}+y_{0}\\
x_{3}=-q_{2}\cdot x_{2}+x_{1} & y_{3}=-q_{2}\cdot y_{2}+y_{1}\\
x_{4}=-q_{3}\cdot x_{3}+x_{2} & y_{4}=-q_{3}\cdot y_{3}+y_{2}\\
\vdots & \vdots\\
\boxed{x_{k+1}}=-q_{k}\cdot x_{k}+x_{k-1} & \boxed{y_{k+1}}=-q_{k}\cdot y_{k}+y_{k-1}
\end{array}\label{eq:Algoritmo-Euclide-esteso}
\end{equation}

\end_inset

Osserviamo che gli elementi delle successioni in 
\begin_inset Formula $x$
\end_inset

 e 
\begin_inset Formula $y$
\end_inset

 si ottengono in modo analogo, tuttavia le due successioni sono inizializzate
 in modo differente 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Premessa-successioni-Euclide-esteso"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Euclide Esteso ci permette di affermare che
\begin_inset Formula 
\[
\mcd ab=d=a\cdot x_{k+1}+b\cdot y_{k+1}
\]

\end_inset

dove gli interi 
\begin_inset Formula $x_{k+1}$
\end_inset

 e 
\begin_inset Formula $y_{k+1}$
\end_inset

 sono ottenuti dalle successioni 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide-esteso"
plural "false"
caps "false"
noprefix "false"

\end_inset

; normalmente uno dei due è positivo e l'altro è negativo.
\end_layout

\begin_layout Section
Congruenza in modulo
\end_layout

\begin_layout Subsection
Definizione e proprietà
\end_layout

\begin_layout Standard
Nelle sezioni precedenti abbiamo introdotto il simbolo di congruenza `
\begin_inset Formula $\equiv$
\end_inset

', che usato nel modo seguente implica che
\begin_inset Formula 
\[
\cgm abn\implies\mod an=\mod bn\implies a-b=k\cdot n
\]

\end_inset

ovvero il fatto che 
\begin_inset Formula $a$
\end_inset

 sia congruente in modulo 
\begin_inset Formula $n$
\end_inset

 a 
\begin_inset Formula $b$
\end_inset

 implica il fatto che 
\begin_inset Formula $a$
\end_inset

 e 
\begin_inset Formula $b$
\end_inset

 siano multipli; possiamo infatti dedurlo osservando l'ultima implicazione,
 riscritta come
\begin_inset Formula 
\[
a=b+k\cdot n
\]

\end_inset


\end_layout

\begin_layout Standard
Per la congruenza in modulo valgono alcune proprietà simili a quelle dell'uguagl
ianza:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\cgm a0n\iff n\backslash a$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\forall a\in\mathbb{Z}\tc\cgm aan$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\cgm abn\iff\cgm ban$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\cgm abn\land\cgm bcn\implies\cgm acn$
\end_inset


\end_layout

\begin_layout Subsection
Insieme dei residui
\end_layout

\begin_layout Standard
Fin'ora abbiamo lavorato all'interno dell'insieme dei numeri interi 
\begin_inset Formula $\mathbb{Z}$
\end_inset

; introduciamo l'insieme dei residui modulo 
\begin_inset Formula $n$
\end_inset

, indicato come 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

, che contiene l'insieme dei valori da 0 a 
\begin_inset Formula $n-1$
\end_inset

 e al suo interno sono definite ciclicamente le operazioni di addizione,
 sottrazione e moltiplicazione; osserviamo un esempio sull'addizione.
\end_layout

\begin_layout Example

\emph on
\begin_inset CommandInset label
LatexCommand label
name "ex:Operazioni-insieme-residui"

\end_inset

Determinare i risultati delle seguenti operazioni, all'interno dell'insieme
 
\begin_inset Formula $\mathbb{Z}_{10}$
\end_inset

: 
\begin_inset Formula $4+5,\,5+5,\,2-3,\,3\cdot4$
\end_inset

.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Dalla definizione sappiamo che 
\begin_inset Formula $\mathbb{Z}_{10}=\left\{ 0,1,2,3,4,5,6,7,8,9\right\} $
\end_inset

, allora le operazioni richieste valgono:
\begin_inset Formula 
\[
4+5=9,\;5+5=0,\;2-3=9,\;3\cdot4=2
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
La divisione in un insieme dei residui non è definita in modo banale come
 le altre tre operazioni; introdurremo in seguito questa operazione.
\end_layout

\begin_layout Subsection
Insieme ridotto dei residui
\end_layout

\begin_layout Standard
Dato un insieme dei residui 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

, possiamo definire il suo insieme ridotto 
\begin_inset Formula $\mathbb{Z}_{n}^{*}$
\end_inset

, che contiene gli elementi di 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

 che sono coprimi rispetto a 
\begin_inset Formula $n$
\end_inset

, ovvero
\begin_inset Formula 
\[
\forall z\in\mathbb{Z}_{n}^{*}\tc z\in\mathbb{Z}_{n}\land z\perp n
\]

\end_inset

Procedendo con l'Esempio 
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:Operazioni-insieme-residui"
plural "false"
caps "false"
noprefix "false"

\end_inset

, l'insieme ridotto dei residui modulo 10 avrà i seguenti elementi al suo
 interno:
\begin_inset Formula 
\[
\mathbb{Z}_{10}^{*}=\left\{ 1,3,7,9\right\} 
\]

\end_inset

Notiamo che lo zero è sempre escluso dall'insieme ridotto, perché non è
 coprimo rispetto ad alcun intero; la cardinalità di 
\begin_inset Formula $\mathbb{Z}_{n}^{*}$
\end_inset

 è determinata da una funzione di 
\begin_inset Formula $n$
\end_inset

 chiamata 
\emph on
toziente
\emph default
 o 
\emph on

\begin_inset Formula $\varphi$
\end_inset

 di Eulero
\emph default
; in particolare vale 
\begin_inset Formula $\varphi\left(10\right)=4$
\end_inset

 (vedremo in seguito come calcolare questa funzione).
\end_layout

\begin_layout Subsection
Equazioni congruenziali
\end_layout

\begin_layout Standard
Una equazione congruenziale è una relazione definita su un'insieme di residui;
 nel seguito vedremo delle proprietà che ci permetteranno di operare con
 queste relazioni.
\end_layout

\begin_layout Proposition
Prendiamo un intero 
\begin_inset Formula $n\neq0$
\end_inset

 e quattro interi 
\begin_inset Formula $a,b,c,d$
\end_inset

 tali che 
\emph on

\begin_inset Formula $\cgm abn$
\end_inset

 
\emph default
e
\emph on
 
\begin_inset Formula $\cgm cdn$
\end_inset


\emph default
; allora si verifica che
\emph on

\begin_inset Formula 
\[
\cgm{a+c}{b+d}n,\;\cgm{a-c}{b-d}n,\;\cgm{a\cdot c}{b\cdot d}n
\]

\end_inset


\end_layout

\begin_layout Standard
Possiamo usare queste proprietà per risolvere la seguente equazione congruenzial
e.
\end_layout

\begin_layout Example

\emph on
Risolvere rispetto a 
\begin_inset Formula $x$
\end_inset

 l'equazione 
\emph default

\begin_inset Formula $\cgm{x+7}3{17}$
\end_inset


\emph on
.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Dato che 7 è congruente a 3 in modulo 17, possiamo sfruttare la seconda
 proprietà, per cui
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{x+7\boldsymbol{-7}}{3\boldsymbol{-7}}{17}\\
\cgm x{-4}{17}
\end{array}
\]

\end_inset

Osservando che 
\begin_inset Formula $17-4=13$
\end_inset

, otteniamo infine (è equivalente a scrivere la congruenza con 
\begin_inset Formula $-4$
\end_inset

)
\begin_inset Formula 
\[
\cgm x{13}{17}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ora introduciamo il concetto di divisione nell'insieme dei residui, con
 una seconda proposizione.
\end_layout

\begin_layout Proposition
Prendiamo un intero 
\begin_inset Formula $n\neq0$
\end_inset

 e tre interi 
\begin_inset Formula $a,b,c$
\end_inset

 con 
\begin_inset Formula $a\perp n$
\end_inset

 e vale 
\emph on

\begin_inset Formula $\cgm{a\cdot b}{a\cdot c}n$
\end_inset


\emph default
; allora possiamo dire che 
\emph on

\begin_inset Formula $\cgm{a\cdot b}{a\cdot c}n\implies\cgm bcn$
\end_inset


\emph default
, tramite la moltiplicazione da ambo i lati per l'inverso 
\begin_inset Formula $a^{-1}$
\end_inset


\end_layout

\begin_layout Standard
Possiamo risolvere una forma di equazione congruenziale più elaborata.
\end_layout

\begin_layout Example

\emph on
Risolvere rispetto a 
\begin_inset Formula $x$
\end_inset

 l'equazione 
\emph default

\begin_inset Formula $\cgm{2x+7}3{17}$
\end_inset


\emph on
.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Come nel caso precedente, possiamo sottrarre 7 da entrambi i lati, dato
 che 
\begin_inset Formula $\cgm 73{17}$
\end_inset

, ottenendo
\begin_inset Formula 
\[
\cgm{2x}{-4}{17}
\]

\end_inset

Ora sfruttando il fatto che 
\begin_inset Formula $2\perp17$
\end_inset

 la precedente diventa
\begin_inset Formula 
\[
\cgm x{-2}{17}=\cgm x{15}{17}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Example

\emph on
Risolvere rispetto a 
\begin_inset Formula $x$
\end_inset

 l'equazione 
\emph default

\begin_inset Formula $\cgm{5x+6}{13}{11}$
\end_inset


\emph on
.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Osservando che 
\begin_inset Formula $\cgm 6{13}{11}$
\end_inset

, applichiamo la proprietà della divisione e otteniamo
\begin_inset Formula 
\[
\cgm{5x}7{11}
\]

\end_inset

Se ora usiamo la proprietà della divisione (vale 
\begin_inset Formula $5\perp11$
\end_inset

) dovremo scrivere
\begin_inset Formula 
\[
\cgm x{\hat{\frac{7}{5}}}{11}
\]

\end_inset

dove la frazione 
\begin_inset Formula $\hat{\nicefrac{7}{5}}$
\end_inset

 in realtà non esiste nell'insieme 
\begin_inset Formula $\mathbb{Z}_{11}$
\end_inset

; tuttavia sappiamo che 
\begin_inset Formula $5x$
\end_inset

 è congruente modulo 11 a 7, ma anche a (per la ciclicità dell'insieme dei
 residui) 
\begin_inset Formula $7+11,\,7+22,\,\ldots\,,7+k\cdot11$
\end_inset

; il primo numero che sia un multiplo di 5 si ha per 3; abbiamo ottenuto
 che 
\begin_inset Formula $\left[7=40\right]\ni\mathbb{Z}_{11}$
\end_inset

, quindi possiamo scrivere
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{5x}{40}{11}\\
\cgm x8{11}
\end{array}
\]

\end_inset

Possiamo in un certo senso affermare che 8 si comporta come 
\begin_inset Formula $\nicefrac{7}{5}$
\end_inset

 in 
\begin_inset Formula $\mathbb{Z}_{11}$
\end_inset

.
\end_layout

\begin_layout Example
Esiste una seconda strada per risolvere questo esercizio; sapendo che 5
 e 11 sono primi relativi, usiamo il prodotto invece della divisione:
\begin_inset Formula 
\[
\cgm{5x\cdot\boldsymbol{5^{-1}}}{7\cdot\boldsymbol{5^{-1}}}{11}
\]

\end_inset

L'inverso di un numero 
\begin_inset Formula $n$
\end_inset

 è quel numero 
\begin_inset Formula $m$
\end_inset

 tale che 
\begin_inset Formula $n\cdot m=1$
\end_inset

; dunque cerchiamo l'elemento di 
\begin_inset Formula $\mathbb{Z}_{11}$
\end_inset

 che moltiplicato per 5 risulta 1; troviamo 
\begin_inset Formula $m\cdot5=1|_{\mathbb{Z}_{11}}\implies m=9$
\end_inset

, da cui segue che
\begin_inset Formula 
\[
\cgm x{7\cdot9}{11}
\]

\end_inset

e dato che 
\begin_inset Formula $7\cdot9=63=5\cdot11+8$
\end_inset

 la precedente si scrive come
\begin_inset Formula 
\[
\cgm x8{11}
\]

\end_inset

Abbiamo ottenuto il medesimo risultato a cui siamo arrivati attraverso il
 primo procedimento.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Remark
Presi 
\begin_inset Formula $a\in\mathbb{Z}_{n}$
\end_inset

 e 
\begin_inset Formula $b\notin\mathbb{Z}_{n}^{*}$
\end_inset

, non è definita la divisione 
\begin_inset Formula $a\div b$
\end_inset

 (deve infatti valere 
\begin_inset Formula $b\perp n\implies b\in\mathbb{Z}_{n}^{*}$
\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Se prendiamo l'equazione 
\begin_inset Formula $\cgm{a\cdot x}bn$
\end_inset

, essa ammetterà soluzione se vale 
\begin_inset Formula $a\perp n$
\end_inset

; in tal caso 
\begin_inset Formula $\exists a^{-1}\in\mathbb{Z}_{n}^{*}$
\end_inset

 e la soluzione sarà 
\begin_inset Formula $\cgm x{b\cdot a^{-1}}n$
\end_inset

.
\end_layout

\begin_layout Standard
Cosa possiamo concludere nel caso in cui, data l'equazione 
\begin_inset Formula $E:\,\cgm{a\cdot x}bn$
\end_inset

, non sia vero che 
\begin_inset Formula $a\perp n$
\end_inset

, cioè nel caso in cui 
\begin_inset Formula $\mcd an=d>1$
\end_inset

? In tal caso, l'equazione può non ammettere soluzione o ammetterne 
\begin_inset Formula $d$
\end_inset

.
\end_layout

\begin_layout Standard
Se 
\begin_inset Formula $d\backslash b$
\end_inset

 allora dividiamo per 
\begin_inset Formula $d$
\end_inset

 tutte le quantità costanti, ottenendo 
\begin_inset Formula 
\[
\overline{E}:\,\cgm{\frac{a}{d}x}{\frac{b}{d}}{\frac{n}{d}}
\]

\end_inset

questa equazione ha ora una soluzione, perché 
\begin_inset Formula $\mcd an=d\implies\mcd{\frac{a}{d}}{\frac{n}{d}}=\frac{d}{d}=1$
\end_inset

 e ricadiamo nel caso dell'osservazione precedente.
\end_layout

\begin_layout Standard
Otteniamo la soluzione dell'equazione 
\begin_inset Formula $\overline{E}$
\end_inset

 e la chiamiamo 
\begin_inset Formula $x_{0}$
\end_inset

, la quale sarà in modulo 
\begin_inset Formula $\nicefrac{n}{d}$
\end_inset

 (
\begin_inset Formula $x_{0}\in\mathbb{Z}_{n/d}$
\end_inset

); dato che l'equazione di partenza 
\begin_inset Formula $E$
\end_inset

 ha soluzioni in 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

, esse saranno i termini della successione
\begin_inset Formula 
\[
\left\{ x\right\} =x_{0},\,x_{0}+\frac{n}{d},\,x_{0}+2\frac{n}{d},\,\ldots\,,\,x_{0}+\left(d-1\right)\frac{n}{d}
\]

\end_inset

Osserviamo l'esempio di un'equazione con queste caratteristiche.
\end_layout

\begin_layout Example

\emph on
Risolvere rispetto a 
\begin_inset Formula $x$
\end_inset

 l'equazione 
\emph default

\begin_inset Formula $\cgm{12x}{21}{39}$
\end_inset


\emph on
.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Osserviamo subito che 
\begin_inset Formula $\mcd{12}{39}=3$
\end_inset

, dunque l'equazione avrà 0 o 3 soluzioni; dividiamo le costanti per 3 e
 otteniamo
\begin_inset Formula 
\[
\cgm{4x}7{13}
\]

\end_inset

da cui otteniamo 
\begin_inset Formula $\cgm x{\hat{\frac{7}{4}}}{13}$
\end_inset

 e trovando 
\begin_inset Formula $4\backslash\left(7+1\cdot13\right)=20$
\end_inset

 la precedente equazione fornisce una soluzione 
\begin_inset Formula $\cgm{x_{0}}5n$
\end_inset

; adesso usiamo la successione delle soluzioni 
\begin_inset Formula $\left\{ x\right\} $
\end_inset

 per ottenere tutte le soluzioni dell'equazione di partenza:
\begin_inset Formula 
\[
x=\left\{ x_{0}=\boxed{5},\,x_{0}+\frac{39}{3}=\boxed{18},\,x_{0}+\frac{2\cdot39}{3}=\boxed{31}\right\} 
\]

\end_inset

Possiamo immaginare le radici di 
\begin_inset Formula $E$
\end_inset

 come dei punti su una circonferenza, a distanza 
\begin_inset Formula $d/n$
\end_inset

 da 
\begin_inset Formula $x_{0}$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Example
Posto che valga 
\begin_inset Formula $a\perp n$
\end_inset

 (ovvero 
\begin_inset Formula $\mcd an=1$
\end_inset

), come possiamo calcolare l'inverso 
\begin_inset Formula $a^{-1}$
\end_inset

? Potremmo tentare tutti i numeri da 
\begin_inset Formula $1$
\end_inset

 a 
\begin_inset Formula $n-1$
\end_inset

 conducendo un'analisi esaustiva, tuttavia per 
\begin_inset Formula $n$
\end_inset

 molto grande questo non è pratico; usiamo allora l'algoritmo di Euclide
 esteso 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide-esteso"
plural "false"
caps "false"
noprefix "false"

\end_inset

: esso ci garantisce che
\begin_inset Formula 
\[
\mcd an=1\implies\exists s,t\in\mathbb{Z}_{n}\tc a\cdot s+n\cdot t=1
\]

\end_inset

segue dalla precedente relazione che 
\begin_inset Formula $a\cdot s=1-n\cdot t$
\end_inset

, allora abbiamo 
\begin_inset Formula $\cgm{a\cdot s}1n$
\end_inset

 e risolvendo l'equazione si ottiene
\begin_inset Formula 
\[
\cgm s{a^{-1}}n
\]

\end_inset

ovvero il numero 
\begin_inset Formula $s$
\end_inset

 è proprio l'elemento finale 
\begin_inset Formula $x_{k+1}$
\end_inset

 della sequenza di 
\begin_inset Formula $x$
\end_inset

 dell'algoritmo; esso risulta essere anche il valore cercato dell'inverso
 
\begin_inset Formula $a^{-1}$
\end_inset

.
\end_layout

\begin_layout Section
Teorema cinese del resto
\end_layout

\begin_layout Subsection
Applicazione ed enunciato
\end_layout

\begin_layout Standard
Mostriamo direttamente l'applicazione del teorema a un caso specifico: prendiamo
 
\begin_inset Formula $\cgm x{25}{42}$
\end_inset

; possiamo esprimere 
\begin_inset Formula $x=25+6\cdot\left(7\cdot k\right)\rightleftarrows25+7\cdot\left(6\cdot k\right)$
\end_inset

, da cui ricaviamo
\end_layout

\begin_layout Itemize
per 
\begin_inset Formula $x=25+6\cdot\left(7\cdot k\right)$
\end_inset

: 
\begin_inset Formula $\mod{25}6=1\implies\cgm x16$
\end_inset


\end_layout

\begin_layout Itemize
per 
\begin_inset Formula $x=25+7\cdot\left(6\cdot k\right)$
\end_inset

: 
\begin_inset Formula $\mod{25}7=3\implies\cgm x37$
\end_inset


\end_layout

\begin_layout Standard
Dalle due congruenze più semplici ottenute possiamo scrivere il sistema
\begin_inset Formula 
\[
\cgm x{25}{42}\implies\begin{cases}
\cgm x16\\
\cgm x37
\end{cases}
\]

\end_inset

Il teorema cinese del resto afferma che:
\end_layout

\begin_layout Theorem
Dati
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Teorema cinese del resto
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Cinese, teorema del resto
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:Teorema-cinese-del-resto"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.0cm]
\end_layout

\end_inset

 due interi 
\begin_inset Formula $n,\,m$
\end_inset

 che siano 
\bar under
primi relativi
\bar default
 (deve valere 
\begin_inset Formula $n\perp m$
\end_inset

), e presi due interi 
\begin_inset Formula $a,\,b$
\end_inset

, allora il sistema delle congruenze
\emph on

\begin_inset Formula 
\[
\begin{cases}
\cgm xan\\
\cgm xbm
\end{cases}
\]

\end_inset


\emph default
è equivalente alla singola congruenza
\emph on

\begin_inset Formula 
\[
\cgm xc{n\cdot m}
\]

\end_inset


\end_layout

\begin_layout Standard
Il teorema afferma che, quanto introdotto all'inizio della sezione, può
 valere nel senso opposto in alcune condizioni specifiche.Osserviamo l'applicazio
ne del teorema in un esempio.
\end_layout

\begin_layout Example

\emph on
Sia dato il seguente insieme di congruenze:
\emph default

\begin_inset Formula 
\[
\begin{cases}
\cgm x37\\
\cgm x5{15}
\end{cases}
\]

\end_inset


\emph on
Scrivere una forma equivalente, con una singola congruenza.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Dato che 
\begin_inset Formula $7\perp15$
\end_inset

, per il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

 possiamo affermare che esisterà una singola congruenza equivalente alle
 due della consegna; essa sarà scritta nella forma 
\begin_inset Formula $\cgm xc{105}$
\end_inset

.
 Per ottenere 
\begin_inset Formula $c$
\end_inset

 possiamo provare i numeri multipli di 5, i quali in modulo 7 diano 3 come
 risultato; si ottiene facilmente 
\begin_inset Formula $c=80$
\end_inset

 (possiamo scomporlo come 
\begin_inset Formula $80=11\cdot7+3$
\end_inset

).
\end_layout

\begin_layout Example
Nel caso di numeri molto grandi, non è possibile scegliere di procedere
 per tentativi, ed è necessario usare gli strumenti della teoria dei numeri:
 se sappiamo che 
\begin_inset Formula $\cgm xan$
\end_inset

 e anche 
\begin_inset Formula $\cgm xbm$
\end_inset

, allora possiamo scrivere
\begin_inset Formula 
\[
\cgm{x=b+\overline{k}\cdot m}an
\]

\end_inset

risolvendo questa relazione si ottiene 
\begin_inset Formula $\cgm{a-b}{\overline{k}\cdot m}n$
\end_inset

 da cui, rispetto a 
\begin_inset Formula $\overline{k}$
\end_inset

 otteniamo
\begin_inset Formula 
\[
\cgm{\overline{k}}{\left(a-b\right)\cdot m^{-1}}n
\]

\end_inset

Il valore 
\begin_inset Formula $\overline{k}$
\end_inset

 corrisponde al 
\begin_inset Formula $c$
\end_inset

 del Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

, esso infatti è congruente sia ad 
\begin_inset Formula $a$
\end_inset

 in modulo 
\begin_inset Formula $n$
\end_inset

, sia a 
\begin_inset Formula $b$
\end_inset

 in modulo 
\begin_inset Formula $m$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Estensione
\end_layout

\begin_layout Standard
Il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

 ammette un'estensione a un caso generale, con 
\begin_inset Formula $N$
\end_inset

 congruenze.
\end_layout

\begin_layout Corollary
Prendiamo
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Teorema cinese del resto esteso
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Cinese, teorema del resto esteso
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:Teorema-cinese-del-resto-esteso"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.0cm]
\end_layout

\end_inset

 
\begin_inset Formula $N$
\end_inset

 numeri interi, indicati come 
\begin_inset Formula $m_{i}\tc i\in\left[1,\,N\right]$
\end_inset

, tali che a coppie siano tutti coprimi (
\begin_inset Formula $\forall i,j\in\left[1,\,N\right]\land i\neq j\tc m_{i}\perp m_{j}$
\end_inset

).
 Se abbiamo il seguente sistema di congruenze
\begin_inset Formula 
\[
\begin{cases}
\cgm x{a_{1}}{m_{1}}\\
\cgm x{a_{2}}{m_{2}}\\
\\
\cgm x{a_{N}}{m_{N}}
\end{cases}
\]

\end_inset

è equivalente alla singola congruenza
\begin_inset Formula 
\[
\cgm xC{\prod_{i=1}^{N}m_{i}}
\]

\end_inset


\end_layout

\begin_layout Standard
Tale congruenza si costruisce a partire dalle seguenti serie:
\begin_inset Formula 
\[
M=\prod_{i=1}^{N}m_{i};\quad Z_{i}=\frac{M}{m_{i}};\quad Y_{i}=\mod{Z_{i}^{-1}}{m_{i}}
\]

\end_inset

Otteniamo infine la seguente soluzione, equivalente a una singola congruenza:
\begin_inset Formula 
\begin{equation}
X=\mod{\serie{i=1}N{a_{i}Y_{i}Z_{i}}}M\label{eq:Congruenza-equivalente-sistema}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Square & multiply
\begin_inset CommandInset label
LatexCommand label
name "sec:Square-&-multiply"

\end_inset


\end_layout

\begin_layout Standard
Tramite l'algoritmo chiamato square and multiply, è possibile calcolare
 il modulo di un numero che abbia molte cifre; mostriamo un esempio per
 illustrare l'idea dietro a questo algoritmo, usando numeri 
\begin_inset Quotes eld
\end_inset

piccoli
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Example

\emph on
Si calcoli il risultato dell'operazione
\emph default
 
\begin_inset Formula $\mod{7^{11}}{26}$
\end_inset

.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Eseguiamo i seguenti passi per cercare il valore desiderato:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
LSB indica il least significant bit (bit meno significativo) e si riferisce
 al primo bit da destra
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.8cm]
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Esprimiamo 11 (l'esponente) in forma binaria: 
\begin_inset Formula $11_{10}=1011_{2}=1\cdot2^{3}+0\cdot2^{2}+1\cdot2^{1}+1\cdot2^{0}$
\end_inset

;
\end_layout

\begin_layout Enumerate
Sostituire 11 con la sua rappresentazione binaria: 
\begin_inset Formula $7^{11}=7^{\left(8+2+1\right)}=7^{8}\cdot7^{2}\cdot7$
\end_inset

;
\end_layout

\begin_layout Enumerate
Scriviamo i bit di 11 in colonna, al contrario (a partire dal LSB): 
\begin_inset Formula $\begin{bmatrix}1 & 1 & 0 & 1\end{bmatrix}$
\end_inset

;
\end_layout

\begin_layout Enumerate
Scriviamo accanto a ciascun bit la potenza di 7 corrispondente, ottenuta
 dalla scomposizione al punto 
\begin_inset Formula ${\scriptstyle \left(1\right)}$
\end_inset

;
\end_layout

\begin_layout Enumerate
Scriviamo accanto alle potenze 
\begin_inset Formula $7^{i}$
\end_inset

 il risultato dell'operazione 
\begin_inset Formula $\mod{7^{i}}{26}$
\end_inset

;
\end_layout

\begin_layout Enumerate
Componiamo il risultato prendendo il prodotto dei valori scritti al punto
 
\begin_inset Formula ${\scriptstyle \left(5\right)}$
\end_inset

 in corrispondenza di un 1, scritto al punto 
\begin_inset Formula ${\scriptstyle \left(3\right)}$
\end_inset


\end_layout

\begin_layout Standard
Otterremo infine:
\begin_inset Formula 
\[
\begin{array}{ccc}
\boldsymbol{1} & 7^{1} & \boxed{7}\\
\boldsymbol{1} & 7^{2} & \boxed{23}\\
0 & 7^{4} & 9\\
\boldsymbol{1} & 7^{8} & \boxed{3}
\end{array}\implies\mod{\left(7\cdot23\cdot3\right)}{26}=15
\]

\end_inset

Il vantaggio di questo metodo è il fatto che si basa solo sull'operazione
 di elevamento al quadrato di numeri piccoli (relativamente al modulo, nell'eser
cizio siamo in 
\begin_inset Formula $\mathbb{Z}_{26}$
\end_inset

).
 In totale, saranno necessari (per questo caso dell'esercizio) 
\begin_inset Formula $2\cdot\log_{2}\left(11\right)\simeq4$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Section
Teorema piccolo di Fermat
\end_layout

\begin_layout Theorem
Sia
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Teorema piccolo di Fermat
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Fermat, teorema piccolo di
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:Teorema-piccolo-Fermat"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.0cm]
\end_layout

\end_inset

 
\begin_inset Formula $p$
\end_inset

 un intero primo, e 
\begin_inset Formula $a$
\end_inset

 un intero tale che 
\begin_inset Formula $p$
\end_inset

 
\bar under
non
\bar default
 divida 
\begin_inset Formula $a$
\end_inset

, allora è vero che
\emph on

\begin_inset Formula 
\begin{equation}
\cgm{a^{p-1}}1p\label{eq:Teorema-piccolo-Fermat}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Non vale l'implicazione inversa, infatti prendendo 
\begin_inset Formula $a$
\end_inset

 ed 
\begin_inset Formula $n$
\end_inset

 due interi qualsiasi, e osservando che 
\begin_inset Formula $\cgm{a^{n-1}}1n$
\end_inset

, non possiamo dedurre che 
\begin_inset Formula $n$
\end_inset

 sia primo.
\end_layout

\begin_layout Standard
Piuttosto possiamo usare il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-piccolo-Fermat"
plural "false"
caps "false"
noprefix "false"

\end_inset

 per provare che un numero sia composto (non primo); tuttavia i numeri composti
 che danno resto 1 non ostante non siano primi sono pochi, e sono definiti
 
\emph on
pseudo-primi
\emph default
.
 Questi numeri sono sempre più rarefatti all'aumentare dell'ordine di grandezza.
\end_layout

\begin_layout Standard
Non ostante la scelta di una base 
\begin_inset Formula $a$
\end_inset

 differente possa 
\begin_inset Quotes eld
\end_inset

smascherare
\begin_inset Quotes erd
\end_inset

 un numero pseudo-primo, esiste una categoria di interi chiamati 
\emph on
pseudo-primi assoluti
\emph default
, i quali forniscono resto 1 con qualunque base scelta nel test del teorema
 piccolo di Fermat.
\end_layout

\begin_layout Remark
Abbiamo concluso dal Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-piccolo-Fermat"
plural "false"
caps "false"
noprefix "false"

\end_inset

 che, se non è vero 
\begin_inset Formula $p\backslash a$
\end_inset

, allora vale 
\begin_inset Formula $\cgm{a^{p-1}}1p$
\end_inset

; possiamo scrivere questa congruenza in modo equivalente come 
\begin_inset Formula $\cgm{a\cdot a^{p-2}}1p$
\end_inset

, che può essere risolta con la regola della divisione nel modo seguente:
\begin_inset Formula 
\begin{equation}
\cgm{a^{p-2}}{a^{-1}}p\label{eq:Osservazione-inverso-p-2}
\end{equation}

\end_inset

Abbiamo appena ottenuto un nuovo metodo per calcolare l'inverso di un intero
 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Standard
Poniamoci nel caso generale, in cui abbiamo un intero qualunque 
\begin_inset Formula $a$
\end_inset

 e un intero composto 
\begin_inset Formula $n$
\end_inset

: la condizione del teorema diventa che 
\begin_inset Formula $a\perp n$
\end_inset

; in queste condizioni possiamo enunciare il seguente Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-Eulero"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Theorem
Sia
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Teorema di Eulero
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Eulero, teorema di
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:Teorema-Eulero"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.0cm]
\end_layout

\end_inset

 
\begin_inset Formula $a$
\end_inset

 un intero qualunque e 
\begin_inset Formula $n$
\end_inset

 un intero composto, tali che 
\begin_inset Formula $a\perp n$
\end_inset

, allora è vero che
\begin_inset Formula 
\begin{equation}
\cgm{a^{\varphi\left(n\right)}}1n\label{eq:Teorema-Eulero}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
La funzione 
\emph on
toziente
\emph default
 
\begin_inset Formula $\varphi\left(p\right)$
\end_inset

 con 
\begin_inset Formula $p$
\end_inset

 numero primo, è il numero di primi relativi rispetto a 
\begin_inset Formula $p$
\end_inset

, in questo caso 
\begin_inset Formula $p-1$
\end_inset

 numeri, tutti i predecessori di 
\begin_inset Formula $p$
\end_inset

, il quale essendo primo ha come fattore comune con essi solo 1; vale dunque
 
\begin_inset Formula $\varphi\left(p\right)=p-1$
\end_inset

 per 
\begin_inset Formula $p$
\end_inset

 numero primo.
\end_layout

\begin_layout Standard
In generale il toziente di un intero 
\begin_inset Formula $n$
\end_inset

 qualunque si può calcolare in uno dei seguenti modi:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Toziente
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Toziente
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "eqn:Toziente"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[1.2cm]
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\varphi\left(n\right)=n\cdot\prod_{i\in\left[1,n-1\right],\,p_{i}\backslash n}\left(1-\dfrac{1}{p_{i}}\right)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $n=\prod_{i=1}^{m}p_{i}^{r_{i}}\implies\varphi\left(n\right)=\prod_{i=1}^{m}\left(p_{i}^{r_{i}}-p_{i}^{r_{i}-1}\right)$
\end_inset


\end_layout

\begin_layout Standard
Vediamo un esempio in cui calcoliamo il toziente di due numeri adoperando
 entrambi i procedimenti:
\end_layout

\begin_layout Example

\emph on
Calcolare il toziente di 1000.
\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Adoperando il primo metodo, scriviamo la scomposizione di 1000 nei suoi
 fattori primi: 
\begin_inset Formula $1000=2^{3}\cdot5^{3}$
\end_inset

; scriviamo dunque la produttoria usando i due fattori 
\begin_inset Formula $p_{i}=\left\{ 2,\,5\right\} $
\end_inset

 senza esponente
\begin_inset Formula 
\[
1000\cdot\left(1-\frac{1}{2}\right)\cdot\left(1-\frac{1}{5}\right)=\boxed{400}=\varphi\left(1000\right)
\]

\end_inset

Se adoperiamo il secondo metodo, scriviamo direttamente la produttoria a
 partire dai fattori primi 
\begin_inset Formula $2^{3}$
\end_inset

 e 
\begin_inset Formula $5^{3}$
\end_inset

:
\begin_inset Formula 
\[
\left(2^{3}-2^{2}\right)\cdot\left(5^{3}-5^{2}\right)=\boxed{400}=\varphi\left(1000\right)
\]

\end_inset

Abbiamo ottenuto lo stesso toziente, mostrando che entrambi i procedimenti
 si equivalgono.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Remark
Se vogliamo calcolare l'inverso di un intero 
\begin_inset Formula $a$
\end_inset

 modulo 
\begin_inset Formula $n$
\end_inset

 non primo, posto che 
\begin_inset Formula $a\perp n$
\end_inset

 possiamo scrivere la congruenza
\begin_inset Formula 
\[
\cgm{a^{-1}}{a^{\varphi\left(n\right)-1}}n
\]

\end_inset

Questa relazione ci permette di calcolare un inverso utilizzando il modulo
 di un elevamento a potenza (evitando la strada di Euclide esteso 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide-esteso"
plural "false"
caps "false"
noprefix "false"

\end_inset

), per esempio tramite square and multiply eseguito su un calcolatore.
\end_layout

\begin_layout Standard
Mettendo assieme quanto illustrato in questa sezione, possiamo rispondere
 alla richiesta mostrata nel seguente esempio.
\end_layout

\begin_layout Example

\emph on
Calcolare le ultime tre cifre di
\emph default
 
\begin_inset Formula $7^{803}$
\end_inset

.
\begin_inset CommandInset label
LatexCommand label
name "ex:Ultime-3-cifre-7"

\end_inset


\end_layout

\begin_layout Example
\begin_inset Formula $\checked$
\end_inset

Le ultime tre cifre di un numero possono essere ottenute usando il resto
 della sua divisione per 
\begin_inset Formula $10^{3}$
\end_inset

; allora dobbiamo trovare il risultato di 
\begin_inset Formula $\mod{7^{803}}{1000}$
\end_inset

.
\end_layout

\begin_layout Example
Per il teorema di Eulero 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Teorema-Eulero"
plural "false"
caps "false"
noprefix "false"

\end_inset

 sappiamo che 
\begin_inset Formula $\cgm{7^{\varphi\left(1000\right)}}1{1000}$
\end_inset

 e dal precedente esempio abbiamo già calcolato 
\begin_inset Formula $\varphi\left(1000\right)=400$
\end_inset

, per cui possiamo scomporre 
\begin_inset Formula $7^{803}$
\end_inset

 nel modo seguente:
\begin_inset Formula 
\[
\mod{\left(7^{400}\cdot7^{400}\cdot7^{3}\right)}{1000}=\mod{\left(1\cdot1\cdot343\right)}{1000}=\boxed{343}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Section
Principio fondamentale
\end_layout

\begin_layout Standard
Se abbiamo gli interi 
\begin_inset Formula $a,\,b,\,n,\,x,\,y$
\end_inset

 e 
\begin_inset Formula $n>0$
\end_inset

, tali che 
\begin_inset Formula $a\perp n$
\end_inset

, allora se 
\begin_inset Formula $\cgm xy{\varphi\left(n\right)}$
\end_inset

 vale
\begin_inset Formula 
\begin{equation}
\cgm{a^{x}}{b^{y}}n\label{eq:Principio-fondamentale}
\end{equation}

\end_inset

tuttavia non vale l'implicazione inversa.
\end_layout

\begin_layout Standard
Concludiamo che, in una congruenza modulo 
\begin_inset Formula $n$
\end_inset

, in presenza di elevamenti a potenza gli esponenti della stessa base lavorano
 in modulo di 
\begin_inset Formula $\varphi\left(n\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Questo principio permette di risolvere rapidamente la richiesta dell'Esercizio
 
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:Ultime-3-cifre-7"
plural "false"
caps "false"
noprefix "false"

\end_inset

: dato che 
\begin_inset Formula $\cgm{803}3{\varphi\left(1000\right)=400}$
\end_inset

 otteniamo direttamente 
\begin_inset Formula $\cgm{7^{803}}{7^{3}}{1000}$
\end_inset

; abbiamo usato 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Principio-fondamentale"
plural "false"
caps "false"
noprefix "false"

\end_inset

 in cui 
\begin_inset Formula $x=803$
\end_inset

 e 
\begin_inset Formula $y=3$
\end_inset

.
\end_layout

\begin_layout Section
Radici in aritmetica modulare
\end_layout

\begin_layout Subsection
Radici primitive
\end_layout

\begin_layout Standard
Introduciamo il concetto di gruppo algebrico:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Gruppo algebrico
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Gruppo algebrico
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "def:Gruppo-algebrico"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.3cm]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\noindent
\align center

\emph on
Chiamiamo 
\emph default
gruppo
\emph on
 una struttura formata da un insieme e da un'operazione binaria definita
 su di esso, la quale soddisfi gli assiomi di associatività, esistenza dell'elem
ento neutro ed esistenza dell'elemento inverso
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ad esempio, se prendiamo l'insieme dei numeri interi 
\begin_inset Formula $\mathbb{Z}$
\end_inset

 e l'operazione di somma 
\begin_inset Formula $+$
\end_inset

, possiamo formare il gruppo 
\begin_inset Formula $\left(\mathbb{Z},\,+\right)$
\end_inset

 poiché la somma è associativa, l'elemento neutro è lo zero e l'inverso
 di qualunque elemento è sempre definito; anche prendendo 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 (insieme dei residui interi modulo 
\begin_inset Formula $p$
\end_inset

, escluso lo 0) e l'operazione di prodotto, otteniamo di nuovo un gruppo
 
\begin_inset Formula $\left(\mathbb{Z}_{p}^{*},\,\cdot\right)$
\end_inset

.
 Non si ottiene un gruppo rispetto al prodotto per 
\begin_inset Formula $\mathbb{Z}_{p}$
\end_inset

 (residui modulo 
\begin_inset Formula $p$
\end_inset

, da 0 a 
\begin_inset Formula $p-1$
\end_inset

), poiché lo 0 non ha un inverso definito.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
Se prendiamo un elemento 
\begin_inset Formula $a\in\mathbb{Z}_{p}^{*}$
\end_inset

 allora vale 
\begin_inset Formula $\cgm{a^{p-1}}1p$
\end_inset

 per il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-piccolo-Fermat"
plural "false"
caps "false"
noprefix "false"

\end_inset

; chiamiamo inoltre ordine dell'elemento 
\begin_inset Formula $a$
\end_inset

 (e lo indichiamo tramite 
\begin_inset Formula $\ord a$
\end_inset

) l'intero 
\begin_inset Formula $n>0$
\end_inset

 più piccolo tale che
\begin_inset Formula 
\begin{equation}
\cgm{a^{n}}1p\label{eq:Ordine-di-intero}
\end{equation}

\end_inset

Il teorema piccolo di Fermat 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Teorema-piccolo-Fermat"
plural "false"
caps "false"
noprefix "false"

\end_inset

 ci assicura che vale sempre 
\begin_inset Formula $n\leq p-1$
\end_inset

, ma non è detto che sia proprio 
\begin_inset Formula $n=p-1$
\end_inset

.
 Chiamiamo quindi 
\begin_inset Formula $\alpha$
\end_inset

 l'elemento primitivo 
\begin_inset Formula $a\in\mathbb{Z}_{p}^{*}$
\end_inset

 se e solo se l'ordine di 
\begin_inset Formula $a$
\end_inset

 è 1, ovvero non esiste nessun altro intero 
\begin_inset Formula $n$
\end_inset

 per cui 
\begin_inset Formula $\cgm{a^{n}}1p$
\end_inset

; in altri termini vale
\begin_inset Formula 
\begin{equation}
\cgm{a^{n}}1p\iff n=1\label{eq:Condizione-elemento-primitivo}
\end{equation}

\end_inset

Se l'ordine di 
\begin_inset Formula $a$
\end_inset

 fosse proprio 
\begin_inset Formula $p-1$
\end_inset

, allora preso 
\begin_inset Formula $\alpha^{i}$
\end_inset

 l'elemento primitivo, presi tutti gli interi 
\begin_inset Formula $i\in\left[1,\,p-1\right]$
\end_inset

, otteniamo dalla successione degli 
\begin_inset Formula $\alpha^{i}$
\end_inset

 tutti e soli gli elementi dell'insieme 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 (in ordine anche differente); chiameremo l'elemento 
\begin_inset Formula $\alpha$
\end_inset

 la 
\emph on
radice primitiva
\emph default
.
\end_layout

\begin_layout Standard
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "90col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\noindent
\align center

\emph on
Chiamiamo 
\begin_inset Formula $\alpha$
\end_inset

 una radice primitiva per 
\begin_inset Formula $p$
\end_inset

 se vale 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Condizione-elemento-primitivo"
plural "false"
caps "false"
noprefix "false"

\end_inset

 e inoltre l'ordine di 
\begin_inset Formula $\alpha$
\end_inset

 è pari a 
\begin_inset Formula $n=p-1$
\end_inset

.
\end_layout

\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Radice primitiva
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Radice primitiva
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "def:Radice-primitiva"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[-0.2cm]
\end_layout

\end_inset


\end_layout

\begin_layout Example

\emph on
Trovare se 
\begin_inset Formula $\alpha=3$
\end_inset

 sia una radice primitiva di 
\begin_inset Formula $p=7$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Per trovare se 
\begin_inset Formula $\alpha$
\end_inset

 sia effettivamente una radice primitiva di 
\begin_inset Formula $p$
\end_inset

, calcoliamo gli elementi:
\begin_inset Formula 
\[
\left\{ \forall i\in\left[0,\,p-1\right]\,:\,\cgm{\beta}{\alpha^{i}}p\right\} 
\]

\end_inset

Otteniamo quindi:
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{3^{0}}17\\
\cgm{3^{1}}37\\
\cgm{3^{2}}27\\
\cgm{3^{3}}67\\
\cgm{3^{4}}47\\
\cgm{3^{5}}57\\
\vdots
\end{array}
\]

\end_inset

Abbiamo riottenuto tutti e soli gli elementi da 
\begin_inset Formula $1$
\end_inset

 a 
\begin_inset Formula $p-1=6$
\end_inset

 (i membri di 
\begin_inset Formula $\mathbb{Z}_{7}^{*}$
\end_inset

), con periodo 
\begin_inset Formula $p-1=6$
\end_inset

.
 Si verifica dunque la condizione che rende un elemento primitivo 
\begin_inset Formula $\alpha$
\end_inset

 una radice per 
\begin_inset Formula $p$
\end_inset

; la radice primitiva è anche detta elemento generatore: infatti, tramite
 essa è possibile ottenere tutti i residui in modulo 
\begin_inset Formula $p$
\end_inset

 di un certo insieme 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Example

\emph on
Trovare se 
\begin_inset Formula $\alpha=2$
\end_inset

 sia una radice primitiva di 
\begin_inset Formula $p=7$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Calcolando di nuovo gli 
\begin_inset Formula $\alpha^{i}$
\end_inset

 con 
\begin_inset Formula $i\in\left[0,\,p-1\right]$
\end_inset

 otteniamo
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{2^{0}}17\\
\cgm{2^{1}}27\\
\cgm{2^{2}}47\\
\cgm{2^{3}}17\\
\vdots
\end{array}
\]

\end_inset

In questo caso abbiamo ottenuto periodo 3; inoltre l'ordine di 
\begin_inset Formula $\alpha$
\end_inset

 è 
\begin_inset Formula $n=3\neq p-1=6$
\end_inset

, quindi 
\begin_inset Formula $\alpha=2$
\end_inset

 non è radice primitiva di 
\begin_inset Formula $p=7$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Remark
Se prendiamo l'elemento primitivo 
\begin_inset Formula $a\in\mathbb{Z}_{p}^{*}$
\end_inset

, esso avrà al massimo ordine 
\begin_inset Formula $p-1$
\end_inset

; tuttavia potrà presentare anche ordini pari ai sottomultipli di 
\begin_inset Formula $p-1$
\end_inset

, ma non ordini differenti da essi.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Se 
\begin_inset Formula $\alpha$
\end_inset

 è un elemento primitivo di 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 e vale 
\begin_inset Formula $\cgm{\beta}{\alpha^{i}}p$
\end_inset

 con 
\begin_inset Formula $1\leq i\leq p-1$
\end_inset

, questi 
\begin_inset Formula $\beta$
\end_inset

 sono tutti e soli gli elementi di 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

.
 Se ora prendiamo un elemento primitivo di 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 espresso come 
\begin_inset Formula $\beta$
\end_inset

 (tramite la precedente congruenza), il suo ordine sarà dipendente dall'esponent
e 
\begin_inset Formula $i$
\end_inset

 usato per ottenerlo a partire da 
\begin_inset Formula $\alpha,$
\end_inset

e dovrà valere
\begin_inset Formula 
\begin{equation}
\ord{\beta}=\frac{p-1}{\mcd{p-1}i}\label{eq:Elemento-primitivo-MCD}
\end{equation}

\end_inset

dove 
\begin_inset Formula $i$
\end_inset

 è l'esponente a cui elevare 
\begin_inset Formula $\alpha$
\end_inset

 per ottenere 
\begin_inset Formula $\beta$
\end_inset

.
 Questo si verifica perché i 
\begin_inset Formula $\beta$
\end_inset

sono potenze di 
\begin_inset Formula $\alpha$
\end_inset

, ed essendo 
\begin_inset Formula $\ord{\alpha}=p-1$
\end_inset

 (
\begin_inset Formula $\alpha$
\end_inset

 è radice primitiva) necessariamente l'ordine di 
\begin_inset Formula $\beta$
\end_inset

 sarà un sottomultiplo di 
\begin_inset Formula $p-1$
\end_inset

, determinato da 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Elemento-primitivo-MCD"
plural "false"
caps "false"
noprefix "false"

\end_inset


\end_layout

\begin_layout Remark
Gli elementi primitivi di 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 sono in numero 
\begin_inset Formula $\varphi\left(p-1\right)$
\end_inset

; infatti saranno tutti gli elementi di 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

.
 coprimi rispetto a 
\begin_inset Formula $p-1$
\end_inset

, per cui si verifica la condizione 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Elemento-primitivo-MCD"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
 Notiamo infatti che 
\begin_inset Formula $\beta$
\end_inset

 è una radice primitiva di 
\begin_inset Formula $p$
\end_inset

 (vale 
\begin_inset Formula $\ord{\beta}=p-1$
\end_inset

) quando si ha
\begin_inset Formula $\mcd{p-1}i=1$
\end_inset

; concludiamo che il numero di elementi primitivi 
\begin_inset Formula $\beta$
\end_inset

 di un insieme 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 è il numero di elementi coprimi rispetto a 
\begin_inset Formula $p-1$
\end_inset

 (valore ottenuto dalla funzione toziente di 
\begin_inset Formula $p-1$
\end_inset

).
\end_layout

\begin_layout Subsection
Test di primitività
\end_layout

\begin_layout Standard
Prendiamo un 
\begin_inset Formula $\alpha\in\mathbb{Z}_{p}^{*}$
\end_inset

 con 
\begin_inset Formula $p$
\end_inset

 qualunque, e cerchiamo se 
\begin_inset Formula $\alpha$
\end_inset

 sia primitivo o meno rispetto a 
\begin_inset Formula $p$
\end_inset

; usiamo il seguente test di primitività: scomporre 
\begin_inset Formula $p-1$
\end_inset

 nei suoi fattori primi, in modo da avere una produttoria di quozienti elevati
 a un certo esponente 
\begin_inset Formula $p-1=\prod_{i}q_{i}^{r_{i}}$
\end_inset

; diremo che 
\begin_inset Formula $\alpha$
\end_inset

 è primitivo rispetto a 
\begin_inset Formula $p$
\end_inset

 se e solo se vale
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Test primitività
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Test primitività
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.4cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\forall i\,:\,\ncgm{\alpha^{\left(p-1\right)/q_{i}}}1p\label{eq:Test-primitività}
\end{equation}

\end_inset

Si noti che 
\begin_inset Formula $p$
\end_inset

 è primo (per definizione), di conseguenza 
\begin_inset Formula $p-1$
\end_inset

 è sempre pari.
\end_layout

\begin_layout Example

\emph on
Ottenere se 
\begin_inset Formula $\alpha=2$
\end_inset

 sia radice primitiva per 
\begin_inset Formula $p=19$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Usando il test 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-primitività"
plural "false"
caps "false"
noprefix "false"

\end_inset

, scomponiamo 
\begin_inset Formula $19-1=18$
\end_inset

 nei suoi fattori primi:
\begin_inset Formula 
\[
18=2\cdot3^{2}
\]

\end_inset

Ora testiamo la congruenza per tutti i fattori primi (presi senza esponente):
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{2^{18/3}=2^{6}=64}7{19}\\
\cgm{2^{18/2}=2^{9}=512}{18}{19}
\end{array}
\]

\end_inset

Per nessun fattore primo si ha congruenza a 1 modulo 19, dunque 
\begin_inset Formula $\alpha=2$
\end_inset

 è davvero una radice primitiva per 
\begin_inset Formula $p=19$
\end_inset

.
\end_layout

\begin_layout Standard
Osserviamo infine che gli elementi primitivi di 
\begin_inset Formula $\mathbb{Z}_{19}$
\end_inset

 sono 
\begin_inset Formula $\varphi\left(18\right)=6$
\end_inset

, distribuiti all'interno dell'insieme in modo non predicibile.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Radici quadrate
\end_layout

\begin_layout Standard
Poniamoci nel caso di radici quadrate in modulo a un intero 
\begin_inset Formula $p$
\end_inset

 primo; inoltre, consideriamo per tale intero solamente la metà dei numeri
 primi (si ricordi la separazione dei primi in classi di congruenza 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Successione-primi-classi"
plural "false"
caps "false"
noprefix "false"

\end_inset

):
\begin_inset Formula 
\begin{equation}
\cgm p34\label{eq:Condizione-radici-quadrate-modulo-primo}
\end{equation}

\end_inset

Risolviamo, sotto queste condizioni, l'equazione 
\begin_inset Formula $\cgm{x^{2}}ap$
\end_inset

, ovvero cerchiamo 
\begin_inset Formula $\sqrt{a}\in\mathbb{Z}_{p}$
\end_inset

; si dimostra che, se esiste 
\begin_inset Formula $\sqrt{a}$
\end_inset

, allora vale:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Radice quadrata
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Radice quadrata
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.4cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\pm a^{\left(p+1\right)/4}=\sqrt{a}\,\lor\,\pm a^{\left(p+1\right)/4}=\sqrt{-a}\label{eq:Radice-quadrata-modulo-primo}
\end{equation}

\end_inset

dove abbiamo l'unione di due condizioni che sono esclusive (se non esiste
 la radice di 
\begin_inset Formula $a$
\end_inset

 allora esisterà quella di 
\begin_inset Formula $-a$
\end_inset

, e vale quanto indicato in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Radice-quadrata-modulo-primo"
plural "false"
caps "false"
noprefix "false"

\end_inset

, e vice versa).
\end_layout

\begin_layout Remark
\begin_inset CommandInset label
LatexCommand label
name "oss:Condizioni-esistenza-radici"

\end_inset

Se avessimo 
\begin_inset Formula $\ncgm p34$
\end_inset

 ma 
\begin_inset Formula $\cgm p14$
\end_inset

 (
\begin_inset Formula $p$
\end_inset

 appartenente all'altra classe di congruenze), allora nel caso in cui non
 esista una delle due radici (
\begin_inset Formula $\sqrt{a}$
\end_inset

 o 
\begin_inset Formula $\sqrt{-a}$
\end_inset

) non esiste nemmeno l'altra.
\end_layout

\begin_layout Example

\emph on
Si calcoli, se esiste, la radice di 5 in modulo 11.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Cercare 
\begin_inset Formula $\mod{\sqrt{5}}{11}$
\end_inset

 equivale a risolvere l'equazione
\begin_inset Formula 
\[
\cgm{x^{2}}5{11}
\]

\end_inset

Dato che per 11 vale 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Condizione-radici-quadrate-modulo-primo"
plural "false"
caps "false"
noprefix "false"

\end_inset

, possiamo usare la formula 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Radice-quadrata-modulo-primo"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\pm5^{\left(11+1\right)/4}=\mod{\pm125}{11}=\pm4
\]

\end_inset

Per determinare se in modulo 11 i numeri 
\begin_inset Formula $\pm4$
\end_inset

 siano la radice di 
\begin_inset Formula $5$
\end_inset

 o di 
\begin_inset Formula $-5$
\end_inset

, effettuiamo l'elevamento a potenza della radice cercata:
\begin_inset Formula 
\[
\mod{4^{2}}{11=5},\quad-4^{2}=\mod{7^{2}}{11}=5
\]

\end_inset

Abbiamo ottenuto che la radice quadrata di 5 modulo 11 è 
\begin_inset Formula $\pm4$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Example

\emph on
Si calcoli, se esiste, la radice di 2 in modulo 11.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Come prima, impostiamo così l'equazione da risolvere:
\begin_inset Formula 
\[
\cgm{x^{2}}2{11}
\]

\end_inset

Possiamo usare 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Radice-quadrata-modulo-primo"
plural "false"
caps "false"
noprefix "false"

\end_inset

, dato che per 2 vale 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Condizione-radici-quadrate-modulo-primo"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\pm2^{\left(11+1\right)/4}=\mod{\pm8}{11}=\pm8
\]

\end_inset

Infine effettuiamo l'elevamento a potenza della radice per ottenere il segno:
\begin_inset Formula 
\[
\mod{8^{2}}{11}=\mod 9{11}=-2
\]

\end_inset

Abbiamo ottenuto che in modulo 11 non esiste la radice quadrata di 2; la
 radice di 
\begin_inset Formula $-2$
\end_inset

 però esiste, e vale 
\begin_inset Formula $\pm8$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Test per segno della radice
\end_layout

\begin_layout Standard
Prendiamo un primo 
\begin_inset Formula $p$
\end_inset

 dispari, un 
\begin_inset Formula $a\neq0$
\end_inset

 in modulo 
\begin_inset Formula $p$
\end_inset

, allora
\begin_inset Formula 
\begin{equation}
\cgm{a^{\left(p-1\right)/2}}{\pm1}p\label{eq:Test-segno-radice-prima}
\end{equation}

\end_inset

Distinguiamo i due casi:
\end_layout

\begin_layout Itemize
se il segno in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-segno-radice-prima"
plural "false"
caps "false"
noprefix "false"

\end_inset

 è 
\begin_inset Formula $+$
\end_inset

, allora esiste 
\begin_inset Formula $\sqrt{a}$
\end_inset

 in modulo 
\begin_inset Formula $p$
\end_inset

;
\end_layout

\begin_layout Itemize
se il segno in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-segno-radice-prima"
plural "false"
caps "false"
noprefix "false"

\end_inset

 è 
\begin_inset Formula $-$
\end_inset

, allora esiste 
\begin_inset Formula $\sqrt{-a}$
\end_inset

 in modulo 
\begin_inset Formula $p$
\end_inset

.
\end_layout

\begin_layout Standard
Ricordando l'Osservazione 
\begin_inset CommandInset ref
LatexCommand ref
reference "oss:Condizioni-esistenza-radici"
plural "false"
caps "false"
noprefix "false"

\end_inset

, si nota che il test appena mostrato permette di affermare se la radice
 non sia definita, nel caso in cui 
\begin_inset Formula $\cgm p14$
\end_inset

 e in cui il segno in 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-segno-radice-prima"
plural "false"
caps "false"
noprefix "false"

\end_inset

 sia 
\begin_inset Formula $-$
\end_inset

.
\end_layout

\begin_layout Subsection
Radice quadrata modulo composto
\end_layout

\begin_layout Standard
Esaminiamo il problema 
\begin_inset Formula $\cgm{x^{2}}an$
\end_inset

 dove 
\begin_inset Formula $n$
\end_inset

 sia un numero composto; dato che 
\begin_inset Formula $n$
\end_inset

 sarà scomponibile in fattori primi, possiamo scomporre la congruenza esaminata
 in due congruenze più semplici in modulo 
\begin_inset Formula $p$
\end_inset

 e 
\begin_inset Formula $q$
\end_inset

, sapendo che 
\begin_inset Formula $n=p\cdot q$
\end_inset

.
 Le due soluzioni ottenute si combinano infine tramite il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Standard
Questo problema ha la sua difficoltà nella fattorizzazione di 
\begin_inset Formula $n$
\end_inset

, al punto che la complessità computazionale del calcolo della radice modulo
 
\begin_inset Formula $n$
\end_inset

 equivale a quella della sua scomposizione in fattori primi.
\end_layout

\begin_layout Example

\emph on
Si calcoli, se esiste, la radice di 71 in modulo 77.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Notiamo subito che 
\begin_inset Formula $77=7\cdot11$
\end_inset

; per il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

 possiamo scomporre la congruenza in esame nelle due più semplici:
\begin_inset Formula 
\[
\cgm{x^{2}}{71}{77}\implies\begin{cases}
\cgm{x^{2}}17\\
\cgm{x^{2}}5{11}
\end{cases}
\]

\end_inset

Nella precedente abbiamo già sostituito 
\begin_inset Formula $\mod{71}7=1$
\end_inset

 e 
\begin_inset Formula $\mod{71}{11}=5$
\end_inset

; possiamo risolvere le due congruenze in modo indipendente:
\end_layout

\begin_layout Enumerate
la radice quadrata di 1 è comunque 
\begin_inset Formula $\pm1$
\end_inset

, modulo 7;
\end_layout

\begin_layout Enumerate
la radice quadrata di 5 modulo 11 si può ottenere da 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Radice-quadrata-modulo-primo"
plural "false"
caps "false"
noprefix "false"

\end_inset

 e risulta 
\begin_inset Formula $\cgm x{\pm5^{\left(11+1\right)/4}}{11}\implies\cgm x{\pm4}{11}$
\end_inset

.
\end_layout

\begin_layout Standard
Abbiamo ottenuto due radici da ciascuna congruenza, che possono essere combinate
 in 
\begin_inset Formula $2^{2}=4$
\end_inset

 modi possibili, per costruire la soluzione tramite il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\{ \cgm x17;\;\cgm x4{11}\right\} $
\end_inset


\begin_inset Newline newline
\end_inset

Risolviamo la combinazione delle due congruenze analizzate:
\begin_inset Formula 
\[
\begin{array}{c}
x=\cgm{1+k\cdot7}4{11}\\
\cgm{7\cdot k}3{11}\\
\cgm k{3\cdot7^{-1}}{11}
\end{array}
\]

\end_inset

Per trovare l'inverso utilizziamo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Osservazione-inverso-p-2"
plural "false"
caps "false"
noprefix "false"

\end_inset

, da cui 
\begin_inset Formula $\mod{7^{-1}}{11}=\mod{7^{9}}{11}=8$
\end_inset

, da cui segue che 
\begin_inset Formula $k=\mod{24}{11}=2$
\end_inset

; sostituendo nella prima si ottiene
\begin_inset Formula 
\[
x=\cgm{14+1}4{11}\implies\boxed{\cgm x{15}{77}}
\]

\end_inset

dal Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\{ \cgm x17;\;\cgm x{-4}{11}\right\} $
\end_inset


\begin_inset Formula 
\[
\cgm x{-15}{77}
\]

\end_inset


\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\{ \cgm x{-1}7;\;\cgm x4{11}\right\} $
\end_inset


\begin_inset Formula 
\[
\cgm x{29}{77}
\]

\end_inset


\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $\left\{ \cgm x{-1}7;\;\cgm x{-4}{11}\right\} $
\end_inset


\begin_inset Formula 
\[
\cgm x{-29}{77}
\]

\end_inset


\end_layout

\begin_layout Standard
Non è detto che le radici siano sempre 4, in questo caso esistevano tutte
 le radici per ciascuna congruenza in cui è stata scomposta quella iniziale.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Residui quadratici
\end_layout

\begin_layout Standard
Abbiamo chiamato gli elementi di 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

 residui modulo 
\begin_inset Formula $p$
\end_inset

; i residui quadratici sono residui che corrispondono anche al quadrato
 di qualche elemento dello stesso insieme 
\begin_inset Formula $\mathbb{Z}_{p}^{*}$
\end_inset

.
\end_layout

\begin_layout Standard
Chiamiamo 
\begin_inset Formula $a_{q}\in\mathbb{Z}_{p}^{*}$
\end_inset

i residui quadratici per cui valga
\begin_inset Formula 
\[
\cgm{a_{q}}{\left(\pm b\right)^{2}}p
\]

\end_inset

con 
\begin_inset Formula $b\in\mathbb{Z}_{p}^{*}$
\end_inset

 un elemento dell'insieme a cui appartiene anche 
\begin_inset Formula $a_{q}$
\end_inset

.
\end_layout

\begin_layout Standard
Osserviamo che 
\begin_inset Formula $p\in\left\{ 1,\,2,\,\ldots,\,\frac{p-1}{2}\right\} $
\end_inset

, poiché i residui a partire da 
\begin_inset Formula $\frac{p-1}{2}+1$
\end_inset

 sono i residui negativi dei precedenti dal minore al maggiore (
\begin_inset Formula $-1=p-1$
\end_inset

).
\end_layout

\begin_layout Example

\emph on
\begin_inset CommandInset label
LatexCommand label
name "exa:Trovare-i-residui"

\end_inset

Trovare i residui quadratici dell'insieme 
\begin_inset Formula $\mathbb{Z}_{11}^{*}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Otteniamo subito che nell'insieme analizzato ci sono 
\begin_inset Formula $\frac{p-1}{2}=\frac{11-1}{2}=5$
\end_inset

 residui quadratici; possiamo ottenerli tramite il test 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-segno-radice-prima"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\ncgm{a^{\left(p-1\right)/2}}{+1}p\implies a\text{ \textbf{non} è residuo quadratico!}
\]

\end_inset

Effettuiamo questo test per ciascun elemento di 
\begin_inset Formula $\mathbb{Z}_{11}^{*}$
\end_inset

:
\begin_inset Formula 
\[
\begin{array}{ll}
\cgm{1^{5}}{\boxed{1}}{11} & \cgm{6^{5}}{-1}{11}\\
\cgm{2^{5}}{-1}{11} & \cgm{7^{5}}{-1}{11}\\
\cgm{3^{5}}{\boxed{1}}{11} & \cgm{8^{5}}{-1}{11}\\
\cgm{4^{5}}{\boxed{1}}{11} & \cgm{9^{5}}{\boxed{1}}{11}\\
\cgm{5^{5}}{\boxed{1}}{11} & \cgm{10^{5}}{-1}{11}
\end{array}
\]

\end_inset

Raccogliendo i risultati dei test con la congruenza a 
\begin_inset Formula $+1$
\end_inset

, possiamo scrivere l'insieme dei residui quadratici di 
\begin_inset Formula $\mathbb{Z}_{11}^{*}$
\end_inset

:
\begin_inset Formula 
\[
a_{q}=\left\{ 1,\,3,\,4,\,5,\,9\right\} 
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Remark
Un modo più rapido per ottenere i residui quadratici consiste nel sfruttare
 il fatto che essi saranno i quadrati dei primi 
\begin_inset Formula $\frac{p-1}{2}$
\end_inset

 elementi dell'insieme dei residui: 
\begin_inset Formula 
\[
a_{q}=\left\{ 1^{2},\,\ldots,\,\left(\frac{p-1}{2}\right)^{2}\right\} 
\]

\end_inset

Riprendendo la consegna dell'Esempio 
\begin_inset CommandInset ref
LatexCommand ref
reference "exa:Trovare-i-residui"
plural "false"
caps "false"
noprefix "false"

\end_inset

, i residui quadratici di 
\begin_inset Formula $\mathbb{Z}_{11}^{*}$
\end_inset

 si ottengono come:
\begin_inset Formula 
\[
\begin{array}{lll}
\mod{1^{2}}{11}=1 & \mod{3^{2}}{11}=9 & \mod{5^{2}}{11}=3\\
\mod{2^{2}}{11}=4 & \mod{4^{2}}{11}=5
\end{array}\implies a_{q}=\left\{ 1,\,4,\,9,\,5,\,3\right\} 
\]

\end_inset

Otteniamo gli stessi residui quadratici trovati con i test, in ordine diverso.
\end_layout

\begin_layout Chapter
Cifrari elementari
\end_layout

\begin_layout Section
Introduzione
\end_layout

\begin_layout Standard
Facendo riferimento alla figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Scenario-fondamentale- comunicazione"
plural "false"
caps "false"
noprefix "false"

\end_inset

, possiamo individuare la caratteristica del sistema di cifratura modellizzato:
 esso usa la stessa chiave 
\begin_inset Formula $k$
\end_inset

 per la cifratura e la decifratura del messaggio; ammettiamo che essa sia
 consegnata al destinatario tramite un canale sicuro.
\end_layout

\begin_layout Standard
Il testo in chiaro è definito all'interno di tutti i possibili messaggi
 in chiaro componibili con l'alfabeto a disposizione (
\begin_inset Formula $p\in\mathscr{P}$
\end_inset

), il messaggio cifrato è anch'esso definito all'interno di un insieme di
 ogni possibile messaggio cifrato componibile (
\begin_inset Formula $c\in\mathscr{C}$
\end_inset

), infine la chiave appartiene all'insieme di tutte le possibili chiavi
 componibili (
\begin_inset Formula $k\in\mathscr{K}$
\end_inset

).
\end_layout

\begin_layout Standard
Ogni chiave, all'interno dello spazio delle chiavi, è definita una regola
 di cifratura (
\begin_inset Formula $\forall k\in\mathscr{K}\tc E_{k}\in\mathscr{E}$
\end_inset

) e anche una regola di decifratura (
\begin_inset Formula $\forall k\in\mathscr{K}\tc D_{k}\in\mathscr{D}$
\end_inset

), entrambe dipendenti da 
\begin_inset Formula $k$
\end_inset

.
\end_layout

\begin_layout Standard
Deve valere che la cifratura sia invertibile con la decifratura, ovvero
 
\begin_inset Formula $\forall k\in\mathscr{K},\,p\in\mathscr{P},\,c\in\mathscr{C}\tc c=E_{k}\left(p\right)\land p=D_{k}\left(c\right)$
\end_inset

; in caso contrario la decifratura non sarebbe più possibile (collisioni
 durante la cifratura di messaggi differenti).
\end_layout

\begin_layout Section
Cifrari a scorrimento e sostituzione
\end_layout

\begin_layout Subsection
Cifrario di Cesare
\end_layout

\begin_layout Standard
Il cifrario di Cesare utilizza uno scorrimento dell'alfabeto, la chiave
 stessa è un simbolo dell'alfabeto:
\begin_inset Formula 
\[
\mathscr{P}=\mathscr{C}=\mathscr{K}=\mathbb{Z}_{n}
\]

\end_inset

Si verifica nel caso dell'alfabeto inglese vale 
\begin_inset Formula $n=26$
\end_inset

; la funzione di cifratura e di decifratura si indicano come:
\begin_inset Formula 
\[
\begin{array}{c}
c=E_{k}\left(p\right)=\mod{\left(p+k\right)}n\\
p=D_{k}\left(c\right)=\mod{\left(c-k\right)}n
\end{array}
\]

\end_inset

Possiamo attaccare questo cifrario con una ricerca esaustiva dello spazio
 delle chiavi, sapendo che 
\begin_inset Formula $\left|\mathscr{K}\right|=n$
\end_inset

, oppure possiamo confrontare un testo in chiaro noto con un testo cifrato
 per ottenere la chiave (
\begin_inset Formula $k=p-c$
\end_inset

).
\end_layout

\begin_layout Standard
Chiamiamo questo tipo di cifrario 
\emph on
mono-alfabetico
\emph default
, ovvero ad ogni carattere corrisponde un carattere.
\end_layout

\begin_layout Subsection
Cifrario affine
\begin_inset CommandInset label
LatexCommand label
name "subsec:Cifrario-affine"

\end_inset


\end_layout

\begin_layout Standard
Utilizza una combinazione lineare applicata al testo in chiaro; per questo
 cifrario vale:
\begin_inset Formula 
\[
\mathscr{P}=\mathscr{C}=\mathbb{Z}_{n},\,\mathscr{K}=k\left(a,\,b\right)
\]

\end_inset

La funzione di cifratura e di decifratura si indicano come:
\begin_inset Formula 
\[
\begin{array}{c}
c=E_{k}\left(p\right)=\mod{\left(ap+b\right)}n\\
p=D_{k}\left(c\right)=\mod{\left(c-b\right)a^{-1}}n
\end{array}
\]

\end_inset

Bisogna prendere 
\begin_inset Formula $a,\,b\in\mathbb{Z}_{n}$
\end_inset

 e per la presenza dell'inversione di 
\begin_inset Formula $a$
\end_inset

, è necessario che esso sia primo relativo a 
\begin_inset Formula $n$
\end_inset

 (
\begin_inset Formula $a\perp n$
\end_inset

); se così non fosse, si verificherebbero delle collisioni nella cifratura.
\end_layout

\begin_layout Subsection
Cifrario a sostituzione
\end_layout

\begin_layout Standard
Ogni carattere è sostituito da un'altro, secondo una tabella arbitraria;
 esso è la generalizzazione dei due precedenti cifrari (la chiave è una
 permutazione dell'alfabeto), e vale
\begin_inset Formula 
\[
\mathscr{P}=\mathscr{C}=\mathbb{Z}_{n},\,\left|\mathscr{K}\right|=n!
\]

\end_inset

La chiave è la tabella di sostituzione, e le funzioni di cifratura e decifratura
 sono determinate dalle sostituzioni indicate nella tabella.
\end_layout

\begin_layout Standard
Possiamo attaccare questo cifrario (e tutti gli altri cifrari mono-alfabetici)
 analizzando l'entropia dei singoli simboli dell'alfabeto: nel caso di messaggi
 cifrati in linguaggio naturale, l'analisi delle frequenze dei simboli può
 rivelare lettere molto usate.
\end_layout

\begin_layout Standard
Altri attacchi di questo tipo includono l'analisi della frequenza dei digrammi
 e trigrammi (coppie e triple di lettere).
\end_layout

\begin_layout Subsection
Cifrario di Vigenère
\end_layout

\begin_layout Standard
Questo cifrario lavora su blocchi di 
\begin_inset Formula $h$
\end_inset

 caratteri alla volta, e per questo viene detto poli-alfabetico.
 In questo caso abbiamo:
\begin_inset Formula 
\[
\mathscr{P}=\mathscr{C}=\mathscr{K}=\left(\mathbb{Z}_{n}\right)^{h}
\]

\end_inset

La chiave, il testo in chiaro e il testo cifrato saranno vettori di 
\begin_inset Formula $h$
\end_inset

 elementi:
\begin_inset Formula 
\[
k=\left(k_{1},\,\ldots,\,k_{h}\right),\,p=\left(p_{1},\,\ldots,\,p_{h}\right),\,c=\left(c_{1},\,\ldots,\,c_{h}\right)
\]

\end_inset

Le regole di cifratura e decifratura sono le stesse del cifrario di Cesare,
 applicate su ciascun elemento del vettore 
\begin_inset Formula $p$
\end_inset

 o 
\begin_inset Formula $c$
\end_inset

:
\begin_inset Formula 
\[
\begin{array}{c}
c=E_{k}\left(p\right)=\left(\mod{p_{1}+k_{1}}n,\,\ldots,\,\mod{p_{h}+k_{h}}n\right)\\
p=D_{k}\left(c\right)=\left(\mod{c_{1}-k_{1}}n,\,\ldots,\,\mod{c_{h}-k_{h}}n\right)
\end{array}
\]

\end_inset

In questo cifrario gli scorrimenti per ciascun elemento del blocco dipendono
 dalla posizione al suo interno; la stessa lettera verrà cifrata in modo
 diverso a seconda della sua posizione nel blocco; l'analisi di frequenza
 si applica, suddividendo la frequenza di un simbolo su 
\begin_inset Formula $h$
\end_inset

 possibili modi di cifrarlo (la difficoltà cresce all'aumentare di 
\begin_inset Formula $h$
\end_inset

).
\end_layout

\begin_layout Section
Cifrario a permutazione
\end_layout

\begin_layout Standard
Si tratta di un cifrario a blocco (lavora su 
\begin_inset Formula $h$
\end_inset

 simboli alla volta), che permuta le posizioni dei caratteri in ogni blocco.
 Al contrario del cifrario a sostituzione, la permutazione in ogni blocco
 è indipendente.
 La chiave adottata è una permutazione delle posizioni all'interno del blocco.
\end_layout

\begin_layout Example

\emph on
Dato il cifrario a permutazione con blocchi di dimensione 
\begin_inset Formula $n=6$
\end_inset

 e permutazione 
\begin_inset Formula $k=\left(3,\,5,\,1,\,6,\,4,\,2\right)$
\end_inset

, cifrare il messaggio 
\begin_inset Formula $p=``\text{she sells sea shells}"$
\end_inset

 (gli spazi tra le parole non sono caratteri dell'alfabeto).
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Identifichiamo i blocchi di 
\begin_inset Formula $n=6$
\end_inset

 caratteri; il primo blocco da sinistra è 
\begin_inset Formula $\mathbb{B}_{1}=``\text{shesel}"$
\end_inset

, che possiamo indicare come:
\begin_inset Formula 
\[
p=\Bigl(\begin{array}{cccccc}
{\scriptscriptstyle 1} & {\scriptscriptstyle 2} & {\scriptscriptstyle 3} & {\scriptscriptstyle 4} & {\scriptscriptstyle 5} & {\scriptscriptstyle 6}\\
\text{s,} & \text{h}, & \text{e}, & \text{s}, & \text{e}, & \text{l}
\end{array}\Bigr)
\]

\end_inset

A questo punto applichiamo la permutazione 
\begin_inset Formula $k$
\end_inset

, che sposta i simboli del blocco nella seguente configurazione:
\begin_inset Formula 
\[
c=\Bigl(\begin{array}{cccccc}
{\scriptscriptstyle 3} & {\scriptscriptstyle 5} & {\scriptscriptstyle 1} & {\scriptscriptstyle 6} & {\scriptscriptstyle 4} & {\scriptscriptstyle 2}\\
\text{e,} & \text{e}, & \text{s}, & \text{l}, & \text{s}, & \text{h}
\end{array}\Bigr)
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Questo cifrario risulta poli-alfabetico, e ogni blocco di lunghezza 
\begin_inset Formula $n$
\end_inset

 può essere cifrato in 
\begin_inset Formula $n!$
\end_inset

 modi differenti.
\end_layout

\begin_layout Section
Proprietà fondamentali dei cifrari a blocchi
\end_layout

\begin_layout Standard
In un cifrario a blocco di lunghezza 
\begin_inset Formula $n$
\end_inset

, si prende un messaggio in chiaro e a partire da esso si ottiene un messaggio
 cifrato, entrambi della stessa lunghezza (
\begin_inset Formula $\left|p\right|=\left|c\right|=n$
\end_inset

).
\end_layout

\begin_layout Standard
Nell'articolo
\begin_inset Foot
status open

\begin_layout Plain Layout

\emph on
\begin_inset Quotes eld
\end_inset

Communication Theory of Secrecy Systems
\begin_inset Quotes erd
\end_inset

 
\emph default
(1949), Bell System Technical Journal
\end_layout

\end_inset

 sulla crittografia pubblicato da Shannon, egli espone due proprietà fondamental
i che ogni sistema crittografico dovrebbe avere:
\end_layout

\begin_layout Description

\noun on
Diffusione
\noun default
 Si ha diffusione perfetta se, cambiando 1 bit del blocco in chiaro, tutti
 i bit del blocco cifrato corrispondente cambiano in maniera apparentemente
 casuale, con probabilità 
\begin_inset Formula $1/2$
\end_inset

.
 La perfetta diffusione vale anche nel senso opposto: cambiando 1 bit del
 blocco cifrato, tutti i bit del blocco in chiaro corrispondente cambiano
 con probabilità 
\begin_inset Formula $1/2$
\end_inset

.
\end_layout

\begin_layout Description

\noun on
Confusione
\noun default
 La chiave deve avere effetto su tutti i bit del blocco cifrato: a parità
 di blocco in chiaro, se cambia 1 bit della chiave, tutti i bit del blocco
 cifrato cambieranno, con probabilità 
\begin_inset Formula $1/2$
\end_inset

.
\end_layout

\begin_layout Standard
Queste due proprietà si riassumono nella seguente affermazione:
\end_layout

\begin_layout Proposition
\begin_inset CommandInset label
LatexCommand label
name "prop:Proprietà-fondamentali-cifrari-Shannon"

\end_inset

Non solo ogni bit della chiave ha effetto su 
\bar under
tutti
\bar default
 i bit del blocco cifrato, ma anche tutti i bit della chiave hanno effetto
 su 
\bar under
ogni
\bar default
 bit del blocco cifrato.
\end_layout

\begin_layout Chapter
Cifrario DES
\end_layout

\begin_layout Section
Introduzione
\end_layout

\begin_layout Subsection
Nascita del DES come standard
\end_layout

\begin_layout Standard
L'algoritmo Data Encryption Standard (DES) nasce negli anni '70 per soddisfare
 la necessità degli Stati Uniti di usare un cifrario per le comunicazioni
 segrete; allora l'NBS (attuale NIST) pubblica un bando, a cui risponde
 IBM con l'algoritmo LUCIFER.
\end_layout

\begin_layout Standard
L'algoritmo di IBM conteneva delle tabelle di sostituzione, che furono modificat
e dall'NBS: questo portò a pensare, per molti anni, che il governo introdotto
 una trapdoor nelle tabelle di sostituzione, tuttavia non fu mai trovata.
\end_layout

\begin_layout Standard
Infine il DES fu pubblicato come standard nel '77; col progredire della
 potenza di calcolo nei calcolatori, questo algoritmo è divenuto suscettibile
 a diversi attacchi, così sono state introdotte delle sue varianti (compatibilme
nte con l'hardware legacy), come il triplo DES (3DES).
\end_layout

\begin_layout Standard
Di per sé l'algoritmo DES è robusto, tuttavia la sua chiave di 56bit è relativam
ente corta (
\begin_inset Formula $\left|\mathscr{K}\right|=2^{56}\simeq2^{6}\cdot10^{15}$
\end_inset

), e questo permette di effettuare in breve tempo un'analisi esaustiva dello
 spazio delle chiavi.
 Oltre a questo, DES sarebbe stato vulnerabile ad attacchi di crittoanalisi
 differenziale (si cerca un errore nella realizzazione della proprietà di
 perfetta diffusione, prendendo un blocco di testo in chiaro e cifrandolo,
 cambiando un bit alla volta e cercando evidenza statistica all'interno
 del blocco cifrato) se il suo algoritmo avesse avuto 14 
\emph on
round
\emph default
; tuttavia la specifica di IBM prevede 16 
\emph on
round
\emph default
 (si veda 
\begin_inset CommandInset ref
LatexCommand formatted
reference "prop:Proprietà-fondamentali-cifrari-Shannon"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Standard
DES è un cifrario a blocchi di 64bit, che nel modo più semplice lavora prendendo
 un blocco, cifrandolo e poi ripetendo il processo in modo indipendente
 per il blocco successivo (modo 
\emph on
ECB
\emph default
).
\end_layout

\begin_layout Subsection
Schema Feistel
\end_layout

\begin_layout Standard
Descriviamo l'idea dietro a questo schema con la procedura da implementare
 per realizzarlo:
\end_layout

\begin_layout Itemize
prendiamo un blocco di bit 
\begin_inset Formula $B_{1}$
\end_inset

, e dividiamolo in due metà, in modo da avere la sinistra 
\begin_inset Formula $L_{1}$
\end_inset

 e la destra 
\begin_inset Formula $R_{1}$
\end_inset

;
\end_layout

\begin_layout Itemize
usiamo la chiave 
\begin_inset Formula $K$
\end_inset

 per generare una sotto-chiave di round 
\begin_inset Formula $K_{i}$
\end_inset

;
\end_layout

\begin_layout Itemize
permutiamo le due metà al round 
\begin_inset Formula $i$
\end_inset

-esimo, facendo passare la metà di sinistra attraverso una funzione fortemente
 non lineare che utilizzi la chiave: 
\begin_inset Formula $B_{i}=R_{i-1}|L_{i-1}\oplus f\left(R_{i-1},\,K_{i}\right)$
\end_inset

;
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
La notazione 
\begin_inset Formula $A|B$
\end_inset

 indica la concatenazione di 
\begin_inset Formula $B$
\end_inset

 dopo di 
\begin_inset Formula $A$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Itemize
se vi sono 
\begin_inset Formula $n$
\end_inset

 round in totale, non si effettua la permutazione di 
\begin_inset Formula $L_{i}$
\end_inset

 ed 
\begin_inset Formula $R_{i}$
\end_inset

 al round 
\begin_inset Formula $n$
\end_inset

-esimo, e si ottiene 
\begin_inset Formula $B_{n}=R_{n}|L_{n}$
\end_inset


\end_layout

\begin_layout Standard
Possiamo presumere che, continuando a permutare le due metà del blocco,
 grazie alla funzione 
\begin_inset Formula $f\left(\right)$
\end_inset

, vi sarà un'ottima diffusione dei bit in ingresso; inoltre la confusione
 sarà garantita dalla presenza delle chiavi di round 
\begin_inset Formula $K_{i}$
\end_inset

, generate a partire dalla chiave iniziale.
\end_layout

\begin_layout Standard
Lo schema Feistel permette di decifrare con la stessa procedura della cifratura,
 utilizzando 
\begin_inset Formula $B_{n}$
\end_inset

 e 
\begin_inset Formula $K_{n}$
\end_inset

 come ingresso, e ottenendo 
\begin_inset Formula $B_{1}$
\end_inset

 alla fine degli 
\begin_inset Formula $n$
\end_inset

 round.
\end_layout

\begin_layout Section
Algoritmo DES
\end_layout

\begin_layout Standard
Il DES applica 16 volte (round) il blocco di Feistel, utilizzando la seguente
 procedura:
\end_layout

\begin_layout Enumerate
si applica una permutazione iniziale (IP) fissata al blocco di 64bit in
 chiaro;
\end_layout

\begin_layout Enumerate
si prende la chiave DES (da 64bit), si rimuovono gli 8bit di parità e si
 utilizzano i 56bit per produrre le successive chiavi di round 
\begin_inset Formula $K_{i}$
\end_inset

;
\end_layout

\begin_deeper
\begin_layout Enumerate
si permutano i bit della chiave da 56bit, poi essa viene divisa in due blocchi
 da 28bit, rispettivamente 
\begin_inset Formula $C_{0}$
\end_inset

 e 
\begin_inset Formula $D_{0}$
\end_inset

;
\end_layout

\begin_layout Enumerate
si produce la chiave di round secondo una tabella di shift fissa (funzione
 
\begin_inset Formula $LS_{i}$
\end_inset

), che fa scorrere i bit delle due metà della chiave (
\begin_inset Formula $C_{i}$
\end_inset

, 
\begin_inset Formula $D_{i}$
\end_inset

) in modo circolare di 1 o 2 posizioni, a seconda del numero 
\begin_inset Formula $i$
\end_inset

 del round: 
\begin_inset Formula $C_{i}=LS_{i}\left(C_{i-1}\right),\,D_{i}=LS_{i}\left(D_{i-1}\right)\implies K_{i}=C_{i}|D_{i}$
\end_inset

;
\end_layout

\begin_layout Enumerate
tramite una tabella di riduzione, si estraggono dalla chiave di round 48bit,
 da usare nella funzione 
\begin_inset Formula $f\left(\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
si prende la chiave di round 
\begin_inset Formula $K_{i}$
\end_inset

 e il blocco sinistro di round 
\begin_inset Formula $R_{i-1}$
\end_inset

 e si genera il blocco destro 
\begin_inset Formula $L_{i}$
\end_inset

 tramite la funzione 
\begin_inset Formula $f\left(\right)$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
il blocco 
\begin_inset Formula $R_{i-1}$
\end_inset

 in ingresso viene espanso a 48bit tramite una tabella di espansione;
\end_layout

\begin_layout Enumerate
si somma modulo due la chiave di round al blocco espanso: 
\begin_inset Formula $E\left(R_{i-1}\right)\oplus K_{i}$
\end_inset

;
\end_layout

\begin_layout Enumerate
si divide il risultato da 48bit in 8 gruppi da 6bit;
\end_layout

\begin_layout Enumerate
ciascun gruppo viene modificato tramite una S-Box (8 in totale), che prende
 un blocco da 6bit e lo riduce a 4bit;
\end_layout

\begin_layout Enumerate
gli 8 gruppi da 4bit sono uniti in un blocco da 32bit, che viene permutato;
\end_layout

\begin_layout Enumerate
il blocco ottenuto viene infine usato assieme alla chiave nella funzione
 
\begin_inset Formula $f\left(\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Subsection*
Initial Permutation (IP)
\end_layout

\begin_layout Standard
Essa lavora su un blocco di 64bit, e produce un'altro blocco altrettanto
 lungo.
 Osserviamo che la permutazione iniziale, nota e fissa, non migliora diffusione
 o confusione; alcune ipotesi sostengono che poteva essere un modo per inizializ
zare l'hardware dell'epoca ('70).
\end_layout

\begin_layout Standard
La seguente tabella di look-up realizza la permutazione iniziale del DES:
\end_layout

\begin_layout Subsection*
Funzione 
\begin_inset Formula $\boldsymbol{f}$
\end_inset


\end_layout

\begin_layout Standard
Essa lavora su blocchi di 32bit, e garantisce ottima diffusione grazie alle
 permutazioni effettuate sui blocchi di bit.
\end_layout

\begin_layout Subsection*
S-Box
\end_layout

\begin_layout Standard
Tabella di sostituzione che prende un blocco da 6bit, e usando il primo
 e l'ultimo per indicare la riga e i 4 centrali per indicare la colonna,
 si ottiene un blocco da 4bit.
 Infatti, la tabella dell'S-Box contiene valori di massimo 4bit, che vengono
 indirizzati nel modo seguente: se 
\begin_inset Formula $B_{h}=\overset{{\scriptscriptstyle \text{R}_{0}}}{0}\underset{{\scriptscriptstyle \text{C}_{0}}}{0}\underset{{\scriptscriptstyle \text{C}_{1}}}{1}\underset{{\scriptscriptstyle \text{C}_{2}}}{0}\underset{{\scriptscriptstyle \text{C}_{3}}}{0}\overset{{\scriptscriptstyle \text{R}_{1}}}{1}$
\end_inset

, allora il valore ottenuto sarà l'elemento alla riga 
\begin_inset Formula $01_{2}=1_{10}$
\end_inset

 e alla colonna 
\begin_inset Formula $0100_{2}=4_{10}$
\end_inset

 della S-Box 
\begin_inset Formula $h$
\end_inset

 (righe e colonne sono numerate a partire da 0); queste tabelle sono state
 progettate per realizzare una trasformazione non lineare sui blocchi.
\end_layout

\begin_layout Subsection*
Chiave di round
\end_layout

\begin_layout Standard
Ogni bit della chiave sarà utilizzato mediamente in 14 su 16 round; questo
 permette di realizzare ottima confusione.
 I bit di parità della chiave, che portano la sua lunghezza da 56 a 64bit,
 sono un metodo per controllarne l'integrità (per esempio per trasmettere
 la chiave senza errori, come controllo aggiuntivo).
\end_layout

\begin_layout Standard
Notiamo che il DES rispetta il principio di Kerchoffs (pagina 
\begin_inset CommandInset ref
LatexCommand pageref
reference "thm:Principio-di-Kerchoffs"
plural "false"
caps "false"
noprefix "false"

\end_inset

) infatti la chiave deve rimanere privata, ed è l'unico 
\begin_inset Quotes eld
\end_inset

ingrediente
\begin_inset Quotes erd
\end_inset

 che permette di decifrare un blocco cifrato; l'algoritmo è invece pubblico
 e ben definito.
 L'algoritmo è infatti progettato per rendere l'analisi esaustiva dello
 spazio delle chiavi l'unico tipo di attacco possibile.
\end_layout

\begin_layout Section
Modi operativi
\begin_inset CommandInset label
LatexCommand label
name "sec:Modi-operativi-cifrario-blocchi"

\end_inset


\end_layout

\begin_layout Standard
I cifrari a blocchi, come DES, supportano i modi operativi descritti nelle
 seguenti sotto-sezioni.
\end_layout

\begin_layout Subsection*
Electronic Code Book (ECB)
\end_layout

\begin_layout Standard
Il messaggio in chiaro è diviso in blocchi, i quali sono cifrati in modo
 indipendente, utilizzando la stessa chiave:
\begin_inset Formula 
\[
c_{i}=E_{k}\left(p_{i}\right),\quad p_{i}=E_{k}\left(c_{i}\right)
\]

\end_inset

Risulta facile individuare i blocchi ripetuti, inoltre è possibile costruire
 una tabella con le corrispondenze tra blocchi i chiaro e blocchi cifrati.
\end_layout

\begin_layout Subsection*
Cipher Block Chaining (CBC)
\end_layout

\begin_layout Standard
Si tratta di un modo operativo concatenato: in qualche modo, ciascun blocco
 è legato agli altri, e si ottiene l'effetto di non avere blocchi ripetuti
 (questo vale per ciascun modo concatenato).
 CBC usa un vettore di inizializzazione (IV), come se fosse una chiave addiziona
le, come primo blocco cifrato 
\begin_inset Formula $c_{0}$
\end_inset

; a partire da esso, le funzioni di cifratura e decifratura sono definite
 come:
\begin_inset Formula 
\[
c_{i}=E_{k}\left(p_{i}\oplus c_{i-1}\right),\quad p_{i}=c_{i-1}\oplus D_{k}\left(c_{i}\right)
\]

\end_inset

Si noti che IV può essere inviato anche in chiaro.
\end_layout

\begin_layout Subsection*
Cipher Feedback (CFB)
\end_layout

\begin_layout Standard
Si tratta di un modo concatenato.
 Consiste nel cifrare il vettore di inizializzazione e poi sommarlo al blocco
 in chiaro; il risultato è usato come IV per il round successivo.
 Questo algoritmo crea una sequenza di bit pseudo-casuali.
\end_layout

\begin_layout Standard
Per decifrare non è necessaria una funzione specifica, ma basta ripetere
 la somma in base 2 con i blocchi cifrati al posto dei blocchi in chiaro:
\begin_inset Formula 
\[
c_{i}=p_{i}\oplus E_{k}\left(c_{i-1}\right),\quad p_{i}=c_{i}\oplus E_{k}\left(c_{i-1}\right)
\]

\end_inset

Lo svantaggio di questo cifrario è l'amplificazione degli errori di trasmissione
, da un blocco al suo successivo.
\end_layout

\begin_layout Subsection*
Output Feedback Mode (OFB)
\end_layout

\begin_layout Standard
Si tratta di un modo concatenato.
 Consiste nel cifrare il vettore di inizializzazione, sommarlo al blocco
 in chiaro, e poi usare l'IV cifrato come ingresso per il blocco successivo.
 La catena di cifrature effettuate sull'IV costituisce una PRBS (pseudo-random
 binary sequence, una sequenza pseudo-casuale di bit).
 L'unico modo per generare la stessa sequenza è conoscere la chiave; inoltre
 un errore di trasmissione non si propaga tra i blocchi.
\end_layout

\begin_layout Standard
Le funzioni di cifratura e decifratura sono definite come:
\begin_inset Formula 
\[
c_{i}=p_{i}\oplus E_{k}^{\left(i\right)}\left(\text{IV}\right),\quad p_{i}=c_{i}\oplus E_{k}^{\left(i\right)}\left(\text{IV}\right)
\]

\end_inset

dove 
\begin_inset Formula $E_{k}^{\left(i\right)}\left(\text{IV}\right)$
\end_inset

 è la funzione 
\begin_inset Formula $E_{k}$
\end_inset

 applicata in modo ricorsivo per 
\begin_inset Formula $i$
\end_inset

 volte all'IV.
\end_layout

\begin_layout Subsection*
Counter Mode (CTR)
\end_layout

\begin_layout Standard
Questo modo 
\bar under
non
\bar default
 è concatenato.
 Consiste nel cifrare un IV con la chiave, per poi sommarlo al blocco in
 chiaro; per ciascun blocco in chiaro 
\begin_inset Formula $i$
\end_inset

-esimo viene usato un 
\begin_inset Formula $\text{IV}^{\left(i\right)}\coloneqq\text{IV}+i$
\end_inset

, e ogni blocco cifrato è prodotto in modo indipendente; la sicurezza di
 questo modo si basa unicamente su quella della funzione di cifratura (in
 caso di ottima diffusione e confusione, un attaccante non può sapere se
 a IV sta venendo sommato un intero e quale esso sia).
\end_layout

\begin_layout Standard
LE funzioni di cifratura e decifratura sono definite come:
\begin_inset Formula 
\[
c_{i}=p_{i}\oplus E_{k}\left(\text{IV}^{\left(i\right)}\right),\quad p_{i}=c_{i}\oplus E_{k}\left(\text{IV}^{\left(i\right)}\right)
\]

\end_inset


\end_layout

\begin_layout Section
Sicurezza del DES
\end_layout

\begin_layout Subsection
Doppio DES
\end_layout

\begin_layout Standard
Per aumentare la sicurezza di DES potremmo provare ad utilizzare una chiave
 più lunga; in tal caso, ci chiediamo se esista una chiave 
\begin_inset Formula $K^{\prime}=K_{1}|K_{2}$
\end_inset

 tale che 
\begin_inset Formula $\left|K^{\prime}\right|=56+56=112\text{bit}$
\end_inset

, e per essa si verifichi che 
\begin_inset Formula $E_{K^{\prime}}\left(p\right)\equiv E_{K_{2}}\left(E_{K_{1}}\left(c\right)\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Se prendiamo la funzione di cifratura 
\emph on
affine
\emph default
 (si veda 
\begin_inset CommandInset ref
LatexCommand formatted
reference "subsec:Cifrario-affine"
plural "false"
caps "false"
noprefix "false"

\end_inset

), dove abbiamo 
\begin_inset Formula $K_{1}=\left(a,\,b\right)$
\end_inset

, allora possiamo cifrare un testo in chiaro 
\begin_inset Formula $p$
\end_inset

 come 
\begin_inset Formula $c_{1}=E_{K_{1}}\left(p\right)=\mod{a\cdot p+b}n$
\end_inset

; prendiamo un'altra chiave 
\begin_inset Formula $K_{2}=\left(c,\,d\right)$
\end_inset

 e con essa cifriamo di nuovo il messaggio 
\begin_inset Formula $p$
\end_inset

, ottenendo 
\begin_inset Formula $c_{2}=E_{K_{2}}\left(p\right)=\mod{c\cdot p+d}n$
\end_inset

.
\end_layout

\begin_layout Standard
Si nota subito che, per le caratteristiche della funzione di cifratura (combinaz
ione lineare con la chiave), esiste 
\begin_inset Formula $K^{\prime}=\left(a\cdot c,\,b+d\right)$
\end_inset

 per cui vale 
\begin_inset Formula $c^{\prime}=E_{K_{2}}\left(E_{K_{1}}\left(p\right)\right)\equiv E_{K^{\prime}}\left(p\right)=\mod{ac\cdot p+b+d}n$
\end_inset

.
 Dato che il cifrario affine forma un gruppo algebrico (chiuso rispetto
 alla composizione), cifrando due volte con due chiavi 
\begin_inset Formula $K_{1}$
\end_inset

 e 
\begin_inset Formula $K_{2}$
\end_inset

 non viene aumentata la cardinalità dello spazio delle chiavi, dato che
 esiste in ogni caso una chiave equivalente 
\begin_inset Formula $K^{\prime}$
\end_inset

 di lunghezza identica alle singole chiavi.
\end_layout

\begin_layout Standard
Il DES non gode di questa proprietà: cifrando più volte il messaggio in
 chiaro con due chiavi differenti, aumenta di 
\begin_inset Formula $2^{\left|K\right|}$
\end_inset

 la cardinalità dello spazio delle chiavi.
 Nel caso del doppio DES (2DES), si ha una chiave 
\begin_inset Formula $K=K_{1}|K_{2}$
\end_inset

 lunga il doppio di una chiave singola, dunque 
\begin_inset Formula $\left|\mathscr{K}\right|=2^{112}\simeq2^{2}\cdot10^{33}$
\end_inset

.
\end_layout

\begin_layout Standard
Il doppio DES è suscettibile dell'attacco Meet-in-the-Middle (MiM): questa
 vulnerabilità permette di analizzare al più 
\begin_inset Formula $2^{57}$
\end_inset

 chiavi, invece delle 
\begin_inset Formula $2^{112}$
\end_inset

 totali; per ovviare al problema si è scelto di proseguire con la composizione,
 ottenendo il triplo DES.
\end_layout

\begin_layout Subsection
Triplo DES
\end_layout

\begin_layout Standard
Questo cifrario è la composizione di tre chiavi DES, che portano la cardinalità
 dello spazio delle chiavi a 
\begin_inset Formula $2^{168}$
\end_inset

; anche con un attacco MiM lo spazio delle chiavi si riduce al più a 
\begin_inset Formula $2^{112}$
\end_inset

, e al giorno d'oggi è considerato sicuro almeno quanto l'AES, ma è meno
 veloce (bisogna cifrare 3 volte con DES).
\end_layout

\begin_layout Standard
Il metodo più intuitivo per implementare il 3DES è effettuare tre volte
 la cifratura con tre chiavi differenti: 
\begin_inset Formula $c=E_{K_{1}}\left(E_{K_{2}}\left(E_{K_{3}}\left(p\right)\right)\right)$
\end_inset

; un approccio che utilizza solo due chiavi, senza ridurre lo spazio delle
 chiavi, è il seguente:
\begin_inset Formula 
\[
c=E_{K_{1}}\left(D_{K_{2}}\left(E_{K_{1}}\left(p\right)\right)\right),\quad p=D_{K_{1}}\left(E_{K_{2}}\left(D_{K_{1}}\left(c\right)\right)\right)
\]

\end_inset

Questa implementazione del triplo DES è compatibile con l'hardware per il
 singolo DES.
\end_layout

\begin_layout Standard
Rivest ha proposto la seguente alternativa, chiamata DESX, che usa tre chiavi
 ma effettua una sola cifratura DES, ed è sicura quanto il 3DES standard:
\begin_inset Formula 
\[
c=K_{3}\oplus E_{K_{2}}\left(K_{1}\oplus p\right)
\]

\end_inset


\end_layout

\begin_layout Subsection
Attacco Meet-in-the-Middle
\end_layout

\begin_layout Standard
Abbiamo già osservato che DES non è un gruppo; ci chiediamo come possiamo
 affrontare questa caratteristica, per ridurre lo spazio delle chiavi nel
 caso di una composizione.
 Conduciamo un attacco di testo in chiaro noto, partendo da una coppia corrispon
dente di testo in chiaro e testo cifrato 
\begin_inset Formula $p\leftrightarrows c$
\end_inset

, senza conoscere la chiave.
\end_layout

\begin_layout Standard
Poniamoci nel caso di un testo cifrato ricavato tramite 2DES come 
\begin_inset Formula $c=E_{K_{2}}\left(E_{K_{1}}\left(p\right)\right)$
\end_inset

, e vogliamo ottenere 
\begin_inset Formula $K^{\prime}=K_{1}|K_{2}$
\end_inset

.
 Se quanto affermato sul testo cifrato è vero, allora applicando a 
\begin_inset Formula $c$
\end_inset

 la decifratura con 
\begin_inset Formula $K_{2}$
\end_inset

 si ottiene
\begin_inset Formula 
\begin{equation}
D_{K_{2}}\left(c\right)=E_{K_{1}}\left(p\right)\label{eq:MiM-2DES}
\end{equation}

\end_inset

Effettuiamo una esplorazione esaustiva dello spazio delle chiavi 
\begin_inset Formula $K_{1}$
\end_inset

 memorizzando i risultati in una tabella, per cui sarà necessario memorizzare
 
\begin_inset Formula $2^{56}$
\end_inset

 valori da 8Byte (64bit) ovvero circa 0.5EB; poi effettuiamo la stessa analisi
 per lo spazio delle chiavi 
\begin_inset Formula $K_{2}$
\end_inset

, questa volta evitando di memorizzare i risultati ma confrontando ciascuna
 chiave trovata con i valori di 
\begin_inset Formula $K_{1}$
\end_inset

 salvati.
\end_layout

\begin_layout Standard
Notiamo che saranno necessarie al più 
\begin_inset Formula $2\cdot2^{56}=2^{57}$
\end_inset

 operazioni di cifratura e decifratura con DES, e al più 
\begin_inset Formula $2^{112}$
\end_inset

 confronti.
\end_layout

\begin_layout Section
Sicurezza delle password
\end_layout

\begin_layout Subsection
Funzioni di hash
\end_layout

\begin_layout Standard
Per ragioni di sicurezza, una password non viene mai memorizzata in chiaro;
 in pratica, si usa una funzione di 
\emph on
hash
\emph default
.
 Si tratta di una funzione con le seguenti caratteristiche:
\end_layout

\begin_layout Itemize
accetta un ingresso di lunghezza arbitraria, produce una uscita di lunghezza
 fissa;
\end_layout

\begin_layout Itemize
non è invertibile (ci sono infiniti messaggi con lo stesso hash in uscita
 dalla funzione);
\end_layout

\begin_layout Itemize
sia unidirezionale (presa una uscita 
\begin_inset Formula $y\left(x\right)$
\end_inset

, sia impossibile trovare uno qualunque degli infiniti 
\begin_inset Formula $x$
\end_inset

 che produca quell'uscita);
\end_layout

\begin_layout Itemize
goda di ottima diffusione.
\end_layout

\begin_layout Standard
Usando una simile funzione, possiamo memorizzare lo hash della password,
 e confrontarlo con l'hash calcolato sulla password quando fornita.
\end_layout

\begin_layout Standard
È possibile attaccare queste funzioni provando un gran numero di ingressi
 casuali differenti, rispetto al numero delle possibili uscite; la sicurezza
 viene determinata dalla lunghezza dell'uscita.
\end_layout

\begin_layout Standard
Si può mitigare questo attacco scegliendo una funzione di hash particolarmente
 lenta.
\end_layout

\begin_layout Subsection
Attacco del vocabolario
\end_layout

\begin_layout Standard
Dato che quasi nessuno sceglie una stringa veramente casuale come password,
 è possibile attaccare l'hash corrispondente generando tutti gli hash di
 tutte le parole di una lingua, apportando eventuali variazioni sulle singole
 parole (aggiunta di un numero, iniziale maiuscola, eccetera...) e poi confrontando
 gli hash ottenuti con quelli nel file delle password.
\end_layout

\begin_layout Standard
All'interno di sistemi con un gran numero di utenti, la probabilità di trovare
 una password 
\begin_inset Quotes eld
\end_inset

banale
\begin_inset Quotes erd
\end_inset

 per almeno qualche utenza è molto elevata.
\end_layout

\begin_layout Standard
La contromisura migliore è applicare un 
\emph on
salt
\emph default
 (
\begin_inset Quotes eld
\end_inset

sale
\begin_inset Quotes erd
\end_inset

) alla password; esso è una stringa di bit, memorizzata in chiaro nel file
 delle password.
 L'hash 
\begin_inset Quotes eld
\end_inset

salato
\begin_inset Quotes erd
\end_inset

 è calcolato sulla stringa ottenuta dalla concatenazione del sale con la
 password.
\end_layout

\begin_layout Standard
Il sale non aumenta la complessità dell'attacco sul singolo utente, bensì
 ha il vantaggio che, nel caso di un attacco del vocabolario su numerose
 utenze, essi abbiano tutti un hash diverso, anche a parità di password,
 per via del sale (che sarà diverso per ogni utente).
 Un attaccante dovrà calcolare l'hash per ogni parola del vocabolario, per
 ogni sale possibile.
\end_layout

\begin_layout Standard
Nei sistemi UNIX, le password sono salate con un salt a 12bit, e la funzione
 di hash è basata su DES; tradizionalmente si troncava la password utente
 a 64bit (8 caratteri), da questi si ottenevano i primi 7 bit di ciascun
 Byte (per rappresentare solo i caratteri stampabili), e i 56bit così ottenuti
 erano usati come chiave DES.
 Questa chiave 
\begin_inset Formula $K_{h}$
\end_inset

 è poi usata per cifrare un blocco di 0 da 64bit, con 25 round di DES; a
 ogni round, i 12bit del sale sono usati per perturbare la funzione di cifratura
 (modificando le S-Box, rende inutile l'implementazione hardware a priori).
 Infine sale e blocco cifrato sono codificati in base 64.
\end_layout

\begin_layout Standard
La funzione così realizzata è reputata unidirezionale: infatti ottenere
 la password senza conoscere la chiave e con un DES da più di 16 round,
 per giunta perturbato dal sale, è un problema difficile.
\end_layout

\begin_layout Chapter
Cifrario AES
\end_layout

\begin_layout Section
Introduzione
\end_layout

\begin_layout Standard
Nel '97, quando DES era ancora in vigore, il NIST fece un bando per la creazione
 di un nuovo standard crittografico, destinato alle informazioni governative;
 l'algoritmo selezionato fu chiamato AES.
 Si tratta di un cifrario a blocchi da 128bit, con chiave a 128, 192 o 256bit.
\end_layout

\begin_layout Standard
La procedura per selezionare l'algoritmo fu gestita in modo pubblico e trasparen
te, attraverso delle conferenze; prima di selezionare l'algoritmo che sarebbe
 divenuto AES, arrivarono 
\begin_inset Quotes eld
\end_inset

in finale
\begin_inset Quotes erd
\end_inset

 i cinque seguenti algoritmi (oggi ancora usati, perché paragonabili all'AES
 nella sicurezza): MARS, RC6, Rijndael, Serpent, Twofish.
\end_layout

\begin_layout Standard
Nel 2000 viene infine selezionato Rijndael, che viene rinominato in AES;
 in particolare, Rijndael definisce una famiglia di cifrari: per AES viene
 selezionato una dimensione del blocco di 128bit e chiavi da 128 a 265bit.
\end_layout

\begin_layout Standard
Dal punto di vista matematico, AES non si basa su uno schema Feistel, ma
 su una rete di sostituzioni e trasformazioni; a seconda della dimensione
 della chiave, il Rijndael effettua 10, 12 o 14 cicli su ciascun blocco,
 e può essere utilizzato in tutti i modi operativi concatenati mostrati
 per il DES (vedere 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Modi-operativi-cifrario-blocchi"
plural "false"
caps "false"
noprefix "false"

\end_inset

).
\end_layout

\begin_layout Section
Algoritmo AES
\end_layout

\begin_layout Standard
Per maggiore semplicità, analizziamo il caso di Rijndael con chiave a 128bit,
 e 10 round.
 Osserviamo che i blocchi da 128bit sono suddivisi in 16Byte, organizzati
 in matrici 
\begin_inset Formula $4\times4$
\end_inset

; tutti gli elementi di queste matrici sono ottetti del campo 
\begin_inset Formula $\mathcal{GF}\left(2^{8}\right)$
\end_inset

 e rappresentano i polinomi al suo interno, dove il polinomio irriducibile
 per definire il campo è 
\begin_inset Formula $P\left(x\right)=x^{8}+x^{4}+x^{3}+x^{2}+x+1$
\end_inset

.
 L'ottetto di zeri non è invertibile, tuttavia deve essere ammissibile nel
 cifrario: si consideri l'elemento nullo come inverso di sé stesso.
\end_layout

\begin_layout Standard
Ogni round del Rijndael è composto d 4 livelli, che operano sulla matrice
 
\begin_inset Formula $4\times4$
\end_inset

 che rappresenta il blocco da 128bit:
\end_layout

\begin_layout Itemize
Substitute Byte (SB): tabella di sostituzione, simile alle S-Box del DES,
 ma costruita algebricamente in maniera trasparente;
\end_layout

\begin_layout Itemize
Shift Row (SR): scorrimento delle righe della matrice a sinistra;
\end_layout

\begin_layout Itemize
Mix Column (MC): scorrimento delle colonne a sinistra, evita la degenerazione
 del cifrario in 4 cifrari applicati alle singole colonne della matrice;
\end_layout

\begin_layout Itemize
Add Round Key (ARK): per ciascun ciclo si aggiunge una chiave di round,
 derivata da quella iniziale a 128bit.
\end_layout

\begin_layout Standard
L'algoritmo usa round e livelli nel modo seguente:
\end_layout

\begin_layout Enumerate
ARK con chiave di round 0;
\end_layout

\begin_layout Enumerate
nove round che usano i livelli 
\begin_inset Formula $\text{SB}\rightarrow\text{SR}\rightarrow\text{MC}\rightarrow\text{ARK}$
\end_inset

, con le chiavi di round dalla 1 alla 9;
\end_layout

\begin_layout Enumerate
un ultimo round che usa i livelli 
\begin_inset Formula $\text{SB}\rightarrow\text{SR}\rightarrow\text{ARK}$
\end_inset

, con la chiave di round 10.
\end_layout

\begin_layout Standard
Le differenze col DES riguardano l'assenza del Feistel, rispetto al rimescolamen
to dei bit dato dai quattro livelli di ciascun round; il risultato è una
 apparente diffusione perfetta già dal secondo round.
 Inoltre, tutte le operazioni sugli ottetti del blocco, sono all'interno
 del campo 
\begin_inset Formula $\mathcal{GF}\left(256\right)$
\end_inset

.
\end_layout

\begin_layout Subsection*
SB
\end_layout

\begin_layout Standard
Sostituzione
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
La notazione 
\begin_inset Formula $\boldsymbol{A}$
\end_inset

 in maiuscolo corsivo e grassetto, indica che A è una matrice
\end_layout

\end_inset

 non lineare applicata ai Byte (elementi) della matrice; secondo una matrice
 di sostituzione con 16 righe e 16 colonne, numerate a partire da 0, indirizzate
 tramite gli stessi bit degli ottetti, nel modo seguente: sia 
\begin_inset Formula $\boldsymbol{A}$
\end_inset

 la matrice che rappresenta il blocco di partenza, e sia 
\begin_inset Formula $a_{1,0}=10001011$
\end_inset

; sia 
\begin_inset Formula $\boldsymbol{B}$
\end_inset

 la matrice ottenuta al termine del livello SB; allora 
\begin_inset Formula $b_{1,0}$
\end_inset

 si ottiene prendendo il valore indicato all'incrocio della riga 8 con la
 colonna 11, nella tabella di sostituzione, e sostituendolo al valore di
 un elemento di 
\begin_inset Formula $\boldsymbol{A}$
\end_inset

 ( per esempio 
\begin_inset Formula $a_{i,j}=\overset{\text{riga}}{\overbrace{1000}}\underset{\text{colonna}}{\underbrace{1011}}\rightarrow61$
\end_inset

).
\end_layout

\begin_layout Standard
Questa tabella si calcola nel modo seguente:
\end_layout

\begin_layout Itemize
l'input è un ottetto di bit 
\begin_inset Formula $a_{i,j}=x_{7}x_{6}x_{5}x_{4}x_{3}x_{2}x_{1}x_{0}$
\end_inset


\end_layout

\begin_layout Itemize
calcoliamo il suo inverso in 
\begin_inset Formula $\mathcal{GF}\left(256\right)\ni a_{i,j}^{-1}=y_{7}y_{6}y_{5}y_{4}y_{3}y_{2}y_{1}y_{0}$
\end_inset

 (assumendo che 000000000 sia l'inverso di sé stesso)
\end_layout

\begin_layout Itemize
prendiamo l'ottetto 
\begin_inset Formula $a_{i,j}^{-1}$
\end_inset

, scriviamolo partendo dal bit meno significativo e come un vettore colonna
 
\begin_inset Formula $\left(y_{0}y_{1}y_{2}y_{3}y_{4}y_{5}y_{6}y_{7}\right)^{\text{T}}$
\end_inset


\end_layout

\begin_layout Itemize
computiamo 
\begin_inset Formula $b_{i,j}=z_{7}z_{6}z_{5}z_{4}z_{3}z_{2}z_{1}z_{0}$
\end_inset

 e scriviamolo come 
\begin_inset Formula $\left(z_{0}z_{1}z_{2}z_{3}z_{4}z_{5}z_{6}z_{7}\right)^{\text{T}}$
\end_inset


\end_layout

\begin_layout Standard
per computare 
\begin_inset Formula $b_{i,j}$
\end_inset

 usiamo la seguente trasformazione, per diffondere e confondere ulteriormente
 i bit:
\begin_inset Formula 
\[
b_{i,j}=\begin{bmatrix}1 & 0 & 0 & 0 & 1 & 1 & 1 & 1\\
1 & 1 & 0 & 0 & 0 & 1 & 1 & 1\\
1 & 1 & 1 & 0 & 0 & 0 & 1 & 1\\
1 & 1 & 1 & 1 & 0 & 0 & 0 & 1\\
1 & 1 & 1 & 1 & 1 & 0 & 0 & 0\\
0 & 1 & 1 & 1 & 1 & 1 & 0 & 0\\
0 & 0 & 1 & 1 & 1 & 1 & 1 & 0\\
0 & 0 & 0 & 1 & 1 & 1 & 1 & 1
\end{bmatrix}\cdot\begin{bmatrix}y_{0}\\
y_{1}\\
y_{2}\\
y_{3}\\
y_{4}\\
y_{5}\\
y_{6}\\
y_{7}
\end{bmatrix}+\begin{bmatrix}1\\
1\\
0\\
0\\
0\\
1\\
1\\
0
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Subsection*
SR
\end_layout

\begin_layout Standard
Spostamento a sinistra delle 4 righe rispettivamente di 0, 1, 2, 3 passi
 (la prima riga rimane immutata, la seconda è spostata di 1, ecc...); sia 
\begin_inset Formula $\boldsymbol{B}$
\end_inset

 la matrice proveniente dal livello SB, allora da questo livello otteniamo
 la seguente matrice 
\begin_inset Formula $\boldsymbol{C}$
\end_inset

:
\begin_inset Formula 
\[
C=\begin{bmatrix}c_{0,0} & c_{0,1} & c_{0,2} & c_{0,3}\\
c_{1,0} & c_{1,1} & c_{1,2} & c_{1,3}\\
c_{2,0} & c_{2,1} & c_{2,2} & c_{2,3}\\
c_{3,0} & c_{3,1} & c_{3,2} & c_{3,3}
\end{bmatrix}=\begin{bmatrix}b_{0,0} & b_{0,1} & b_{0,2} & b_{0,3}\\
b_{1,1} & b_{1,2} & b_{1,3} & b_{1,0}\\
b_{2,2} & b_{2,3} & b_{2,0} & b_{2,1}\\
b_{3,3} & b_{3,0} & b_{3,1} & b_{3,2}
\end{bmatrix}
\]

\end_inset


\end_layout

\begin_layout Subsection*
MC
\end_layout

\begin_layout Standard
Prendiamo la matrice 
\begin_inset Formula $\boldsymbol{C}$
\end_inset

 ottenuta dal livello precedente ed effettuiamo il suo prodotto per una
 matrice 
\begin_inset Formula $M$
\end_inset

 per ottenere 
\begin_inset Formula $\boldsymbol{D}=\boldsymbol{M}\cdot\boldsymbol{C}$
\end_inset

, nel modo seguente:
\begin_inset Formula 
\[
D=\begin{bmatrix}00000010 & 00000011 & 00000001 & 00000001\\
00000001 & 00000010 & 00000011 & 00000001\\
00000001 & 00000001 & 00000010 & 00000011\\
00000011 & 00000001 & 00000001 & 00000001
\end{bmatrix}\cdot\begin{bmatrix}c_{0,0} & c_{0,1} & c_{0,2} & c_{0,3}\\
c_{1,0} & c_{1,1} & c_{1,2} & c_{1,3}\\
c_{2,0} & c_{2,1} & c_{2,2} & c_{2,3}\\
c_{3,0} & c_{3,1} & c_{3,2} & c_{3,3}
\end{bmatrix}
\]

\end_inset

Per garantire la decifratura, sarà necessario che la matrice 
\begin_inset Formula $\boldsymbol{M}$
\end_inset

 sia invertibile; l'inversa 
\begin_inset Formula $\boldsymbol{M}^{-1}$
\end_inset

 avrà più 1 che 0, e per questo la decifratura in AES è più lenta (di poco)
 della cifratura.
\end_layout

\begin_layout Subsection*
ARK
\end_layout

\begin_layout Standard
La chiave di round viene sommata bit a bit col blocco ottenuto al livello
 precedente: 
\begin_inset Formula $\boldsymbol{E}=\boldsymbol{D}\oplus\boldsymbol{K}^{\left(i\right)}$
\end_inset

.
 Ad ogni round 
\begin_inset Formula $i$
\end_inset

-esimo ricaviamo una chiave di 16Byte a partire da quella iniziale; se abbiamo
 chiavi da 128bit l'algoritmo prevede 10 round e quindi saranno necessarie
 11 chiavi di round.
\end_layout

\begin_layout Standard
Esprimendo la chiave iniziale come matrice 
\begin_inset Formula $4\times4$
\end_inset

 chiamata 
\begin_inset Formula $\boldsymbol{K}$
\end_inset

, possiamo indicarla come la giustapposizione di 4 colonne di 4 elementi
 ciascuna; le 11 chiavi necessarie saranno costituite in totale da 44 colonne
 di 4Byte ciascuna.
 Allora le colonne 0, 1, 2, 3 appartengono alla chiave 
\begin_inset Formula $\boldsymbol{K}^{\left(0\right)}$
\end_inset

, le colonne 4, 5, 6, 7 costituiscono 
\begin_inset Formula $\boldsymbol{K}^{\left(1\right)}$
\end_inset

, e così via.
\end_layout

\begin_layout Standard
Le altre 40 colonne si ottengono dalle 4 iniziali nel modo seguente; sia
 
\begin_inset Formula $\vec{w}\left(i\right)$
\end_inset

 la 
\begin_inset Formula $i$
\end_inset

-esima colonna:
\begin_inset Formula 
\[
\begin{cases}
\vec{w}\left(i\right)=\vec{w}\left(i-4\right)\oplus\vec{w}\left(i-1\right) & \mod i4\neq0\\
\vec{w}\left(i\right)=\vec{w}\left(i-4\right)\oplus T\left[\vec{w}\left(i-1\right)\right] & \mod i4=0
\end{cases}
\]

\end_inset

La trasformazione 
\begin_inset Formula $T$
\end_inset

 è definita nel modo seguente; sia 
\begin_inset Formula $r\left(i\right)=00000010^{\left(i-4\right)/4}\in\mathcal{GF}\left(2^{8}\right)$
\end_inset

, e sia SB il livello Substitute Byte dell'algoritmo Rijndael:
\begin_inset Formula 
\[
T\left[\left(a,\,b,\,c,\,d\right)\right]=\begin{bmatrix}a\\
b\\
c\\
d
\end{bmatrix}\rightarrow\begin{bmatrix}b\\
c\\
d\\
a
\end{bmatrix}\rightarrow\text{SB}\rightarrow\begin{bmatrix}e\\
f\\
g\\
h
\end{bmatrix}\rightarrow\begin{bmatrix}e\oplus r\left(i\right)\\
f\\
g\\
h
\end{bmatrix}
\]

\end_inset

In questo modo si ottiene la chiave di round come:
\begin_inset Formula 
\[
\boldsymbol{K}^{\left(i\right)}=\left[\vec{w}\left(4i\right),\,\vec{w}\left(4i+1\right),\,\vec{w}\left(4i+2\right),\,\vec{w}\left(4i+3\right)\right]
\]

\end_inset


\end_layout

\begin_layout Subsection*
Decifratura
\end_layout

\begin_layout Standard
I quattro livelli di ciascun ciclo dell'algoritmo Rijndael sono invertibili:
\end_layout

\begin_layout Itemize
Inverted Substitute Byte (ISB): tabella di sostituzione inversa a quella
 del livello SB;
\end_layout

\begin_layout Itemize
Inverted Shift Row (ISR): scorrimento delle righe a destra invece che a
 sinistra;
\end_layout

\begin_layout Itemize
Inverted Mix Column (IMC): si usa l'inversa della matrice 
\begin_inset Formula $\boldsymbol{M}$
\end_inset

: 
\begin_inset Formula $\boldsymbol{C}=\boldsymbol{M}^{-1}\cdot\boldsymbol{D}$
\end_inset

;
\end_layout

\begin_layout Itemize
Add Round Key (ARK): questo livello, basato sulla somma bit a bit, è l'inverso
 di sé stesso.
\end_layout

\begin_layout Standard
Possiamo decifrare un blocco applicando all'inverso i 10 round:
\end_layout

\begin_layout Enumerate
il primo round usa 
\begin_inset Formula $\boldsymbol{K}^{\left(10\right)}$
\end_inset

 e i livelli 
\begin_inset Formula $\text{ARK}\rightarrow\text{ISR}\rightarrow\text{ISB}$
\end_inset

;
\end_layout

\begin_layout Enumerate
i nove round successivi usano le chiavi dalla 9 alla 1, con i livelli 
\begin_inset Formula $\text{ARK}\rightarrow\text{IMC}\rightarrow\text{ISR}\rightarrow\text{ISB}$
\end_inset

;
\end_layout

\begin_layout Enumerate
un ultimo round usa ARK con la chiave 
\begin_inset Formula $\boldsymbol{K}^{\left(0\right)}$
\end_inset

.
\end_layout

\begin_layout Section
Sicurezza dell'AES
\end_layout

\begin_layout Standard
Al contrario del DES, le cui S-Box avevano fatto sorgere il dubbio della
 presenza di trapdoor segrete, in AES la tabella di sostituzione è ottenuta
 tramite una procedura algebrica definita; inoltre, il livello Substitute
 Byte consente di ottenere un elevato livello di non linearità, con la trasposiz
ione dei vettori.
\end_layout

\begin_layout Standard
Ad oggi, gli unici attacchi che funzionano contro AES, sfruttano debolezze
 dell'implementazione, e non dell'algoritmo.
\end_layout

\begin_layout Chapter
Sequenze Pseudo-casuali
\end_layout

\begin_layout Section
Sequenze binarie pseudo-casuali (PRBS)
\end_layout

\begin_layout Standard
Se pensiamo che l'AES sia sicuro, dobbiamo limitare questa osservazione
 alla pratica: infatti, anche se non è possibile trovare la chiave di cifratura
 in un periodo di tempo accettabile, dal punto di vista teorico e con un
 tempo infinito a disposizione, è possibile eludere la sicurezza di AES.
\end_layout

\begin_layout Standard
Esiste tuttavia un cifrario inviolabile anche dal punto di vista teorico:
 prendiamo una sequenza di bit da cifrare 
\begin_inset Formula $p$
\end_inset

 e la sommiamo bit a bit con una sequenza casuale 
\begin_inset Formula $r$
\end_inset

, ottenendo la sequenza cifrata:
\begin_inset Formula 
\[
c=p\oplus r
\]

\end_inset

La sequenza 
\begin_inset Formula $r$
\end_inset

 deve essere veramente casuale (nessuna autocorrelazione del primo o secondo
 ordine) e impredicibile, ottenuta per esempio osservando un fenomeno aleatorio.
 Per decifrare un 
\begin_inset Formula $c$
\end_inset

 ottenuto in questo modo, è necessario sommare bit a bit a 
\begin_inset Formula $c$
\end_inset

 la stessa sequenza casuale 
\begin_inset Formula $r$
\end_inset

 usata nella cifratura.
\end_layout

\begin_layout Standard
Osserviamo che la sequenza casuale 
\begin_inset Formula $r$
\end_inset

 deve avere la stessa lunghezza dei dati da cifrare (
\begin_inset Formula $\left|r\right|=\left|p\right|$
\end_inset

, per consentire la somma bit a bit con 
\begin_inset Formula $p$
\end_inset

), ed essa deve essere trasportata in modo sicuro al destinatario; inoltre,
 la sequenza 
\begin_inset Formula $r$
\end_inset

 va usata una volta sola, per mantenere la sua impredicibilità.
\end_layout

\begin_layout Standard
Questo sistema di cifratura ha rilevanza se possiamo generare una sequenza
 
\begin_inset Formula $r$
\end_inset

 pseudo-casuale, ovvero a parità di inizializzazione, è possibile generare
 in modo indipendente la stessa sequenza 
\begin_inset Formula $r$
\end_inset

.
\end_layout

\begin_layout Subsection
Generatore lineare congruenziale
\end_layout

\begin_layout Standard
Ricaviamo l'elemento 
\begin_inset Formula $i$
\end_inset

-esimo della sequenza pseudo-casuale attraverso una trasformazione lineare
 applicata al precedente, modulo un composto:
\begin_inset Formula 
\[
x_{i}=\mod{\left(a\cdot x_{i-1}+b\right)}n
\]

\end_inset

La sequenza viene generata a partire dai tre parametri 
\begin_inset Formula $a$
\end_inset

, 
\begin_inset Formula $b$
\end_inset

, 
\begin_inset Formula $n$
\end_inset

 e il suo sviluppo è determinato dal seme iniziale, il primo elemento 
\begin_inset Formula $x_{0}$
\end_inset

.
\end_layout

\begin_layout Standard
Anche se il modulo aggiunge della complessità alla trasformazione lineare,
 in molti casi è possibile ottenere i tre parametri osservando abbastanza
 a lungo la sequenza 
\begin_inset Formula $r$
\end_inset

.
\end_layout

\begin_layout Subsection
Funzione unidirezionale
\end_layout

\begin_layout Standard
Un metodo algoritmicamente sicuro ma computazionalmente non efficiente,
 consiste nell'impiego di funzioni unidirezionali nella generazione della
 sequenza.
 Le funzioni non invertibili 
\begin_inset Formula $y=f\left(x\right)$
\end_inset

 permettono di tentare di trovare un 
\begin_inset Formula $\overline{y}$
\end_inset

 provando per tentativi degli 
\begin_inset Formula $\overline{x}$
\end_inset

 tali che 
\begin_inset Formula $\overline{y}=f\left(\overline{x}\right)$
\end_inset

, mentre le funzioni unidirezionali (invertibili o meno) non permettono
 di 
\begin_inset Quotes eld
\end_inset

tirare a indovinare
\begin_inset Quotes erd
\end_inset

 l'
\begin_inset Formula $\overline{x}$
\end_inset

 che genera un 
\begin_inset Formula $\overline{y}$
\end_inset

 (anche provando per tentativi non è possibile trovare 
\begin_inset Formula $\overline{x}$
\end_inset

).
\end_layout

\begin_layout Standard
Una sequenza pseudo-casuale del genere si inizializza con un seme 
\begin_inset Formula $x_{0}$
\end_inset

, mentre l'elemento 
\begin_inset Formula $i$
\end_inset

-esimo si ottiene come:
\begin_inset Formula 
\[
x_{i}=f\left(x_{0}+i\right)
\]

\end_inset

Se la funzione unidirezionale 
\begin_inset Formula $f\left(\right)$
\end_inset

 è la funzione di cifratura del DES con chiave 
\begin_inset Formula $K=x_{0}+i$
\end_inset

 (va applicata la funzione per generare ciascun bit 
\begin_inset Formula $i$
\end_inset

-esimo), abbiamo una buona funzione unidirezionale (genera una sequenza
 apparentemente casuale, per invertire la funzione sarebbe necessario trovare
 la chiave DES) che tuttavia risulta non pratica per l'elevato costo computazion
ale.
\end_layout

\begin_layout Subsection
Generatore ai residui quadratici (Blum, Blum e Shub)
\end_layout

\begin_layout Standard
Si prendano due primi 
\begin_inset Formula $p$
\end_inset

 e 
\begin_inset Formula $q$
\end_inset

 grandi, entrambi congruenti a 3 in modulo 4:
\begin_inset Formula 
\[
p\gg1,\,q\gg1\tc\cgm p34\land\cgm q34
\]

\end_inset

Definiamo il prodotto 
\begin_inset Formula $n=p\cdot q$
\end_inset

, e prendiamo un numero casuale che non abbia 
\begin_inset Formula $p$
\end_inset

 o 
\begin_inset Formula $q$
\end_inset

 tra i suoi fattori (
\begin_inset Formula $x\perp n$
\end_inset

).
\end_layout

\begin_layout Standard
La successione viene inizializzata a partire da un residuo quadratico 
\begin_inset Formula $\cgm{x_{0}}{x^{2}}n$
\end_inset

; l'
\begin_inset Formula $i$
\end_inset

-esimo elemento viene calcolato come:
\begin_inset Formula 
\[
\cgm{x_{i}}{x_{i-1}^{2}}n
\]

\end_inset

mentre il bit 
\begin_inset Formula $i$
\end_inset

-esimo della sequenza sarà il bit meno significativo dell'elemento 
\begin_inset Formula $x_{i}$
\end_inset

 (
\begin_inset Formula $b_{i}={\scriptstyle \text{LSB}}\left(x_{i}\right)$
\end_inset

):
\end_layout

\begin_layout Standard
Normalmente, la sequenza di bit 
\begin_inset Formula $\left\{ b_{i}\right\} $
\end_inset

 ha una statistica ben fatta (probabilità circa
\begin_inset Formula $\nicefrac{1}{2}$
\end_inset

 che esca 0 o 1), ha autocorrelazione nulla, ed assenza di memoria (
\begin_inset Formula $b_{i}$
\end_inset

 non dipende da 
\begin_inset Formula $b_{i-1}$
\end_inset

).
 La differenza con una sequenza casuale vera è che essa è periodica (dovrà
 essere garantito un periodo lungo); inoltre si tratta di un generatore
 lento (per il calcolo di un quadrato per ciascun bit).
\end_layout

\begin_layout Standard
Con una sequenza generata in questo modo, è possibile prevedere un bit successiv
o 
\begin_inset Formula $b_{i+k}$
\end_inset

 una volta noti un 
\begin_inset Formula $x_{i}$
\end_inset

 e 
\begin_inset Formula $n$
\end_inset

; tuttavia è impossibile ottenere un 
\begin_inset Formula $b_{i-h}$
\end_inset

, poiché sarebbe necessario calcolare la radice quadrata modulo 
\begin_inset Formula $n$
\end_inset

, e quindi sono necessari i fattori 
\begin_inset Formula $p$
\end_inset

 e 
\begin_inset Formula $q$
\end_inset

 (e con 
\begin_inset Formula $p$
\end_inset

 e 
\begin_inset Formula $q$
\end_inset

 scelti adeguatamente il problema della fattorizzazione risulta impraticabile).
\end_layout

\begin_layout Example

\emph on
Usare il generatore di Blum, Blum e Shub con 
\begin_inset Formula $p=43$
\end_inset

 e 
\begin_inset Formula $q=31$
\end_inset

, cercando di determinare il suo periodo.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Ricaviamo subito 
\begin_inset Formula $n=p\cdot q=1333$
\end_inset

; scegliamo inoltre 
\begin_inset Formula $x_{0}=50\perp1333$
\end_inset

.
 Applichiamo l'algoritmo:
\begin_inset Formula 
\[
\begin{array}{ccc}
i & x_{i} & b_{i}\\
0 & \cgm{50^{2}}{\boldsymbol{1167}}{1333} & 1\\
1 & \cgm{1167^{2}}{\boldsymbol{896}}{1333} & 0\\
2 & \cgm{896^{2}}{\boldsymbol{350}}{1333} & 0\\
3 & \cgm{350^{2}}{\boldsymbol{1197}}{1333} & 1\\
4 & \cgm{1197^{2}}{\boldsymbol{1167}}{1333} & 1
\end{array}
\]

\end_inset

Notiamo che il periodo vale 4 (il generatore continuerà a produrre 
\begin_inset Formula $1,\,0,\,0,\,1\ldots$
\end_inset

).
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Section
Periodo del generatore ai residui quadratici
\end_layout

\begin_layout Subsection
Calcolare il periodo
\end_layout

\begin_layout Standard
Gli studi di Blum, Blum e Shub hanno mostrato che il periodo 
\begin_inset Formula $\tau$
\end_inset

 della sequenza del loro generatore, è un divisore della funzione della
 funzione di Carmichael, del prodotto 
\begin_inset Formula $n=p\cdot q$
\end_inset

:
\begin_inset Formula 
\[
\tau\backslash\lambda\left(\lambda\left(n\right)\right),\,n=p\cdot q
\]

\end_inset

La funzione di Carmichael di un numero 
\begin_inset Formula $n$
\end_inset

 è, a sua volta, un divisore del toziente di 
\begin_inset Formula $n$
\end_inset

 (
\begin_inset Formula $\lambda\left(n\right)\backslash\varphi\left(n\right)$
\end_inset

); essa si calcola nel modo seguente; preso un intero composto positivo
 
\begin_inset Formula $n$
\end_inset

, esso può essere espresso come prodotto di fattori primi 
\begin_inset Formula $p_{i}$
\end_inset

, ciascuno con la propria potenza 
\begin_inset Formula $a_{i}$
\end_inset

:
\begin_inset Formula 
\[
n=p_{1}^{a_{1}}\cdot p_{2}^{a_{2}}\cdot\ldots\cdot p_{r}^{a_{r}}
\]

\end_inset

La funzione di Carmichael è pari al minimo comune multiplo degli ordini
 (tozienti) di ciascuno dei 
\begin_inset Formula $p_{i}^{a_{i}}$
\end_inset

, per 
\begin_inset Formula $i$
\end_inset

 da 1 a 
\begin_inset Formula $r$
\end_inset

 (elementi del gruppo moltiplicativo degli elementi invertibili di 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

):
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Funzione di Carmichael
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Carmichael, funzione di
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.2cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\lambda\left(n\right)=\mcm{\left\{ \varphi\left(p_{i}^{a_{i}}\right)\right\} }{i\in\left[1,\,r\right]}\label{eq:Funzione-di-Carmichael}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Prendiamo in mano le ipotesi del Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-piccolo-Fermat"
plural "false"
caps "false"
noprefix "false"

\end_inset

, il quale afferma che preso un intero 
\begin_inset Formula $a$
\end_inset

 e un primo 
\begin_inset Formula $p$
\end_inset

, vale 
\begin_inset Formula $\cgm{a^{p-1}}1p$
\end_inset

; se 
\begin_inset Formula $p$
\end_inset

 non fosse primo, il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-Eulero"
plural "false"
caps "false"
noprefix "false"

\end_inset

 ci dice che 
\begin_inset Formula $\cgm{a^{\varphi\left(p\right)}}1p$
\end_inset

.
 Nel primo caso, ci chiediamo infine se esista un intero 
\begin_inset Formula $q<p-1$
\end_inset

 per cui il residuo modulo 
\begin_inset Formula $p$
\end_inset

 di 
\begin_inset Formula $a$
\end_inset

 vale sempre 1 (
\begin_inset Formula $\cgm{a^{q}}1p$
\end_inset

); in generale questo dipende da 
\begin_inset Formula $a$
\end_inset

, e chiamiamo questo intero 
\begin_inset Formula $\ord a=q$
\end_inset

.
\end_layout

\begin_layout Standard
Nel secondo caso, ci chiediamo se esista un divisore di 
\begin_inset Formula $\varphi\left(p\right)$
\end_inset

 per cui il residuo modulo 
\begin_inset Formula $p$
\end_inset

 di 
\begin_inset Formula $a$
\end_inset

 sia sempre 1; questo accade per 
\begin_inset Formula $\lambda\left(p\right)$
\end_inset

, che possiamo considerare come l'analogo dell'ordine di 
\begin_inset Formula $a$
\end_inset

.
\end_layout

\begin_layout Standard
Facciamo un paragone tra ordine e funzione di Carmichael:
\end_layout

\begin_layout Itemize
\begin_inset Formula $\ord a\in\mathbb{Z}_{p}$
\end_inset

 è il minimo intero 
\begin_inset Formula $n$
\end_inset

 tale che 
\begin_inset Formula $\cgm{a^{n}}1p$
\end_inset

; l'ordine di 
\begin_inset Formula $a$
\end_inset

 è massimo 
\begin_inset Formula $p-1$
\end_inset

 o comunque un suo divisore.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\lambda\left(n\right)\in\mathbb{Z}_{p}$
\end_inset

 è il minimo intero 
\begin_inset Formula $N$
\end_inset

 tale che 
\begin_inset Formula $\cgm{a^{N}}1p$
\end_inset

; 
\begin_inset Formula $\lambda\left(n\right)$
\end_inset

 è al massimo 
\begin_inset Formula $\varphi\left(n\right)$
\end_inset

 o comunque un suo divisore.
\end_layout

\begin_layout Example
Calcolare il periodo del generatore BBS (Blum, Blum e Shub), con 
\begin_inset Formula $p=23,\,q=19,\,x_{0}=7$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Sia 
\begin_inset Formula $p$
\end_inset

 che 
\begin_inset Formula $q$
\end_inset

 sono congruenti a 3 modulo 4, inoltre 
\begin_inset Formula $x_{0}$
\end_inset

 essendo primo è sicuramente primo relativo rispetto a 
\begin_inset Formula $p\cdot q=n=437$
\end_inset

.
 Calcoliamo la successione (si ricorda che tutti i conti per la colonna
 
\begin_inset Formula $x_{i}$
\end_inset

 sono quadrati in modulo 
\begin_inset Formula $n$
\end_inset

, mentre la colonna 
\begin_inset Formula $b_{i}$
\end_inset

 contiene l'LSB corrispondente):
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{array}{ccc}
i & x_{i} & b_{i}\\
0 & 49 & 1\\
1 & 216 & 0\\
2 & 334 & 0\\
3 & 121 & 1\\
4 & 220 & 0\\
5 & 330 & 0
\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{array}{ccc}
i & x_{i} & b_{i}\\
6 & 87 & 1\\
7 & 140 & 0\\
8 & 372 & 0\\
9 & 292 & 0\\
10 & \boxed{49} & 1\\
\\
\end{array}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dalla successione costruita osserviamo che il periodo vale 10.
 Sappiamo che il periodo sarà un divisore di 
\begin_inset Formula $\lambda\left(\lambda\left(n\right)\right)$
\end_inset

; calcoliamo 
\begin_inset Formula $\lambda\left(n\right)$
\end_inset

:
\begin_inset Formula 
\begin{align*}
\lambda\left(n\right) & =\lambda\left(437\right)=\lambda\left(23\cdot19\right)=\mcm{\varphi\left(23\right)}{\varphi\left(19\right)}\\
 & =\mcm{22}{18}=\mcm{2\cdot11}{2\cdot3^{2}}=11\cdot2\cdot9\\
 & =198
\end{align*}

\end_inset

Ora possiamo calcolare 
\begin_inset Formula $\lambda\left(\lambda\left(n\right)\right)$
\end_inset

:
\begin_inset Formula 
\begin{align*}
\lambda\left(198\right) & =\lambda\left(2\cdot3^{2}\cdot11\right)=\mcm{\varphi\left(2\right)}{\varphi\left(9\right),\,\varphi\left(11\right)}\\
 & =\mcm 1{2\cdot3,\,2\cdot5}=2\cdot3\cdot5=30
\end{align*}

\end_inset

Concludiamo che il periodo 
\begin_inset Formula $\tau$
\end_inset

 sarà uno tra i possibili divisori di 30, a seconda dal 
\begin_inset Formula $x_{0}$
\end_inset

 selezionato: 
\begin_inset Formula $\tau\in\left\{ 1,\,2,\,3,\,5,\,6,\,10,\,15,\,30\right\} $
\end_inset

; presi 
\begin_inset Formula $p=23,\,q=19$
\end_inset

 il periodo è un divisore di 30; con 
\begin_inset Formula $x_{0}=7$
\end_inset

 si ha esattamente 
\begin_inset Formula $\pi=10$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Massimizzare il periodo
\end_layout

\begin_layout Standard
Per avere un periodo lungo di una sequenza BBS, è necessario scegliere un
 
\begin_inset Formula $x_{0}$
\end_inset

 tale che 
\begin_inset Formula $\pi=\lambda\left(\lambda\left(n\right)\right)\gg1$
\end_inset

; perché ciò si verifichi, scegliamo 
\begin_inset Formula $p$
\end_inset

 e 
\begin_inset Formula $q$
\end_inset

 nel modo seguente:
\end_layout

\begin_layout Itemize
prendiamo un primo 
\begin_inset Formula $p_{2}$
\end_inset

, tale che anche un 
\begin_inset Formula $p_{1}=2p_{2}+1$
\end_inset

 sia primo; scegliamo il primo 
\begin_inset Formula $p=2\cdot p_{1}+1$
\end_inset


\end_layout

\begin_layout Itemize
prendiamo un primo 
\begin_inset Formula $q_{2}$
\end_inset

, tale che anche un 
\begin_inset Formula $q_{1}=2q_{2}+1$
\end_inset

 sia primo; scegliamo il primo 
\begin_inset Formula $q=2\cdot q_{1}+1$
\end_inset


\end_layout

\begin_layout Itemize
deve valere 
\begin_inset Formula $p\neq q$
\end_inset

, e 
\begin_inset Formula $p,\,q\gg1$
\end_inset


\end_layout

\begin_layout Standard
Scegliendo i due primi col criterio appena mostrato, si otterrà in periodo
 più lungo possibile.
\end_layout

\begin_layout Chapter*
Esercizi
\end_layout

\begin_layout Section*
Equazioni congruenziali
\end_layout

\begin_layout Exercise
Risolvere la seguente equazione congruenziale:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\blacktriangleright$
\end_inset

 
\emph on
Esercizio: equazione congruenziale, modulo composto
\end_layout

\end_inset


\begin_inset Formula 
\[
\cgm{28x}{16}{412}
\]

\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "90text%"
height "0.1pt"

\end_inset


\end_layout

\begin_layout Solution
Procediamo calcolando 
\begin_inset Formula $\mcd{28}{412}=4$
\end_inset

; allora possiamo dividere per 4 tutti i termini dell'equazione, ottenendo
\begin_inset Formula 
\[
\cgm{7x}4{103}
\]

\end_inset

L'equazione originale avrà 4 soluzioni, e la prima si ricava dall'equazione
 ridotta appena trovata:
\begin_inset Formula 
\[
\cgm{x_{0}}{4\cdot7^{-1}}{103}
\]

\end_inset

Per calcolare l'inverso di 7 modulo 103 possiamo usare il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-piccolo-Fermat"
plural "false"
caps "false"
noprefix "false"

\end_inset

 oppure l'algoritmo 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide-esteso"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Solution

\noun on
Teorema piccolo di Fermat
\noun default

\begin_inset Newline newline
\end_inset

Il teorema afferma che, in questo caso, vale
\begin_inset Formula 
\[
\cgm{7^{-1}}{7^{101}}{103}
\]

\end_inset

dato che 103 è primo; adesso effettuiamo l'operazione di 
\begin_inset Formula $\mod{7^{101}}{103=59}$
\end_inset

 (possiamo usare l'algoritmo descritto ne 
\begin_inset CommandInset ref
LatexCommand formatted
reference "sec:Square-&-multiply"
plural "false"
caps "false"
noprefix "false"

\end_inset

), da cui segue che
\begin_inset Formula 
\[
\cgm{7^{-1}}{59}{103}
\]

\end_inset


\end_layout

\begin_layout Solution

\noun on
Algoritmo di Euclide Esteso
\noun default

\begin_inset Newline newline
\end_inset

Usiamo l'algoritmo per ottenere che 
\begin_inset Formula $7\perp103$
\end_inset

 e in tal caso anche 
\begin_inset Formula $7^{-1}$
\end_inset

; cominciamo a costruire la sequenza 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\begin{array}{cc}
103=14\cdot7+5 & q_{1}=14\\
7=1\cdot5+2 & q_{2}=1\\
5=2\cdot2+\boxed{1} & q_{3}=2\\
2=2\cdot1+0 & q_{4}=1
\end{array}
\]

\end_inset

Otteniamo che 
\begin_inset Formula $\mcd 7{103}=1$
\end_inset

, e per quanto riguarda l'inverso costruiamo la sequenza 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Algoritmo-Euclide-esteso"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\begin{array}{c}
x_{0}=0\\
x_{1}=1\\
x_{2}=-q_{1}x_{1}+x_{0}=-14\\
x_{3}=-q_{2}x_{2}+x_{1}=15\\
x_{4}=-q_{3}x_{3}+x_{2}=\boxed{-44}
\end{array}
\]

\end_inset

Segue che 
\begin_inset Formula $\mod{-44}{103}=59=7^{-1}$
\end_inset

.
\end_layout

\begin_layout Solution
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Solution
Ora che abbiamo l'inverso di 7 in modulo 103, siamo in grado di scrivere
 la soluzione dell'equazione ridotta:
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{x_{0}}{4\cdot59}{103}\\
\cgm{x_{0}}{30}{103}
\end{array}
\]

\end_inset

Le soluzioni successive saranno altre tre, a 103 di distanza da 
\begin_inset Formula $x_{0}$
\end_inset

, esse inoltre saranno in modulo 412:
\begin_inset Formula 
\[
X=\left\{ 30,\,133,\,236,\,339\right\} \mod{}{412}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Trovare
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\blacktriangleright$
\end_inset

 
\emph on
Esercizio: sistema di 2 congruenze
\end_layout

\end_inset

 la congruenza equivalente al seguente sistema di congruenze:
\begin_inset Formula 
\[
\begin{cases}
\cgm x5{11}\\
\cgm x2{20}
\end{cases}
\]

\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "90text%"
height "0.1pt"

\end_inset


\end_layout

\begin_layout Solution
Esisterà una sola congruenza equivalente, per il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

, infatti vale 
\begin_inset Formula $11\perp20$
\end_inset

; per riassumere le due congruenze in una sola, cerchiamo un valore 
\begin_inset Formula $x$
\end_inset

 della successione 
\begin_inset Formula $5+k\cdot11$
\end_inset

 che sia anche congruente a 2 in modulo 20:
\begin_inset Formula 
\[
x=\cgm{5+k\cdot11}2{20}
\]

\end_inset

Questo sarà vero per un valore di 
\begin_inset Formula $k$
\end_inset

 pari a
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{k\cdot11}{2-5}{20}\\
\cgm k{-3\cdot11^{-1}}{20}
\end{array}
\]

\end_inset

Troviamo l'inverso di 11 in modulo 20 usando il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-Eulero"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\cgm{11^{-1}}{11^{\varphi\left(20\right)-1}}{20}
\]

\end_inset

sapendo che la funzione toziente di 20 vale 
\begin_inset Formula $\varphi\left(20\right)=\left(2^{2}-2^{1}\right)\left(5^{1}-5^{0}\right)=2\cdot4=8$
\end_inset

, e che 
\begin_inset Formula $\mod{11^{8-1}}{20}=11$
\end_inset

, abbiamo la seguente congruenza per 
\begin_inset Formula $k$
\end_inset

:
\begin_inset Formula 
\[
\begin{array}{c}
\cgm k{-33}{20}\\
\cgm k7{20}
\end{array}
\]

\end_inset

Ritornando alla congruenza per 
\begin_inset Formula $x$
\end_inset

, si ottiene dalla precedente (con 
\begin_inset Formula $k=7$
\end_inset

):
\begin_inset Formula 
\[
\begin{array}{c}
x=\cgm{5+77}2{20\cdot11}\\
\cgm x{82}{220}
\end{array}
\]

\end_inset

dove abbiamo usato il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

 per comporre la congruenza in modulo 220.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Trovare
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\blacktriangleright$
\end_inset

 
\emph on
Esercizio: sistema di 3 congruenze
\end_layout

\end_inset

 il valore della variabile 
\begin_inset Formula $x$
\end_inset

, che compare nel sistema di congruenze:
\begin_inset Formula 
\[
\begin{cases}
\cgm x1{10}\\
\cgm x2{11}\\
\cgm x03
\end{cases}
\]

\end_inset


\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "90text%"
height "0.1pt"

\end_inset


\end_layout

\begin_layout Solution
Mettiamo assieme la prima congruenza con la seconda, ottenendo:
\begin_inset Formula 
\[
x=\cgm{1+k\cdot10}2{11}
\]

\end_inset

Risolviamo la precedente rispetto a 
\begin_inset Formula $k$
\end_inset

:
\begin_inset Formula 
\[
\cgm{k\cdot10}1{11}
\]

\end_inset

Notando che 
\begin_inset Formula $100=9\cdot11+1\implies\mod{100}{11}=1$
\end_inset

 possiamo affermare subito che 
\begin_inset Formula $k=10$
\end_inset

; per il Teorema 
\begin_inset CommandInset ref
LatexCommand ref
reference "thm:Teorema-cinese-del-resto"
plural "false"
caps "false"
noprefix "false"

\end_inset

 scriviamo:
\begin_inset Formula 
\[
\cgm x{101}{110}
\]

\end_inset

Unendo quanto ottenuto con la terza congruenza del sistema, si ha:
\begin_inset Formula 
\[
x=\cgm{101+k\cdot110}03
\]

\end_inset

Effettuando l'operazione di modulo 3 sui termini dell'equazione, avremo:
\begin_inset Formula 
\[
x=\cgm{2+h\cdot2}03
\]

\end_inset

Risolviamo la precedente rispetto ad 
\begin_inset Formula $h$
\end_inset

:
\begin_inset Formula 
\[
\begin{array}{c}
\cgm{2\cdot h}{-2}3\\
\cgm h{1\cdot2^{-1}}3
\end{array}
\]

\end_inset

Osserviamo che l'inverso di 2 in 
\begin_inset Formula $\mathbb{Z}_{3}$
\end_inset

 è proprio 2, infatti 
\begin_inset Formula $2\cdot2=\mod 43=1$
\end_inset

; allora 
\begin_inset Formula $h$
\end_inset

 è congruente a 2 in modulo 3, e sostituendo nella congruenza di 
\begin_inset Formula $x$
\end_inset

 otteniamo:
\begin_inset Formula 
\[
\begin{array}{c}
\cgm x{101+220}{110\cdot3}\\
\cgm x{321}{330}
\end{array}
\]

\end_inset

Abbiamo trovato che 
\begin_inset Formula $x$
\end_inset

 deve valere 
\begin_inset Formula $321+k\cdot330$
\end_inset

 per generare le tre congruenze esaminate.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Section*
Elementi primitivi
\end_layout

\begin_layout Exercise
Quanti elementi primitivi ha l'insieme 
\begin_inset Formula $\mathbb{Z}_{31}^{*}$
\end_inset

, e quali sono?
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\blacktriangleright$
\end_inset

 
\emph on
Esercizio: elementi primitivi di un insieme dei residui
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "90text%"
height "0.1pt"

\end_inset


\end_layout

\begin_layout Solution
Gli elementi primitivi sono in numero 
\begin_inset Formula $\varphi\left(31-1\right)=\varphi\left(30\right)=\left(2^{1}-2^{0}\right)\left(3^{1}-3^{0}\right)\left(5^{1}-5^{0}\right)=1\cdot2\cdot4=8$
\end_inset

 (applichiamo una delle formule 
\begin_inset CommandInset ref
LatexCommand vpageref
reference "eqn:Toziente"
plural "false"
caps "false"
noprefix "false"

\end_inset

 per calcolare il toziente 
\begin_inset Formula $\varphi\left(\circ\right)$
\end_inset

).
\end_layout

\begin_layout Solution
Per capire quali siano gli elementi primitivi, usiamo il test 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-primitività"
plural "false"
caps "false"
noprefix "false"

\end_inset

 con i quozienti 
\begin_inset Formula $q_{i}=\left\{ 2,\,3,\,5\right\} $
\end_inset

, per ciascun elemento di 
\begin_inset Formula $\mathbb{Z}_{31}^{*}$
\end_inset

 (da 1 a 30); facendo le prove col test rispetto ai tre quozienti, si ottengono
 i seguenti elementi primitivi:
\begin_inset Formula 
\[
\alpha=\left\{ 3,\,11,\,12,\,13,\,\ldots\right\} 
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
Trovare gli elementi primitivi dell'insieme 
\begin_inset Formula $\mathbb{Z}_{13}^{*}$
\end_inset


\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset Formula $\blacktriangleright$
\end_inset

 
\emph on
Esercizio: elementi primitivi di un insieme dei residui
\end_layout

\end_inset


\end_layout

\begin_layout Exercise
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "90text%"
height "0.1pt"

\end_inset


\end_layout

\begin_layout Solution
Usiamo un secondo metodo, a partire da un elemento sicuramente primitivo
 
\begin_inset Formula $\alpha\in\mathbb{Z}_{13}^{*}$
\end_inset

; proviamo con 2, sottoponendolo al test 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Test-primitività"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\[
\cgm{2^{6}}{-1}{13},\quad\cgm{2^{4}}3{13}
\]

\end_inset

Allora 
\begin_inset Formula $\alpha=2$
\end_inset

 è un elemento primitivo rispetto a 
\begin_inset Formula $p=13$
\end_inset

; possiamo elevare 
\begin_inset Formula $\alpha$
\end_inset

 a tutte le potenze, per ottenere tutti gli elementi dell'insieme.
 Tuttavia solo le potenze positive pari restituiranno un altro elemento
 primitivo rispetto a 
\begin_inset Formula $p$
\end_inset

 che è un quadrato:
\begin_inset Formula 
\[
\begin{array}{lll}
\cgm{\alpha^{1}}2{13} & \cgm{\alpha^{5}}6{13} & \cgm{\alpha^{9}}5{13}\\
\cgm{\alpha^{2}}{\boxed{4}}{13} & \cgm{\alpha^{6}}{\boxed{12}}{13} & \cgm{\alpha^{10}}{\boxed{10}}{13}\\
\cgm{\alpha^{3}}8{13} & \cgm{\alpha^{7}}{11}{13} & \cgm{\alpha^{11}}7{13}\\
\cgm{\alpha^{4}}{\boxed{3}}{13} & \cgm{\alpha^{8}}{\boxed{9}}{13} & \cgm{\alpha^{12}}{\boxed{1}}{13}
\end{array}
\]

\end_inset

Le radici primitive in 
\begin_inset Formula $\mathbb{Z}_{13}^{*}$
\end_inset

 sono:
\begin_inset Formula 
\[
a_{q}=\left\{ 1,\,3,\,4,\,9,\,10,\,12\right\} 
\]

\end_inset

Si noti che ci troviamo nel caso 
\begin_inset Formula $\cgm p14$
\end_inset

, per cui se non esiste 
\begin_inset Formula $\sqrt{a}$
\end_inset

 nemmeno 
\begin_inset Formula $\sqrt{-a}$
\end_inset

 è definita rispetto a 
\begin_inset Formula $p$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Part
Protocolli e sistemi per la comunicazione sicura
\end_layout

\begin_layout Chapter
\start_of_appendix
Introduzione alla crittografia
\end_layout

\begin_layout Subsection*
Cenni storici
\end_layout

\begin_layout Standard
Il termine crittografia deriva dal greco 
\begin_inset Formula $\kappa\rho\nu\pi\tau\acute{o}\zeta$
\end_inset

 (krypt
\begin_inset Formula $\acute{\text{o}}$
\end_inset

s - segreto) e 
\begin_inset Formula $\gamma\rho\alpha\varphi\acute{\eta}$
\end_inset

 (grafi - scrittura); tra gli esempi di crittografia dal passato il più
 famoso è il cifrario di Cesare: si tratta di un cifrario a scorrimento
 ciclico, che consisteva nello scrivere le lettere dell'alfabeto su due
 anelli per poi ruotarne uno rispetto all'altro di 
\begin_inset Formula $k=+3$
\end_inset

 posizioni; in questo modo si ottiene 
\begin_inset Formula $A\rightarrow D,\,B\rightarrow E,\,\ldots Z\rightarrow C$
\end_inset

.
\end_layout

\begin_layout Standard
Non si trattava di un cifrario robusto, ma veniva usato quando gli avversari
 dell'Impero Romano erano i Galli: si rivelò un metodo più che sufficiente.
\end_layout

\begin_layout Subsection*
Comunicazione sicura
\end_layout

\begin_layout Standard
In generale una comunicazione sicura tra due parti si svolge nel modo seguente:
 sia 
\begin_inset Formula $A$
\end_inset

 il mittente del messaggio, 
\begin_inset Formula $B$
\end_inset

 il destinatario, ed 
\begin_inset Formula $E$
\end_inset

 un intruso che abbia accesso al canale di comunicazione.
 L'intruso può essere 
\emph on
passivo
\emph default
 (intercetta i messaggi senza modificarne il flusso) oppure 
\emph on
attivo
\emph default
 (modifica il contenuto dei messaggi).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename Illustrazioni/A_1 Scenario fondamentale di comunicazione.pdf
	display false
	scale 130

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Scenario fondamentale di comunicazione
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "fig:Scenario-fondamentale- comunicazione"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{A}$
\end_inset

 invia un 
\emph on
plaintext
\emph default
 
\begin_inset Formula $m$
\end_inset

 (testo in chiaro), lo codifica usando una funzione di cifratura (un algoritmo
 crittografico) che prende in ingresso anche la sua chiave 
\begin_inset Formula $k_{{\scriptscriptstyle \text{A}}}$
\end_inset

 e ottiene un 
\emph on
ciphertext 
\begin_inset Formula $c$
\end_inset


\emph default
 (messaggio cifrato); il messaggio 
\begin_inset Formula $c$
\end_inset

 giunge a 
\begin_inset Formula $\boldsymbol{B}$
\end_inset

, il quale usa una funzione di de-cifratura 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
----
\end_layout

\end_inset

 tramite la sua chiave 
\begin_inset Formula $k_{{\scriptscriptstyle \text{B}}}$
\end_inset

, che è associata in qualche modo alla chiave 
\begin_inset Formula $k_{{\scriptscriptstyle \text{A}}}$
\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
----
\end_layout

\end_inset

 per ottenere nuovamente il 
\emph on
plaintext
\emph default
 
\begin_inset Formula $m$
\end_inset

 inviato da 
\series bold

\begin_inset Formula $\boldsymbol{A}$
\end_inset


\series default
.
\end_layout

\begin_layout Standard
\begin_inset Formula $\boldsymbol{E}$
\end_inset

 potrebbe avere le seguenti intenzioni malevole rispetto alla comunicazione
 tra 
\begin_inset Formula $\boldsymbol{A}$
\end_inset

 e 
\begin_inset Formula $\boldsymbol{B}$
\end_inset

:
\end_layout

\begin_layout Itemize
leggere il messaggio e comprenderne il contenuto;
\end_layout

\begin_layout Itemize
ottenere la chiave;
\end_layout

\begin_layout Itemize
corrompere il contenuto del messaggio;
\end_layout

\begin_layout Itemize
impersonare 
\begin_inset Formula $A$
\end_inset

 senza che 
\begin_inset Formula $B$
\end_inset

 se ne accorga.
\end_layout

\begin_layout Standard
L'intruso può mettere in atto i seguenti tipi di attacchi sull'algoritmo
 di cifratura usato nella comunicazione:
\end_layout

\begin_layout Itemize

\noun on
ciphertext-only
\noun default
: avendo a disposizione il testo cifrato, si cerca di ricavarne delle informazio
ni (attacco più comune);
\end_layout

\begin_layout Itemize

\noun on
known plaintext
\noun default
: avendo a disposizione una coppia di testo cifrato e testo in chiaro corrispond
ente, si confrontano i due cercando di ottenere informazioni sulla chiave;
\end_layout

\begin_layout Itemize

\noun on
chosen plaintext
\noun default
: avendo a disposizione la stessa implementazione dell'algoritmo utilizzato
 per cifrare il messaggio, si scelgono dei testi in chiaro da cifrare e
 si osservano i testi cifrati in uscita, per cercare di ricavare informazioni
 sull'implementazione;
\end_layout

\begin_layout Itemize

\noun on
chosen ciphertext
\noun default
: avendo a disposizione la stessa implementazione dell'algoritmo utilizzato
 per decifrare il messaggio, si scelgono dei testi cifrati da decifrare
 e si osservano i testi in chiaro in uscita, per cercare di ricavare informazion
i sull'implementazione.
\end_layout

\begin_layout Subsection*
Sicurezza e segretezza
\end_layout

\begin_layout Standard
Giulio Cesare basava la sicurezza del proprio algoritmo di cifratura sul
 fatto che i possibili avversari non ne conoscessero il funzionamento; il
 crittografo olandese Auguste Kerckhoffs, enunciò ne 
\emph on
`La cryptographie militaire'
\emph default
 (1883) il principio di Kerchoffs:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Principio di Kerchoffs
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Kerchoffs, principio di
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "thm:Principio-di-Kerchoffs"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.7cm]
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Box Frameless
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "80text%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
\noindent
\align center

\emph on
La sicurezza di un sistema di cifratura è basata sulla segretezza della
 chiave (assumere sempre che il nemico conosca l'algoritmo di cifratura)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Da questa considerazione segue che la chiave utilizzata deve essere lunga,
 complessa, e in generale essere costruita per evitare che sia possibile
 indovinarla.
\end_layout

\begin_layout Standard
Claude Elwood Shannon, che scrisse cinque articoli che cambiarono la storia
 della comunicazione dell'informazione, tra cui un articolo sulla crittografia
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\emph on
\begin_inset Quotes eld
\end_inset

Communication Theory of Secrecy Systems
\begin_inset Quotes erd
\end_inset

 
\emph default
(1949), Bell System Technical Journal
\end_layout

\end_inset

, espresse lo stesso principio in maniera molto incisiva con le parole 
\begin_inset Quotes eld
\end_inset

Il nemico conosce il sistema
\begin_inset Quotes erd
\end_inset

 (frase nota come massima di Shannon).
\end_layout

\begin_layout Standard
È interessante notare come si è passati dal fondare la sicurezza del sistema
 sulla segretezza dell'algoritmo alla segretezza della chiave; il passo
 successivo fu il sistema a 
\emph on
chiave pubblica
\emph default
: gli algoritmi usati sono noti e accessibili a tutti, e una chiave del
 mittente (quella pubblica) è resa nota a tutti; tramite la chiave pubblica
 è possibile cifrare i messaggi, tuttavia la chiave per decifrare, associata
 alla chiave pubblica, è mantenuta riservata (si parla di
\emph on
 chiave privata
\emph default
).
\end_layout

\begin_layout Standard
Fondamentale è il fatto che, non ostante esista una regola (formula o algoritmo)
 che permetta di associare la chiave pubblica a quella privata, per un intruso
 qualunque è impossibile, dal punto di vista computazionale, risalire alla
 chiave privata attraverso quella pubblica.
 Solo il mittente che possiede la chiave privata è in grado di computare
 questa associazione, poiché egli deve aver ricavato la chiave pubblica
 a partire da quella privata (l'operazione inversa risulta molto più difficile).
\end_layout

\begin_layout Subsection*
Algoritmi noti
\end_layout

\begin_layout Standard
Gli algoritmi a chiave simmetrica hanno una coppia di chiavi, per cifratura
 e de-cifratura, che sono entrambe segrete: DES, AES; si pone il problema
 di scambiare col destinatario la chiave di de-cifratura, utilizzando un
 canale sicuro.
\end_layout

\begin_layout Standard
Con i sistemi di cifratura a chiave pubblica questo problema non si pone,
 tuttavia si pone il nuovo problema dell'autenticità delle chiavi pubbliche
 in circolazione; è stato introdotto il meccanismo dei certificati, da associare
 alle chiavi pubbliche, per garantire la loro provenienza e affidabilità.
\end_layout

\begin_layout Subsection*
Numeri interi grandi
\end_layout

\begin_layout Standard
Lavoreremo prevalentemente con numeri interi (positivi e negativi) di elevato
 ordine di grandezza; ecco un esempio per effettuare un calcolo approssimato.
\end_layout

\begin_layout Example

\emph on
\begin_inset CommandInset label
LatexCommand label
name "ex:grandi-interi-approssimati"

\end_inset

Calcolare in modo approssimato il valore di 
\begin_inset Formula $2^{35}$
\end_inset

.
\end_layout

\begin_layout Example

\emph on
\begin_inset Formula $\checked$
\end_inset


\emph default
Sfruttando le proprietà delle potenze e la costante informatica 
\begin_inset Formula $2^{10}\sim1000=10^{3}$
\end_inset

, possiamo ragionare nel modo seguente:
\begin_inset Formula 
\[
2^{35}=2^{30}\cdot2^{5}=\left(2^{10}\right)^{3}\cdot32\simeq\left(10^{3}\right)^{3}\cdot32=\boxed{32\times10^{9}}
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Trattare interi grandi è importante nell'ambito degli algoritmi di cifratura:
 prendendo l'algoritmo a chiave simmetrica DES come esempio, è ragionevole
 pensare che una chiave di 56 bit non sia sufficientemente sicura; usando
 le considerazioni fatte nell'Esempio 
\begin_inset CommandInset ref
LatexCommand ref
reference "ex:grandi-interi-approssimati"
plural "false"
caps "false"
noprefix "false"

\end_inset

 otteniamo che 
\begin_inset Formula $2^{56}\simeq10^{16}$
\end_inset

, ed essendo in possesso di una macchina in grado di ottenere una chiave
 in 1
\begin_inset Formula $ns$
\end_inset

, allora sarebbero necessari 27 mesi per ottenere questa chiave; ovviamente
 si può ridurre questo tempo aumentando il numero di macchine impiegate.
\end_layout

\begin_layout Standard
Al giorno d'oggi sono considerate sicure chiavi a 265 bit (
\begin_inset Formula $\sim10^{77}$
\end_inset

): per analizzare in modo esaustivo un simile spazio delle chiavi sarebbero
 necessari 
\begin_inset Formula $10^{60}$
\end_inset

 anni, nelle condizioni descritte in precedenza!
\end_layout

\begin_layout Chapter
Campi di Galois
\end_layout

\begin_layout Section
Costruzione con polinomi
\end_layout

\begin_layout Standard
Per comprendere la struttura e le proprietà dei campi di Galois, analizziamo
 il seguente esempio: sia dato l'insieme 
\begin_inset Formula $\mathcal{GF}\left(4\right)=\left\{ 0,\,1,\,\omega,\,\omega^{2}\right\} ,$
\end_inset

che chiamiamo 
\begin_inset Quotes eld
\end_inset

campo di Galois 4
\begin_inset Quotes erd
\end_inset

; su questo insieme siano definite le seguenti proprietà, posto 
\begin_inset Formula $\forall x\in\mathcal{GF}\left(4\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Ogni elemento del campo ha un inverso additivo: 
\begin_inset Formula $x+0=x$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $x+x=0$
\end_inset

;
\end_layout

\begin_layout Enumerate
Ogni elemento del campo ha un inverso moltiplicativo: 
\begin_inset Formula $1\cdot x=x$
\end_inset

;
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\omega+1=\omega^{2}$
\end_inset

;
\end_layout

\begin_layout Enumerate
somma e prodotto godono delle proprietà commutativa, associativa e distributiva.
\end_layout

\begin_layout Standard
Usando queste proprietà possiamo calcolare 
\begin_inset Formula $\omega^{2}+1\overset{{\scriptscriptstyle 4}}{\rightarrow}\omega+1+1\overset{{\scriptscriptstyle 2}}{\rightarrow}\omega$
\end_inset

.
 Notiamo dalle proprietà enunciate, che con 0 indichiamo l'elemento neutro
 rispetto alla somma e con 1 l'elemento neutro rispetto al prodotto; rispetto
 alla somma inoltre, ogni elemento è l'inverso di sé stesso.
 L'inverso moltiplicativo invece, non è definito per 0, e vale 1 per l'elemento
 1; negli altri casi, (
\begin_inset Formula $\omega$
\end_inset

 e 
\begin_inset Formula $\omega^{2}$
\end_inset

) si ha che l'inverso è 
\begin_inset Formula $\omega^{2}$
\end_inset

; infatti si ricava che 
\begin_inset Formula 
\[
\omega\cdot\omega^{2}=\omega\cdot\left(\omega+1\right)=\omega+\omega^{2}=\omega+\omega+1=1\implies\omega\cdot\omega^{2}=1\implies\boxed{\omega^{-1}=\omega^{2}}
\]

\end_inset

Vale alche l'opposto, ovvero l'inverso di 
\begin_inset Formula $\omega^{2}$
\end_inset

 è 
\begin_inset Formula $\omega$
\end_inset

.
\end_layout

\begin_layout Standard
Possiamo enunciare la definizione di 
\emph on
campo
\emph default
:
\end_layout

\begin_layout Definition
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Campo
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Campo
\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "def:Campo"

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[-0.2cm]
\end_layout

\end_inset

Un campo è un insieme che abbia almeno una operazione di somma e una di
 prodotto, includa come minimo gli elementi 0 e 1, dove 0 è l'elemento neutro
 rispetto alla somma e 1 l'elemento neutro rispetto al prodotto; l'insieme
 deve soddisfare inoltre le proprietà 
\begin_inset Formula ${\scriptstyle \left(1\right)}$
\end_inset

, 
\begin_inset Formula ${\scriptstyle \left(3\right)}$
\end_inset

 e 
\begin_inset Formula ${\scriptstyle \left(5\right)}$
\end_inset

 tra quelle elencate in precedenza.
\end_layout

\begin_layout Standard
Questo implica che un insieme che soddisfa la definizione di campo sarà
 chiuso rispetto alle operazioni di somma e prodotto.
\end_layout

\begin_layout Example
L'insieme dei numeri reali forma un campo, infatti in esso sono contenuti
 0 e 1, e per ciascun numero reale esiste un inverso definito all'interno
 dell'insieme.
\end_layout

\begin_layout Example
L'insieme degli interi non è un campo, poiché l'inverso degli elementi non
 appartiene all'insieme.
\end_layout

\begin_layout Example
Consideriamo l'insieme 
\begin_inset Formula $\mathbb{Z}_{p}$
\end_inset

 con 
\begin_inset Formula $p$
\end_inset

 un primo, e l'insieme 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

 con 
\begin_inset Formula $n$
\end_inset

 composto: il primo è un campo, mentre il secondo no, dato che i suoi elementi
 hanno inverso moltiplicativo solo se primi relativi rispetto a 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Example
Infine, l'insieme delle matrici 
\begin_inset Formula $2\times2$
\end_inset

 non forma un campo, perché non gode della proprietà commutativa e non tutti
 i suoi elementi sono invertibili.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Vale in generale la seguente proprietà, che lega i campi di Galois alla
 cardinalità degli insiemi di interi:
\end_layout

\begin_layout Definition
Per ogni intero, esprimibile come potenza di un primo, esiste esattamente
 un solo campo finito di 
\begin_inset Formula $p^{n}$
\end_inset

 elementi, chiamato campo di Galois 
\begin_inset Formula $p^{n}$
\end_inset

:
\begin_inset Formula 
\begin{equation}
\forall p^{n}\exists!\,\mathcal{GF}\left(p^{n}\right)\tc\left|\mathcal{GF}\left(p^{n}\right)\right|=p^{n}\label{eq:GF-p^n-cardinalità}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Possiamo domandarci se l'insieme dei residui modulo 
\begin_inset Formula $p^{n}$
\end_inset

 (
\begin_inset Formula $\mathbb{Z}_{p^{n}}$
\end_inset

) sia un campo di Galois: esso non lo è, perché solo i suoi elementi primi
 relativi rispetto a 
\begin_inset Formula $p^{n}$
\end_inset

 ammettono inverso.
 Usiamo la seguente procedura, che permette di costruire in generale un
 insieme che sia un campo 
\begin_inset Formula $\mathcal{GF}\left(p^{n}\right)$
\end_inset

 tramite l'impiego dei polinomi (avremmo potuto rappresentare il campo di
 Galois tramite qualsiasi simbolo di qualunque alfabeto).
\end_layout

\begin_layout Standard
Usiamo l'insieme dei residui modulo 
\begin_inset Formula $p$
\end_inset

, e l'insieme di tutti i polinomi nella variabile 
\begin_inset Formula $x$
\end_inset

, di qualunque grado, con coefficienti modulo 
\begin_inset Formula $p$
\end_inset

: 
\begin_inset Formula 
\[
\mathbb{Z}_{p},\quad\mathbb{Z}_{p}\left[x\right]=\serie{i=0}n{a_{i}x^{i}}\,\forall a_{i}\in\mathbb{Z}_{p}
\]

\end_inset

prendiamo un polinomio 
\begin_inset Formula $P\left(x\right)$
\end_inset

 di grado 
\begin_inset Formula $n$
\end_inset

, con coefficienti 
\begin_inset Formula $a_{i}$
\end_inset

 in 
\begin_inset Formula $\mathbb{Z}_{p}$
\end_inset

, che sia irriducibile (impossibile da scomporre nel prodotto di polinomi
 di grado inferiore).
\end_layout

\begin_layout Example
Prendiamo 
\begin_inset Formula $p=2$
\end_inset

, 
\begin_inset Formula $n=2$
\end_inset

.
 Scriviamo allora 
\begin_inset Formula $P\left(x\right)=\mod{x^{2}+1}2$
\end_inset


\end_layout

\begin_layout Example
Notiamo che 
\begin_inset Formula $P\left(x\right)$
\end_inset

 è riducibile, infatti 
\begin_inset Formula $\cgm{x^{2}+1}{\left(x+1\right)\cdot\left(x+1\right)}2$
\end_inset

.
\end_layout

\begin_layout Example
Invece, possiamo usare il polinomio irriducibile 
\begin_inset Formula $x^{2}+x+1$
\end_inset

 per definire 
\begin_inset Formula $\mathcal{GF}\left(4\right)$
\end_inset

.
 Per provare che un polinomio sia riducibile o meno è necessario provare
 la divisione tra polinomi, tenendo presente che le operazioni sono modulo
 
\begin_inset Formula $p$
\end_inset

, provando tutti i possibili divisori fino al grado 
\begin_inset Formula $n/2$
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Remark
\begin_inset CommandInset label
LatexCommand label
name "oss:Analogia-GF-insieme-residui"

\end_inset

Adesso definiamo il campo di Galois 
\begin_inset Formula $p^{n}$
\end_inset

 nel modo seguente:
\begin_inset Formula 
\begin{equation}
\mathcal{GF}\left(p^{n}\right)=\mod{\mathbb{Z}_{p}\left[x\right]}{P\left(x\right)}\label{eq:GF-p^n-definizione}
\end{equation}

\end_inset

Possiamo osservare un'analogia con l'insieme dei resti interi modulo 
\begin_inset Formula $p$
\end_inset

:
\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="40text%">
<column alignment="center" valignment="top" width="40text%">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
primo 
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
irriducibile 
\begin_inset Formula $P\left(x\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbb{Z}_{p}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mod{\mathbb{Z}_{p}\left[x\right]}{P\left(x\right)}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
residui della divisione per un 
\bar under
primo
\bar default
 
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
residui della divisione per un polinomio 
\bar under
irriducibile
\bar default
 
\begin_inset Formula $P\left(x\right)$
\end_inset

 di grado 
\begin_inset Formula $n$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cardinalità 
\begin_inset Formula $p$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
cardinalità 
\begin_inset Formula $p^{n}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset

Un generico polinomio ottenuto secondo questa costruzione è al massimo di
 grado 
\begin_inset Formula $n-1$
\end_inset

, essendo il resto di una divisione per un polinomio di grado 
\begin_inset Formula $n$
\end_inset

; possiamo scrivere il polinomio 
\begin_inset Formula $P\left(x\right)$
\end_inset

 nella seguente forma:
\begin_inset Formula 
\[
P\left(x\right)=a_{n-1}\cdot x^{n-1}+a_{n-2}\cdot x^{n-2}+\ldots+a_{1}\cdot x+a_{0}
\]

\end_inset

I possibili polinomi di questa forma sono 
\begin_inset Formula $p^{n}$
\end_inset

, dato che ogni singolo coefficiente è in modulo 
\begin_inset Formula $p$
\end_inset

, e si hanno in totale 
\begin_inset Formula $n$
\end_inset

 coefficienti.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Qualunque polinomio appartenente a un campo di Galois ammette inverso.
 Prendiamo dunque 
\begin_inset Formula $a\left(x\right)\in\mathcal{GF}\left(p^{n}\right)$
\end_inset

, definito come descritto in questa sezione, l'inverso di 
\begin_inset Formula $a\left(x\right)$
\end_inset

 è l'elemento 
\begin_inset Formula $a^{-1}\left(x\right)\in\mathcal{GF}\left(p^{n}\right)$
\end_inset

 tale che
\begin_inset Formula 
\[
\cgm{a^{-1}\left(x\right)\cdot a\left(x\right)}1{P\left(x\right)}
\]

\end_inset

Questo vale se 
\begin_inset Formula $\mcd{a\left(x\right)}{P\left(x\right)}=1$
\end_inset

, ma ciò è sicuramente vero perché 
\begin_inset Formula $P\left(x\right)$
\end_inset

 è definito irriducibile; se avessimo un polinomio composto (riducibile)
 al posto di 
\begin_inset Formula $P\left(x\right)$
\end_inset

, avremmo un'analogia con l'insieme 
\begin_inset Formula $\mathbb{Z}_{n}$
\end_inset

 (
\begin_inset Formula $n$
\end_inset

 composto), nel quale solo gli elementi primi relativi rispetto a 
\begin_inset Formula $n$
\end_inset

 hanno l'inverso.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Remark
Per definire un campo di Galois 
\begin_inset Formula $p^{n}$
\end_inset

 abbiamo bisogno di un polinomio irriducibile di grado 
\begin_inset Formula $n$
\end_inset

; tuttavia vi è più di un solo polinomio irriducibile, fissato il grado.
 Si verifica che, usando polinomi irriducibili diversi dello stesso grado,
 si ottiene lo stesso campo di Galois da entrambi: esso è uno e uno solo,
 da 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:GF-p^n-cardinalità"
plural "false"
caps "false"
noprefix "false"

\end_inset

.
\end_layout

\begin_layout Remark
Dal punto di vista algebrico, si ottengono due campi 
\emph on
isomorfi
\emph default
, ovvero le relazioni biunivoche tra elementi di uno stesso insieme coincidono
 con quelle dell'altro insieme.
\end_layout

\begin_layout Definition
Un campo di Galois può essere definito tramite i resti 
\begin_inset Formula $R\left(x\right)$
\end_inset

 che derivano dalla divisione dei polinomi di qualunque grado 
\begin_inset Formula $\mathbb{Z}_{p}\left[x\right]$
\end_inset

 per il polinomio irriducibile 
\begin_inset Formula $P\left(x\right)$
\end_inset

:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Campo di Galois
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Galois, campo di
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.2cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\mathcal{GF}\left(p^{n}\right)\doteq\cgm{R\left(x\right)}{\mathbb{Z}_{p}\left[x\right]}{P\left(x\right)}\label{eq:GF-p^n-residui}
\end{equation}

\end_inset


\end_layout

\begin_layout Section
Polinomi come elementi generatori
\end_layout

\begin_layout Standard
Come visto nell'Osservazione 
\begin_inset CommandInset ref
LatexCommand ref
reference "oss:Analogia-GF-insieme-residui"
plural "false"
caps "false"
noprefix "false"

\end_inset

, il grado massimo di 
\begin_inset Formula $R\left(x\right)$
\end_inset

 sarà 
\begin_inset Formula $n-1$
\end_inset

, mentre i possibili polinomi di grado fino a 
\begin_inset Formula $n-1$
\end_inset

 sono in totale 
\begin_inset Formula $p^{n}$
\end_inset

.
 Nella stessa Osservazione, abbiamo mostrato un'analogia tra l'insieme dei
 residui modulo 
\begin_inset Formula $p$
\end_inset

 e i campi di Galois definiti come residui della divisione dei polinomi
 con coefficienti modulo 
\begin_inset Formula $p$
\end_inset

, per 
\begin_inset Formula $P\left(x\right)$
\end_inset

.
\end_layout

\begin_layout Standard
Possiamo estendere questa analogia al concetto di radice primitiva 
\begin_inset CommandInset ref
LatexCommand eqref
reference "def:Radice-primitiva"
plural "false"
caps "false"
noprefix "false"

\end_inset

, ovvero anche in 
\begin_inset Formula $\mod{\mathbb{Z}_{p}\left[x\right]}{P\left(x\right)}$
\end_inset

 ci saranno dei polinomi 
\begin_inset Formula $g\left(x\right)$
\end_inset

, chiamati elementi generatori, tali che
\begin_inset Formula 
\[
\cgm{g\left(x\right)^{n}}1{P\left(x\right)}
\]

\end_inset

Il minimo 
\begin_inset Formula $n$
\end_inset

 per il quale si verifica la precedente condizione è chiamato ordine 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Ordine-di-intero"
plural "false"
caps "false"
noprefix "false"

\end_inset

 del campo, e vale:
\begin_inset Formula 
\begin{equation}
\ord{g\left(x\right)}=p^{n}-1\label{eq:Ordine-polinomio-irriducibile}
\end{equation}

\end_inset

Questo polinomio 
\begin_inset Formula $g\left(x\right)$
\end_inset

 sarà una radice primitiva del campo; il numero di radici primitive di un
 campo sarà determinato dal toziente dell'ordine, come 
\begin_inset Formula $\varphi\left(p^{n}-1\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="40text%">
<column alignment="center" valignment="top" width="40text%">
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathbb{Z}_{p}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mod{\mathbb{Z}_{p}\left[x\right]}{P\left(x\right)}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\ord{\alpha}=p-1$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\ord{g\left(x\right)}=p^{n}-1$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\varphi\left(p-1\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\varphi\left(p^{n}-1\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Remark
Chiediamoci se esiste un caso in cui tutti gli elementi di un insieme 
\begin_inset Formula $\mathbb{Z}_{p}$
\end_inset

 sono anche elementi generatori; dovrebbe valere 
\begin_inset Formula $\varphi\left(p-1\right)=p-1$
\end_inset

, ma questo è impossibile, poiché 
\begin_inset Formula $q$
\end_inset

 è primo e 
\begin_inset Formula $q-1$
\end_inset

 risulta pari.
\end_layout

\begin_layout Remark
Nel campo 
\begin_inset Formula $\mod{\mathbb{Z}_{p}\left[x\right]}{P\left(x\right)}$
\end_inset

 invece deve valere 
\begin_inset Formula $\varphi\left(p^{n}-1\right)=p^{n}-1$
\end_inset

, e ciò è possibile poiché 
\begin_inset Formula $p^{n}-1$
\end_inset

 è primo per alcuni 
\begin_inset Formula $n$
\end_inset

, a patto che valga 
\begin_inset Formula $p=2$
\end_inset

 (per esempio, con 
\begin_inset Formula $p=2$
\end_inset

 e 
\begin_inset Formula $n=5$
\end_inset

, vale 
\begin_inset Formula $p^{n}-1=31$
\end_inset

 e il campo 
\begin_inset Formula $\mathcal{GF}\left(2^{5}\right)$
\end_inset

 avrà tutti gli elementi che sono anche generatori del campo).
\end_layout

\begin_layout Example
Consideriamo
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
Il polinomio di 
\begin_inset Formula $\mathcal{GF}\left(256\right)$
\end_inset

 mostrato in questo esempio è quello utilizzato nel cifrario AES
\end_layout

\end_inset

 il campo 
\begin_inset Formula $\mathcal{GF}\left(256\right)$
\end_inset

, ovvero 
\begin_inset Formula $p=2$
\end_inset

 e 
\begin_inset Formula $n=8$
\end_inset

; possiamo definire questo campo a partire da qualunque polinomio irriducibile
 
\begin_inset Formula $P\left(x\right)$
\end_inset

 di grado 8, con i coefficienti modulo 2: prendiamo
\begin_inset Formula 
\[
P\left(x\right)=x^{8}+x^{4}+x^{3}+x^{2}+x+1
\]

\end_inset

Gli elementi del campo, resti della divisione con 
\begin_inset Formula $P\left(x\right)$
\end_inset

, avranno grado massimo 7; possiamo scriverli come
\begin_inset Formula 
\[
R\left(x\right)=b_{7}\cdot x^{7}+b_{7}\cdot x^{7}+\ldots+b_{1}\cdot x+b_{0}
\]

\end_inset

I coefficienti di un polinomio 
\begin_inset Formula $R\left(x\right)\in\mathcal{GF}\left(256\right)$
\end_inset

 sono 8 e sono tutti in modulo 2 (valgono 0 o 1): essi possono essere rappresent
ati da un Byte, e l'algoritmo dell'AES usa questa rappresentazione per effettuar
e operazioni tra polinomi, all'interno di 
\begin_inset Formula $\mathcal{GF}\left(256\right)$
\end_inset

.
\end_layout

\begin_layout Section
Cardinalità dei polinomi irriducibili
\end_layout

\begin_layout Standard
Abbiamo già concluso che il numero di elementi di un campo di Galois 
\begin_inset Formula $p^{n}$
\end_inset

 è proprio 
\begin_inset Formula $p^{n}$
\end_inset

 (
\begin_inset Formula $\left|\mathcal{GF}\left(p^{n}\right)\right|=p^{n}$
\end_inset

); per definire il campo è necessario un polinomio irriducibile 
\begin_inset Formula $P\left(x\right)$
\end_inset

 di grado 
\begin_inset Formula $n$
\end_inset

 coi coefficienti modulo 
\begin_inset Formula $p$
\end_inset

.
 Ci chiediamo il numero di tali polinomi; indichiamo allora il numero di
 polinomi irriducibili con coefficienti modulo 
\begin_inset Formula $p$
\end_inset

 e grado 
\begin_inset Formula $n$
\end_inset

 come:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Numero di polinomi irriducibili
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Polinomi irriducibili, numero
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.3cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\nirr pn=\frac{1}{n}\serie{i=1,\,i\backslash n}n{\mu\left(\frac{n}{i}\right)\cdot p^{i}}\label{eq:Numero-polinomi-irriducibili}
\end{equation}

\end_inset

La funzione 
\begin_inset Formula $\mu\left(\right)$
\end_inset

 si chiama funzione di Möbius ed è definita nel modo seguente:
\begin_inset Marginal
status collapsed

\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "0.5ex"
width "3cm"
height "1pt"

\end_inset


\series bold
\size footnotesize

\begin_inset Newline newline
\end_inset

Funzione di Möbius
\series default

\begin_inset Index idx
status open

\begin_layout Plain Layout

\size footnotesize
Möbius, funzione di
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

[0.7cm]
\end_layout

\end_inset


\begin_inset Formula 
\begin{equation}
\mu\left(n\right)=\begin{cases}
0 & n=\text{ prodotto di primi, almeno uno ripetuto}\\
1 & n=1\\
\left(-1\right)^{k} & n=\text{ prodotto di \ensuremath{k} primi distinti}
\end{cases}\label{eq:Funzione-Mobius}
\end{equation}

\end_inset


\end_layout

\begin_layout Example

\emph on
Prendiamo i polinomi con coefficienti in modulo 2 e grado 6: determinare
 il numero di polinomi irriducibili tra di essi.
\end_layout

\begin_layout Standard
\begin_inset Formula $\checked$
\end_inset

Sappiamo che il numero totale di polinomi con queste caratteristiche è 
\begin_inset Formula $p^{n}=2^{6}=64$
\end_inset

; usiamo la formula 
\begin_inset CommandInset ref
LatexCommand eqref
reference "eq:Numero-polinomi-irriducibili"
plural "false"
caps "false"
noprefix "false"

\end_inset

:
\begin_inset Formula 
\begin{align*}
\nirr 26 & =\frac{1}{6}\left(\mu\left(6\right)\cdot2^{1}+\mu\left(3\right)\cdot2^{2}+\mu\left(2\right)\cdot2^{3}+\mu\left(1\right)\cdot2^{6}\right)\\
 & =\frac{1}{6}\left(2-2^{2}-2^{3}+2^{6}\right)=\frac{54}{6}=\boxed{9}
\end{align*}

\end_inset

Abbiamo usato nella sommatoria i valori da 0 a 6 che dividono 6, ovvero
 
\begin_inset Formula $i\in\left\{ 1,\,2,\,3,\,6\right\} $
\end_inset

.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
demo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand{
\backslash
chaptername}{}
\end_layout

\end_inset


\begin_inset CommandInset index_print
LatexCommand printindex
type "idx"
name "Index"
literal "true"

\end_inset


\end_layout

\end_body
\end_document
